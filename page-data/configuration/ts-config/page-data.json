{"componentChunkName":"component---src-layouts-index-js","path":"/configuration/ts-config","result":{"data":{"site":{"siteMetadata":{"title":"ts-defold","docsLocation":"https://github.com/ts-defold/ts-defold.github.io","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"31866e51-81e9-5e66-ab58-18fbf8663d13","title":"TypeScript Config","slug":"/configuration/ts-config"},"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"title\": \"TypeScript Config\",\n  \"order\": 1\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `The `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html\"\n  }, `TypeScript`), `\nand `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://typescripttolua.github.io/docs/configuration\"\n  }, `TypeScriptToLua`), ` configuration\nis set in `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.tsconfig.json`), ` within the root of your project.`), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, `TypeScript Options`), mdx(\"p\", {\n    parentName: \"section\"\n  }, `The compiler options are configured with sane defaults that are recommended for best results when working with `, mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"span\", {\n    parentName: \"em\",\n    \"className\": \"jargon-term\"\n  }, `TSTL`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"jargon-info\"\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }, mdx(\"b\", {\n    parentName: \"span\"\n  }, `TSTL`), ` - TypeScriptToLua Transpiler`), ` An extension to the TypeScript compiler that transpiles TypeScript code to Lua`))), ` but you may want to adjust a few options, or configure to your liking.`), mdx(\"p\", {\n    parentName: \"section\"\n  }, `Some notable options include:`), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `\"types\": []`), ` - Any additional `, mdx(\"em\", {\n    parentName: \"li\"\n  }, mdx(\"span\", {\n    parentName: \"em\",\n    \"className\": \"jargon-term\"\n  }, `TSTL`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"jargon-info\"\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }, mdx(\"b\", {\n    parentName: \"span\"\n  }, `TSTL`), ` - TypeScriptToLua Transpiler`), ` An extension to the TypeScript compiler that transpiles TypeScript code to Lua`))), ` types you would like to use must be included\nhere.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `\"exclude\": []`), ` - TypeScript by default will look for types relative to the `, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, `.tsconfig.json`), `\nfile and you may need to exclude some folders from being considered as you make\nthe project structure your own. `))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, `TypeScriptToLua Options`), mdx(\"p\", {\n    parentName: \"section\"\n  }, `These options are contained under the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `\"tstl\"`), ` key in the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.tsconfig.json`), ` and are\nused to configure the behavior of the TypeScriptToLua transpiler.`), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"span\", {\n    parentName: \"em\",\n    \"className\": \"jargon-term\"\n  }, `TSTL`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"jargon-info\"\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }, mdx(\"b\", {\n    parentName: \"span\"\n  }, `TSTL`), ` - TypeScriptToLua Transpiler`), ` An extension to the TypeScript compiler that transpiles TypeScript code to Lua`))), ` comes pre-configured out of the box with some additional `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/configuration/plugins\"\n  }, `plugins`), `\nthat aid in translating TypeScript code to Lua as used by `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://defold.com/ref/stable/go/\"\n  }, `Defold`), `.`), mdx(\"p\", {\n    parentName: \"section\"\n  }, `These options are of particular concern:`), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `\"luaTarget\": \"5.1\"`), ` - Defold recommends targeting Lua 5.1 for the broadest support\nof deployment targets.`, mdx(\"br\", {\n    parentName: \"p\"\n  }), `\n`, `If you do not want to release your game on an HTML5 target, you may want to modify\nthe value to `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `\"JIT\"`), ` to bring in `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://typescripttolua.github.io/docs/caveats\"\n  }, `additional syntax features`), `.`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `\"luaLibImport\": \"require\"`), ` - This setting is used to generate the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `lualib_bundle.lua`), `\nand then insert a require statement at the top of each script to bring in the\nsupport library for TypeScript language features.`, mdx(\"br\", {\n    parentName: \"p\"\n  }), `\n`, `You may also change it to `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `require-minimal`), `, which generates a slimmer bundle\nonly based on the code you've used. However, it may not work if you are including external\nTSTL-generated Lua, for example from a `, mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"span\", {\n    parentName: \"em\",\n    \"className\": \"jargon-term\"\n  }, `npm`, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"jargon-info\"\n  }, mdx(\"span\", {\n    parentName: \"span\"\n  }, mdx(\"b\", {\n    parentName: \"span\"\n  }, `npm`), ` - Node Package Manager`), ` The package manager for the NodeJS runtime that allows installing and updating packages`))), ` package.\nYou may also define this as `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `inline`), `, though it causes your bundle size to increase\ndue to code duplication, and is generally not recommended.`)))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#typescript-options","title":"TypeScript Options"},{"url":"#typescripttolua-options","title":"TypeScriptToLua Options"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"configuration/ts-config.md","fields":{"gitLogLatestAuthorName":"Nathan Bolton","gitLogLatestAuthorEmail":"github@thinknathan.com","gitLogLatestDate":"a minute ago"}},"frontmatter":{"metaTitle":null,"showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null,"hideTitle":null}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"c6724f00495b90d874d76e3cefffcee882b6c13a","date":"2024-08-12 05:18"}},"pageContext":{"id":"31866e51-81e9-5e66-ab58-18fbf8663d13","docs":true}},"staticQueryHashes":["12478684","12478684","2882937274","2882937274","353167761","353167761"]}