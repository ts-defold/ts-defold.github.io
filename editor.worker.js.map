{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/path.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/core/token.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/editor.worker.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/process.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_a","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isIOS","_locale","undefined","_language","_translationsConfigFile","_userAgent","globals","self","global","nodeProcess","vscode","isElectronRenderer","electron","type","isElectronSandboxed","sandboxed","navigator","platform","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","console","error","userAgent","indexOf","maxTouchPoints","language","_platform","isWindows","isMacintosh","isWeb","setImmediate","postMessage","importScripts","pending","addEventListener","data","vscodeSetImmediateId","candidate","id","splice","callback","lastId","myId","_promise","Promise","resolve","then","errorHandler","unexpectedErrorHandler","stack","message","forEach","listener","onUnexpectedError","isPromiseCanceledError","transformErrorForSerialization","$isError","stacktrace","fn","_this","result","didCall","Iterable","is","thing","iterator","_empty","freeze","empty","single","element","from","iterable","isEmpty","next","done","first","some","predicate","find","filter","map","index","iterables","concatNested","reduce","reducer","initialValue","slice","arr","to","consume","atMost","Number","POSITIVE_INFINITY","consumed","equals","a","b","comparator","at","bt","ai","bi","an","bn","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","MultiDisposeError","errors","super","join","dispose","arg","isArray","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","DisposableStore","_toDispose","Set","_isDisposed","clear","values","DISABLE_DISPOSED_WARNING","warn","add","Disposable","_store","None","getAllMethodNames","obj","methods","prop","res","proto","getPrototypeOf","getOwnPropertyNames","getAllPropertyNames","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","handler","_workerId","_handler","_lastSentReq","_pendingReplies","workerId","req","String","reject","_send","vsWorker","_handleMessage","msg","seq","replyMessage","reply","err","requestMessage","handleMessage","detail","transfer","ArrayBuffer","sendMessage","requestHandlerFactory","_requestHandlerFactory","_requestHandler","_protocol","initialize","loaderConfig","hostMethods","setWorkerId","hostProxy","baseUrl","paths","vs","trustedTypesPolicy","catchError","require","config","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","fromCharCode","GraphemeBreakTree","_data","_INSTANCE","codePoint","nodeCount","nodeIndex","numberHash","val","initialHashVal","stringHash","hashVal","charCodeAt","leftRotate","bits","totalBits","delta","fill","dest","count","byteLength","toHexString","bufferOrValue","bitsize","Uint8Array","toString","padStart","char","leftPad","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","str","strLen","buff","offset","buffLen","leftoverHighSurrogate","nextCharCode","_push","_step","_wrapUp","ml","setUint32","Math","floor","bigBlock32","_bigBlock32","j","getUint32","f","k","temp","StringDiffSequence","source","characters","Int32Array","stringDiff","original","modified","pretty","ComputeDiff","changes","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","originalIndex","modifiedIndex","min","MarkNextChange","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","sequence","elements","getElements","_isStringArray","hashes","newIndex","ElementsAreEqual","_getStrictElement","getStrictElement","index1","index2","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","AddModifiedElement","AddOriginalElement","getReverseChanges","originalStartPoint","modifiedStartPoint","lastForwardChange","max","getOriginalEnd","getModifiedEnd","getChanges","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","WALKTRACE","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","OriginalElementsAreEqual","ModifiedElementsAreEqual","startStrictEqual","ElementsAreStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","test","_OriginalIsBoundary","_ModifiedIsBoundary","_OriginalRegionIsBoundary","_ModifiedRegionIsBoundary","left","right","Copy","diagonalBaseIndex","diffEven","ErrorInvalidArgType","expected","actual","determiner","replace","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","sep","pathObject","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","tail","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","end","matchedSlash","start","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","scheme","authority","query","fragment","_slash","_regexp","schemeOrData","_schemeFix","_referenceResolution","fsPath","with","uriToFsPath","Uri","match","exec","percentDecode","idx","substring","components","uri","pathFragment","newPath","file","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","startLineNumber","startColumn","endLineNumber","endColumn","range","position","containsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","computeDiff","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","shouldIgnoreTrimWhitespace","startIndex","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","createCharSequence","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","createFromDiffChange","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","createFromDiffResult","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","defaultValue","chCode","maximumRuntime","startTime","Date","now","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","prefixSum","Uint32Array","prefixSumValidIndex","insertIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","set","subarray","maxCount","_getPrefixSum","sum","getTotalSum","low","high","mid","midStop","midStart","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","_defaultConfig","maxLen","windowSize","timeBudget","_findRegexMatchEnclosingPosition","wordDefinition","text","stopPos","matchIndex","lastIndex","_defaultValue","_asciiMap","_createAsciiMap","_map","Map","asciiMap","_value","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","currentState","_stateMachine","_classifier","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","model","stateMachine","getStateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","nextState","BasicInplaceReplace","_defaultValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","Node","Undefined","prev","LinkedList","_first","_last","_size","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","anchor","hasPerformanceNow","performance","highResolution","_highResolution","_startTime","_now","_stopTime","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","fire","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","signal","any","events","split","isT","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","removeEventListener","toPromise","_listenerCount","_invocationCount","_elapsedOverall","_name","_idPool","listenerCount","_stopWatch","elapsed","info","toFixed","options","_disposed","_options","_leakageMon","_perfMon","_profName","_event","_listeners","firstListener","remove","onFirstListenerDidAdd","onListenerDidAdd","removeMonitor","check","size","_b","_deliveryQueue","shift","stop","_c","_d","_e","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","KeyCodeUtils","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","InlayHintKind","InlineCompletionTriggerKind","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","define","uiLabel","usUserSettingsLabel","generalUserSettingsLabel","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","selectionsEqual","getDirection","sel","direction","Token","_tokenBrand","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","_acceptDeleteRange","_acceptInsertText","eolLength","linesLength","lineStartValues","lineIndex","newValue","changeValue","_setLineText","removeValues","insertText","insertLines","newLengths","getText","wordAtText","getWordAtText","textOffset","t1","prevRegexIndex","regexIndex","thisMatch","word","flags","ignoreCase","multiline","unicode","ensureValidWordDefinition","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","content","ranges","words","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","_ensureLineStarts","getPrefixSum","getIndexOf","lineLength","isIPosition","hasChanged","maxCharacter","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","all","keys","EOL","strURL","onEvents","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","getLinesContent","identical","_modelsAreIdentical","originalLineCount","modelUrl","edits","lastEol","sort","compareRangesUsingStarts","getValueInRange","_diffLimit","editOffset","offsetAt","lift","positionAt","newEdit","computeLinks","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","_suggestionsLimit","duration","getLineWords","selectionText","wordRange","getWordAtPosition","navigateValueSet","createData","foreignHostMethods","ctx","fhr","getMirrorModels","_getModels","monaco","editor","languages","Emitter","KeyMod","Range","Selection","initialized","foreignModule","simpleWorker","onmessage","safeProcess","sandboxProcess","g","Function","window"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Plx8\");\n","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar _a;\n\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = typeof self === 'object' ? self : typeof global === 'object' ? global : {};\nlet nodeProcess = undefined;\n\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n  // Native environment (sandboxed)\n  nodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n  // Native environment (non-sandboxed)\n  nodeProcess = process;\n}\n\nconst isElectronRenderer = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string' && nodeProcess.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.sandboxed);\nexport const browserCodeLoadingCacheStrategy = (() => {\n  // Always enabled when sandbox is enabled\n  if (isElectronSandboxed) {\n    return 'bypassHeatCheck';\n  } // Otherwise, only enabled conditionally\n\n\n  const env = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.env['VSCODE_BROWSER_CODE_LOADING'];\n\n  if (typeof env === 'string') {\n    if (env === 'none' || env === 'code' || env === 'bypassHeatCheck' || env === 'bypassHeatCheckAndEagerCompile') {\n      return env;\n    }\n\n    return 'bypassHeatCheck';\n  }\n\n  return undefined;\n})();\nexport const isPreferringBrowserCodeLoad = typeof browserCodeLoadingCacheStrategy === 'string'; // Web environment\n\nif (typeof navigator === 'object' && !isElectronRenderer) {\n  _userAgent = navigator.userAgent;\n  _isWindows = _userAgent.indexOf('Windows') >= 0;\n  _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n  _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n  _isLinux = _userAgent.indexOf('Linux') >= 0;\n  _isWeb = true;\n  _locale = navigator.language;\n  _language = _locale;\n} // Native environment\nelse if (typeof nodeProcess === 'object') {\n  _isWindows = nodeProcess.platform === 'win32';\n  _isMacintosh = nodeProcess.platform === 'darwin';\n  _isLinux = nodeProcess.platform === 'linux';\n  _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n  _locale = LANGUAGE_DEFAULT;\n  _language = LANGUAGE_DEFAULT;\n  const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\n  if (rawNlsConfig) {\n    try {\n      const nlsConfig = JSON.parse(rawNlsConfig);\n      const resolved = nlsConfig.availableLanguages['*'];\n      _locale = nlsConfig.locale; // VSCode's default language is 'en'\n\n      _language = resolved ? resolved : LANGUAGE_DEFAULT;\n      _translationsConfigFile = nlsConfig._translationsConfigFile;\n    } catch (e) {}\n  }\n\n  _isNative = true;\n} // Unknown environment\nelse {\n  console.error('Unable to resolve platform.');\n}\n\nlet _platform = 0\n/* Web */\n;\n\nif (_isMacintosh) {\n  _platform = 1\n  /* Mac */\n  ;\n} else if (_isWindows) {\n  _platform = 3\n  /* Windows */\n  ;\n} else if (_isLinux) {\n  _platform = 2\n  /* Linux */\n  ;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\nexport const setImmediate = function defineSetImmediate() {\n  if (globals.setImmediate) {\n    return globals.setImmediate.bind(globals);\n  }\n\n  if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n    let pending = [];\n    globals.addEventListener('message', e => {\n      if (e.data && e.data.vscodeSetImmediateId) {\n        for (let i = 0, len = pending.length; i < len; i++) {\n          const candidate = pending[i];\n\n          if (candidate.id === e.data.vscodeSetImmediateId) {\n            pending.splice(i, 1);\n            candidate.callback();\n            return;\n          }\n        }\n      }\n    });\n    let lastId = 0;\n    return callback => {\n      const myId = ++lastId;\n      pending.push({\n        id: myId,\n        callback: callback\n      });\n      globals.postMessage({\n        vscodeSetImmediateId: myId\n      }, '*');\n    };\n  }\n\n  if (typeof (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.nextTick) === 'function') {\n    return nodeProcess.nextTick.bind(nodeProcess);\n  }\n\n  const _promise = Promise.resolve();\n\n  return callback => _promise.then(callback);\n}();\nexport const OS = _isMacintosh || _isIOS ? 2\n/* Macintosh */\n: _isWindows ? 1\n/* Windows */\n: 3\n/* Linux */\n;\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n  if (!_isLittleEndianComputed) {\n    _isLittleEndianComputed = true;\n    const test = new Uint8Array(2);\n    test[0] = 1;\n    test[1] = 2;\n    const view = new Uint16Array(test.buffer);\n    _isLittleEndian = view[0] === (2 << 8) + 1;\n  }\n\n  return _isLittleEndian;\n}","// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n  constructor() {\n    this.listeners = [];\n\n    this.unexpectedErrorHandler = function (e) {\n      setTimeout(() => {\n        if (e.stack) {\n          throw new Error(e.message + '\\n\\n' + e.stack);\n        }\n\n        throw e;\n      }, 0);\n    };\n  }\n\n  emit(e) {\n    this.listeners.forEach(listener => {\n      listener(e);\n    });\n  }\n\n  onUnexpectedError(e) {\n    this.unexpectedErrorHandler(e);\n    this.emit(e);\n  } // For external errors, we don't want the listeners to be called\n\n\n  onUnexpectedExternalError(e) {\n    this.unexpectedErrorHandler(e);\n  }\n\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedError(e);\n  }\n\n  return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedExternalError(e);\n  }\n\n  return undefined;\n}\nexport function transformErrorForSerialization(error) {\n  if (error instanceof Error) {\n    let {\n      name,\n      message\n    } = error;\n    const stack = error.stacktrace || error.stack;\n    return {\n      $isError: true,\n      name,\n      message,\n      stack\n    };\n  } // return as is\n\n\n  return error;\n}\nconst canceledName = 'Canceled';\n/**\r\n * Checks if the given error is a promise in canceled state\r\n */\n\nexport function isPromiseCanceledError(error) {\n  return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\r\n * Returns an error that signals cancellation.\r\n */\n\nexport function canceled() {\n  const error = new Error(canceledName);\n  error.name = error.message;\n  return error;\n}\nexport function illegalArgument(name) {\n  if (name) {\n    return new Error(`Illegal argument: ${name}`);\n  } else {\n    return new Error('Illegal argument');\n  }\n}\nexport function illegalState(name) {\n  if (name) {\n    return new Error(`Illegal state: ${name}`);\n  } else {\n    return new Error('Illegal state');\n  }\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n  const _this = this;\n\n  let didCall = false;\n  let result;\n  return function () {\n    if (didCall) {\n      return result;\n    }\n\n    didCall = true;\n    result = fn.apply(_this, arguments);\n    return result;\n  };\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n\n(function (Iterable) {\n  function is(thing) {\n    return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n  }\n\n  Iterable.is = is;\n\n  const _empty = Object.freeze([]);\n\n  function empty() {\n    return _empty;\n  }\n\n  Iterable.empty = empty;\n\n  function* single(element) {\n    yield element;\n  }\n\n  Iterable.single = single;\n\n  function from(iterable) {\n    return iterable || _empty;\n  }\n\n  Iterable.from = from;\n\n  function isEmpty(iterable) {\n    return !iterable || iterable[Symbol.iterator]().next().done === true;\n  }\n\n  Iterable.isEmpty = isEmpty;\n\n  function first(iterable) {\n    return iterable[Symbol.iterator]().next().value;\n  }\n\n  Iterable.first = first;\n\n  function some(iterable, predicate) {\n    for (const element of iterable) {\n      if (predicate(element)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  Iterable.some = some;\n\n  function find(iterable, predicate) {\n    for (const element of iterable) {\n      if (predicate(element)) {\n        return element;\n      }\n    }\n\n    return undefined;\n  }\n\n  Iterable.find = find;\n\n  function* filter(iterable, predicate) {\n    for (const element of iterable) {\n      if (predicate(element)) {\n        yield element;\n      }\n    }\n  }\n\n  Iterable.filter = filter;\n\n  function* map(iterable, fn) {\n    let index = 0;\n\n    for (const element of iterable) {\n      yield fn(element, index++);\n    }\n  }\n\n  Iterable.map = map;\n\n  function* concat(...iterables) {\n    for (const iterable of iterables) {\n      for (const element of iterable) {\n        yield element;\n      }\n    }\n  }\n\n  Iterable.concat = concat;\n\n  function* concatNested(iterables) {\n    for (const iterable of iterables) {\n      for (const element of iterable) {\n        yield element;\n      }\n    }\n  }\n\n  Iterable.concatNested = concatNested;\n\n  function reduce(iterable, reducer, initialValue) {\n    let value = initialValue;\n\n    for (const element of iterable) {\n      value = reducer(value, element);\n    }\n\n    return value;\n  }\n\n  Iterable.reduce = reduce;\n  /**\r\n   * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\r\n   */\n\n  function* slice(arr, from, to = arr.length) {\n    if (from < 0) {\n      from += arr.length;\n    }\n\n    if (to < 0) {\n      to += arr.length;\n    } else if (to > arr.length) {\n      to = arr.length;\n    }\n\n    for (; from < to; from++) {\n      yield arr[from];\n    }\n  }\n\n  Iterable.slice = slice;\n  /**\r\n   * Consumes `atMost` elements from iterable and returns the consumed elements,\r\n   * and an iterable for the rest of the elements.\r\n   */\n\n  function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n    const consumed = [];\n\n    if (atMost === 0) {\n      return [consumed, iterable];\n    }\n\n    const iterator = iterable[Symbol.iterator]();\n\n    for (let i = 0; i < atMost; i++) {\n      const next = iterator.next();\n\n      if (next.done) {\n        return [consumed, Iterable.empty()];\n      }\n\n      consumed.push(next.value);\n    }\n\n    return [consumed, {\n      [Symbol.iterator]() {\n        return iterator;\n      }\n\n    }];\n  }\n\n  Iterable.consume = consume;\n  /**\r\n   * Returns whether the iterables are the same length and all items are\r\n   * equal using the comparator function.\r\n   */\n\n  function equals(a, b, comparator = (at, bt) => at === bt) {\n    const ai = a[Symbol.iterator]();\n    const bi = b[Symbol.iterator]();\n\n    while (true) {\n      const an = ai.next();\n      const bn = bi.next();\n\n      if (an.done !== bn.done) {\n        return false;\n      } else if (an.done) {\n        return true;\n      } else if (!comparator(an.value, bn.value)) {\n        return false;\n      }\n    }\n  }\n\n  Iterable.equals = equals;\n})(Iterable || (Iterable = {}));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\r\n * Enables logging of potentially leaked disposables.\r\n *\r\n * A disposable is considered leaked if it is not disposed or not registered as the child of\r\n * another disposable. This tracking is very simple an only works for classes that either\r\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\r\n */\n\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n  disposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n  const __is_disposable_tracked__ = '__is_disposable_tracked__';\n  setDisposableTracker(new class {\n    trackDisposable(x) {\n      const stack = new Error('Potentially leaked disposable').stack;\n      setTimeout(() => {\n        if (!x[__is_disposable_tracked__]) {\n          console.log(stack);\n        }\n      }, 3000);\n    }\n\n    setParent(child, parent) {\n      if (child && child !== Disposable.None) {\n        try {\n          child[__is_disposable_tracked__] = true;\n        } catch (_a) {// noop\n        }\n      }\n    }\n\n    markAsDisposed(disposable) {\n      if (disposable && disposable !== Disposable.None) {\n        try {\n          disposable[__is_disposable_tracked__] = true;\n        } catch (_a) {// noop\n        }\n      }\n    }\n\n    markAsSingleton(disposable) {}\n\n  }());\n}\n\nfunction trackDisposable(x) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n  return x;\n}\n\nfunction markAsDisposed(disposable) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child, parent) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children, parent) {\n  if (!disposableTracker) {\n    return;\n  }\n\n  for (const child of children) {\n    disposableTracker.setParent(child, parent);\n  }\n}\n/**\r\n * Indicates that the given object is a singleton which does not need to be disposed.\r\n*/\n\n\nexport function markAsSingleton(singleton) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n  return singleton;\n}\nexport class MultiDisposeError extends Error {\n  constructor(errors) {\n    super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n    this.errors = errors;\n  }\n\n}\nexport function isDisposable(thing) {\n  return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n  if (Iterable.is(arg)) {\n    let errors = [];\n\n    for (const d of arg) {\n      if (d) {\n        try {\n          d.dispose();\n        } catch (e) {\n          errors.push(e);\n        }\n      }\n    }\n\n    if (errors.length === 1) {\n      throw errors[0];\n    } else if (errors.length > 1) {\n      throw new MultiDisposeError(errors);\n    }\n\n    return Array.isArray(arg) ? [] : arg;\n  } else if (arg) {\n    arg.dispose();\n    return arg;\n  }\n}\nexport function combinedDisposable(...disposables) {\n  const parent = toDisposable(() => dispose(disposables));\n  setParentOfDisposables(disposables, parent);\n  return parent;\n}\nexport function toDisposable(fn) {\n  const self = trackDisposable({\n    dispose: once(() => {\n      markAsDisposed(self);\n      fn();\n    })\n  });\n  return self;\n}\nexport class DisposableStore {\n  constructor() {\n    this._toDispose = new Set();\n    this._isDisposed = false;\n    trackDisposable(this);\n  }\n  /**\r\n   * Dispose of all registered disposables and mark this object as disposed.\r\n   *\r\n   * Any future disposables added to this object will be disposed of on `add`.\r\n   */\n\n\n  dispose() {\n    if (this._isDisposed) {\n      return;\n    }\n\n    markAsDisposed(this);\n    this._isDisposed = true;\n    this.clear();\n  }\n  /**\r\n   * Dispose of all registered disposables but do not mark this object as disposed.\r\n   */\n\n\n  clear() {\n    try {\n      dispose(this._toDispose.values());\n    } finally {\n      this._toDispose.clear();\n    }\n  }\n\n  add(o) {\n    if (!o) {\n      return o;\n    }\n\n    if (o === this) {\n      throw new Error('Cannot register a disposable on itself!');\n    }\n\n    setParentOfDisposable(o, this);\n\n    if (this._isDisposed) {\n      if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n        console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n      }\n    } else {\n      this._toDispose.add(o);\n    }\n\n    return o;\n  }\n\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n  constructor() {\n    this._store = new DisposableStore();\n    trackDisposable(this);\n    setParentOfDisposable(this._store, this);\n  }\n\n  dispose() {\n    markAsDisposed(this);\n\n    this._store.dispose();\n  }\n\n  _register(o) {\n    if (o === this) {\n      throw new Error('Cannot register a disposable on itself!');\n    }\n\n    return this._store.add(o);\n  }\n\n}\nDisposable.None = Object.freeze({\n  dispose() {}\n\n});\n/**\r\n * Manages the lifecycle of a disposable value that may be changed.\r\n *\r\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\r\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\r\n */\n\nexport class MutableDisposable {\n  constructor() {\n    this._isDisposed = false;\n    trackDisposable(this);\n  }\n\n  get value() {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  set value(value) {\n    var _a;\n\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n\n    (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n\n    if (value) {\n      setParentOfDisposable(value, this);\n    }\n\n    this._value = value;\n  }\n\n  clear() {\n    this.value = undefined;\n  }\n\n  dispose() {\n    var _a;\n\n    this._isDisposed = true;\n    markAsDisposed(this);\n    (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n    this._value = undefined;\n  }\n  /**\r\n   * Clears the value, but does not dispose it.\r\n   * The old value is returned.\r\n  */\n\n\n  clearAndLeak() {\n    const oldValue = this._value;\n    this._value = undefined;\n\n    if (oldValue) {\n      setParentOfDisposable(oldValue, null);\n    }\n\n    return oldValue;\n  }\n\n}\nexport class ImmortalReference {\n  constructor(object) {\n    this.object = object;\n  }\n\n  dispose() {}\n\n}","/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\n\nexport function isString(str) {\n  return typeof str === 'string';\n}\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\n\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\n\nexport function isNumber(obj) {\n  return typeof obj === 'number' && !isNaN(obj);\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\n\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\n\nexport function isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\n\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nexport function assertType(condition, type) {\n  if (!condition) {\n    throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n  }\n}\n/**\r\n * Asserts that the argument passed in is neither undefined nor null.\r\n */\n\nexport function assertIsDefined(arg) {\n  if (isUndefinedOrNull(arg)) {\n    throw new Error('Assertion Failed: argument is undefined or null');\n  }\n\n  return arg;\n}\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\n\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\nexport function validateConstraints(args, constraints) {\n  const len = Math.min(args.length, constraints.length);\n\n  for (let i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (typeof arg !== constraint) {\n      throw new Error(`argument does not match constraint: typeof ${constraint}`);\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {// ignore\n    }\n\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n\n    throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n  }\n}\nexport function getAllPropertyNames(obj) {\n  let res = [];\n  let proto = Object.getPrototypeOf(obj);\n\n  while (Object.prototype !== proto) {\n    res = res.concat(Object.getOwnPropertyNames(proto));\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return res;\n}\nexport function getAllMethodNames(obj) {\n  const methods = [];\n\n  for (const prop of getAllPropertyNames(obj)) {\n    if (typeof obj[prop] === 'function') {\n      methods.push(prop);\n    }\n  }\n\n  return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n  const createProxyMethod = method => {\n    return function () {\n      const args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n\n  let result = {};\n\n  for (const methodName of methodNames) {\n    result[methodName] = createProxyMethod(methodName);\n  }\n\n  return result;\n}\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\n\nexport function withNullAsUndefined(x) {\n  return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n  throw new Error(message);\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Disposable } from '../lifecycle.js';\nimport { isWeb } from '../platform.js';\nimport * as types from '../types.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n  if (!isWeb) {\n    // running tests\n    return;\n  }\n\n  if (!webWorkerWarningLogged) {\n    webWorkerWarningLogged = true;\n    console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n  }\n\n  console.warn(err.message);\n}\n\nclass SimpleWorkerProtocol {\n  constructor(handler) {\n    this._workerId = -1;\n    this._handler = handler;\n    this._lastSentReq = 0;\n    this._pendingReplies = Object.create(null);\n  }\n\n  setWorkerId(workerId) {\n    this._workerId = workerId;\n  }\n\n  sendMessage(method, args) {\n    let req = String(++this._lastSentReq);\n    return new Promise((resolve, reject) => {\n      this._pendingReplies[req] = {\n        resolve: resolve,\n        reject: reject\n      };\n\n      this._send({\n        vsWorker: this._workerId,\n        req: req,\n        method: method,\n        args: args\n      });\n    });\n  }\n\n  handleMessage(message) {\n    if (!message || !message.vsWorker) {\n      return;\n    }\n\n    if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n      return;\n    }\n\n    this._handleMessage(message);\n  }\n\n  _handleMessage(msg) {\n    if (msg.seq) {\n      let replyMessage = msg;\n\n      if (!this._pendingReplies[replyMessage.seq]) {\n        console.warn('Got reply to unknown seq');\n        return;\n      }\n\n      let reply = this._pendingReplies[replyMessage.seq];\n      delete this._pendingReplies[replyMessage.seq];\n\n      if (replyMessage.err) {\n        let err = replyMessage.err;\n\n        if (replyMessage.err.$isError) {\n          err = new Error();\n          err.name = replyMessage.err.name;\n          err.message = replyMessage.err.message;\n          err.stack = replyMessage.err.stack;\n        }\n\n        reply.reject(err);\n        return;\n      }\n\n      reply.resolve(replyMessage.res);\n      return;\n    }\n\n    let requestMessage = msg;\n    let req = requestMessage.req;\n\n    let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\n    result.then(r => {\n      this._send({\n        vsWorker: this._workerId,\n        seq: req,\n        res: r,\n        err: undefined\n      });\n    }, e => {\n      if (e.detail instanceof Error) {\n        // Loading errors have a detail property that points to the actual error\n        e.detail = transformErrorForSerialization(e.detail);\n      }\n\n      this._send({\n        vsWorker: this._workerId,\n        seq: req,\n        res: undefined,\n        err: transformErrorForSerialization(e)\n      });\n    });\n  }\n\n  _send(msg) {\n    let transfer = [];\n\n    if (msg.req) {\n      const m = msg;\n\n      for (let i = 0; i < m.args.length; i++) {\n        if (m.args[i] instanceof ArrayBuffer) {\n          transfer.push(m.args[i]);\n        }\n      }\n    } else {\n      const m = msg;\n\n      if (m.res instanceof ArrayBuffer) {\n        transfer.push(m.res);\n      }\n    }\n\n    this._handler.sendMessage(msg, transfer);\n  }\n\n}\n/**\r\n * Main thread side\r\n */\n\n\nexport class SimpleWorkerClient extends Disposable {\n  constructor(workerFactory, moduleId, host) {\n    super();\n    let lazyProxyReject = null;\n    this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', msg => {\n      this._protocol.handleMessage(msg);\n    }, err => {\n      // in Firefox, web workers fail lazily :(\n      // we will reject the proxy\n      if (lazyProxyReject) {\n        lazyProxyReject(err);\n      }\n    }));\n    this._protocol = new SimpleWorkerProtocol({\n      sendMessage: (msg, transfer) => {\n        this._worker.postMessage(msg, transfer);\n      },\n      handleMessage: (method, args) => {\n        if (typeof host[method] !== 'function') {\n          return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n        }\n\n        try {\n          return Promise.resolve(host[method].apply(host, args));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n    });\n\n    this._protocol.setWorkerId(this._worker.getId()); // Gather loader configuration\n\n\n    let loaderConfiguration = null;\n\n    if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n      // Get the configuration from the Monaco AMD Loader\n      loaderConfiguration = self.require.getConfig();\n    } else if (typeof self.requirejs !== 'undefined') {\n      // Get the configuration from requirejs\n      loaderConfiguration = self.requirejs.s.contexts._.config;\n    }\n\n    const hostMethods = types.getAllMethodNames(host); // Send initialize message\n\n    this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [this._worker.getId(), JSON.parse(JSON.stringify(loaderConfiguration)), moduleId, hostMethods]); // Create proxy to loaded code\n\n    const proxyMethodRequest = (method, args) => {\n      return this._request(method, args);\n    };\n\n    this._lazyProxy = new Promise((resolve, reject) => {\n      lazyProxyReject = reject;\n\n      this._onModuleLoaded.then(availableMethods => {\n        resolve(types.createProxyObject(availableMethods, proxyMethodRequest));\n      }, e => {\n        reject(e);\n\n        this._onError('Worker failed to load ' + moduleId, e);\n      });\n    });\n  }\n\n  getProxyObject() {\n    return this._lazyProxy;\n  }\n\n  _request(method, args) {\n    return new Promise((resolve, reject) => {\n      this._onModuleLoaded.then(() => {\n        this._protocol.sendMessage(method, args).then(resolve, reject);\n      }, reject);\n    });\n  }\n\n  _onError(message, error) {\n    console.error(message);\n    console.info(error);\n  }\n\n}\n/**\r\n * Worker side\r\n */\n\nexport class SimpleWorkerServer {\n  constructor(postMessage, requestHandlerFactory) {\n    this._requestHandlerFactory = requestHandlerFactory;\n    this._requestHandler = null;\n    this._protocol = new SimpleWorkerProtocol({\n      sendMessage: (msg, transfer) => {\n        postMessage(msg, transfer);\n      },\n      handleMessage: (method, args) => this._handleMessage(method, args)\n    });\n  }\n\n  onmessage(msg) {\n    this._protocol.handleMessage(msg);\n  }\n\n  _handleMessage(method, args) {\n    if (method === INITIALIZE) {\n      return this.initialize(args[0], args[1], args[2], args[3]);\n    }\n\n    if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n\n    try {\n      return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  initialize(workerId, loaderConfig, moduleId, hostMethods) {\n    this._protocol.setWorkerId(workerId);\n\n    const proxyMethodRequest = (method, args) => {\n      return this._protocol.sendMessage(method, args);\n    };\n\n    const hostProxy = types.createProxyObject(hostMethods, proxyMethodRequest);\n\n    if (this._requestHandlerFactory) {\n      // static request handler\n      this._requestHandler = this._requestHandlerFactory(hostProxy);\n      return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n    }\n\n    if (loaderConfig) {\n      // Remove 'baseUrl', handling it is beyond scope for now\n      if (typeof loaderConfig.baseUrl !== 'undefined') {\n        delete loaderConfig['baseUrl'];\n      }\n\n      if (typeof loaderConfig.paths !== 'undefined') {\n        if (typeof loaderConfig.paths.vs !== 'undefined') {\n          delete loaderConfig.paths['vs'];\n        }\n      }\n\n      if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n        // don't use, it has been destroyed during serialize\n        delete loaderConfig['trustedTypesPolicy'];\n      } // Since this is in a web worker, enable catching errors\n\n\n      loaderConfig.catchError = true;\n\n      self.require.config(loaderConfig);\n    }\n\n    return new Promise((resolve, reject) => {\n      // Use the global require to be sure to get the global config\n      self.require([moduleId], module => {\n        this._requestHandler = module.create(hostProxy);\n\n        if (!this._requestHandler) {\n          reject(new Error(`No RequestHandler!`));\n          return;\n        }\n\n        resolve(types.getAllMethodNames(this._requestHandler));\n      }, reject);\n    });\n  }\n\n}\n/**\r\n * Called on the worker side\r\n */\n\nexport function create(postMessage) {\n  return new SimpleWorkerServer(postMessage, null);\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n\n/**\r\n * Represents information about a specific difference between two sequences.\r\n */\nexport class DiffChange {\n  /**\r\n   * Constructs a new DiffChange with the given sequence information\r\n   * and content.\r\n   */\n  constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n    //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n    this.originalStart = originalStart;\n    this.originalLength = originalLength;\n    this.modifiedStart = modifiedStart;\n    this.modifiedLength = modifiedLength;\n  }\n  /**\r\n   * The end point (exclusive) of the change in the original sequence.\r\n   */\n\n\n  getOriginalEnd() {\n    return this.originalStart + this.originalLength;\n  }\n  /**\r\n   * The end point (exclusive) of the change in the modified sequence.\r\n   */\n\n\n  getModifiedEnd() {\n    return this.modifiedStart + this.modifiedLength;\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport function isFalsyOrWhitespace(str) {\n  if (!str || typeof str !== 'string') {\n    return true;\n  }\n\n  return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\r\n * Helper to produce a string with a variable number of arguments. Insert variable segments\r\n * into the string using the {n} notation where N is the index of the argument following the string.\r\n * @param value string to which formatting is applied\r\n * @param args replacements for {n}-entries\r\n */\n\nexport function format(value, ...args) {\n  if (args.length === 0) {\n    return value;\n  }\n\n  return value.replace(_formatRegexp, function (match, group) {\n    const idx = parseInt(group, 10);\n    return isNaN(idx) || idx < 0 || idx >= args.length ? match : args[idx];\n  });\n}\n/**\r\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\r\n * being used e.g. in HTMLElement.innerHTML.\r\n */\n\nexport function escape(html) {\n  return html.replace(/[<>&]/g, function (match) {\n    switch (match) {\n      case '<':\n        return '&lt;';\n\n      case '>':\n        return '&gt;';\n\n      case '&':\n        return '&amp;';\n\n      default:\n        return match;\n    }\n  });\n}\n/**\r\n * Escapes regular expression characters in a given string\r\n */\n\nexport function escapeRegExpCharacters(value) {\n  return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\r\n * Removes all occurrences of needle from the beginning and end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim (default is a blank)\r\n */\n\nexport function trim(haystack, needle = ' ') {\n  const trimmed = ltrim(haystack, needle);\n  return rtrim(trimmed, needle);\n}\n/**\r\n * Removes all occurrences of needle from the beginning of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\n\nexport function ltrim(haystack, needle) {\n  if (!haystack || !needle) {\n    return haystack;\n  }\n\n  const needleLen = needle.length;\n\n  if (needleLen === 0 || haystack.length === 0) {\n    return haystack;\n  }\n\n  let offset = 0;\n\n  while (haystack.indexOf(needle, offset) === offset) {\n    offset = offset + needleLen;\n  }\n\n  return haystack.substring(offset);\n}\n/**\r\n * Removes all occurrences of needle from the end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\n\nexport function rtrim(haystack, needle) {\n  if (!haystack || !needle) {\n    return haystack;\n  }\n\n  const needleLen = needle.length,\n        haystackLen = haystack.length;\n\n  if (needleLen === 0 || haystackLen === 0) {\n    return haystack;\n  }\n\n  let offset = haystackLen,\n      idx = -1;\n\n  while (true) {\n    idx = haystack.lastIndexOf(needle, offset - 1);\n\n    if (idx === -1 || idx + needleLen !== offset) {\n      break;\n    }\n\n    if (idx === 0) {\n      return '';\n    }\n\n    offset = idx;\n  }\n\n  return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n  return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n  return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n  if (!searchString) {\n    throw new Error('Cannot create regex from empty string');\n  }\n\n  if (!isRegex) {\n    searchString = escapeRegExpCharacters(searchString);\n  }\n\n  if (options.wholeWord) {\n    if (!/\\B/.test(searchString.charAt(0))) {\n      searchString = '\\\\b' + searchString;\n    }\n\n    if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n      searchString = searchString + '\\\\b';\n    }\n  }\n\n  let modifiers = '';\n\n  if (options.global) {\n    modifiers += 'g';\n  }\n\n  if (!options.matchCase) {\n    modifiers += 'i';\n  }\n\n  if (options.multiline) {\n    modifiers += 'm';\n  }\n\n  if (options.unicode) {\n    modifiers += 'u';\n  }\n\n  return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n  // Exit early if it's one of these special cases which are meant to match\n  // against an empty string\n  if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n    return false;\n  } // We check against an empty string. If the regular expression doesn't advance\n  // (e.g. ends in an endless loop) it will match an empty string.\n\n\n  const match = regexp.exec('');\n  return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n  return (regexp.global ? 'g' : '') + (regexp.ignoreCase ? 'i' : '') + (regexp.multiline ? 'm' : '') + (regexp\n  /* standalone editor compilation */\n  .unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n  return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\r\n * Returns first index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\n\nexport function firstNonWhitespaceIndex(str) {\n  for (let i = 0, len = str.length; i < len; i++) {\n    const chCode = str.charCodeAt(i);\n\n    if (chCode !== 32\n    /* Space */\n    && chCode !== 9\n    /* Tab */\n    ) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\r\n * Returns the leading whitespace of the string.\r\n * If the string contains only whitespaces, returns entire string\r\n */\n\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n  for (let i = start; i < end; i++) {\n    const chCode = str.charCodeAt(i);\n\n    if (chCode !== 32\n    /* Space */\n    && chCode !== 9\n    /* Tab */\n    ) {\n      return str.substring(start, i);\n    }\n  }\n\n  return str.substring(start, end);\n}\n/**\r\n * Returns last index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\n\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n  for (let i = startIndex; i >= 0; i--) {\n    const chCode = str.charCodeAt(i);\n\n    if (chCode !== 32\n    /* Space */\n    && chCode !== 9\n    /* Tab */\n    ) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function compare(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n  for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n    let codeA = a.charCodeAt(aStart);\n    let codeB = b.charCodeAt(bStart);\n\n    if (codeA < codeB) {\n      return -1;\n    } else if (codeA > codeB) {\n      return 1;\n    }\n  }\n\n  const aLen = aEnd - aStart;\n  const bLen = bEnd - bStart;\n\n  if (aLen < bLen) {\n    return -1;\n  } else if (aLen > bLen) {\n    return 1;\n  }\n\n  return 0;\n}\nexport function compareIgnoreCase(a, b) {\n  return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n  for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n    let codeA = a.charCodeAt(aStart);\n    let codeB = b.charCodeAt(bStart);\n\n    if (codeA === codeB) {\n      // equal\n      continue;\n    }\n\n    const diff = codeA - codeB;\n\n    if (diff === 32 && isUpperAsciiLetter(codeB)) {\n      //codeB =[65-90] && codeA =[97-122]\n      continue;\n    } else if (diff === -32 && isUpperAsciiLetter(codeA)) {\n      //codeB =[97-122] && codeA =[65-90]\n      continue;\n    }\n\n    if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n      //\n      return diff;\n    } else {\n      return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n    }\n  }\n\n  const aLen = aEnd - aStart;\n  const bLen = bEnd - bStart;\n\n  if (aLen < bLen) {\n    return -1;\n  } else if (aLen > bLen) {\n    return 1;\n  }\n\n  return 0;\n}\nexport function isLowerAsciiLetter(code) {\n  return code >= 97\n  /* a */\n  && code <= 122\n  /* z */\n  ;\n}\nexport function isUpperAsciiLetter(code) {\n  return code >= 65\n  /* A */\n  && code <= 90\n  /* Z */\n  ;\n}\n\nfunction isAsciiLetter(code) {\n  return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a, b) {\n  return a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a, b, stopAt = a.length) {\n  for (let i = 0; i < stopAt; i++) {\n    const codeA = a.charCodeAt(i);\n    const codeB = b.charCodeAt(i);\n\n    if (codeA === codeB) {\n      continue;\n    } // a-z A-Z\n\n\n    if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n      const diff = Math.abs(codeA - codeB);\n\n      if (diff !== 0 && diff !== 32) {\n        return false;\n      }\n    } // Any other charcode\n    else {\n      if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nexport function startsWithIgnoreCase(str, candidate) {\n  const candidateLength = candidate.length;\n\n  if (candidate.length > str.length) {\n    return false;\n  }\n\n  return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\r\n * @returns the length of the common prefix of the two strings.\r\n */\n\nexport function commonPrefixLength(a, b) {\n  let i,\n      len = Math.min(a.length, b.length);\n\n  for (i = 0; i < len; i++) {\n    if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n      return i;\n    }\n  }\n\n  return len;\n}\n/**\r\n * @returns the length of the common suffix of the two strings.\r\n */\n\nexport function commonSuffixLength(a, b) {\n  let i,\n      len = Math.min(a.length, b.length);\n  const aLastIndex = a.length - 1;\n  const bLastIndex = b.length - 1;\n\n  for (i = 0; i < len; i++) {\n    if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n      return i;\n    }\n  }\n\n  return len;\n}\n/**\r\n * See http://en.wikipedia.org/wiki/Surrogate_pair\r\n */\n\nexport function isHighSurrogate(charCode) {\n  return 0xD800 <= charCode && charCode <= 0xDBFF;\n}\n/**\r\n * See http://en.wikipedia.org/wiki/Surrogate_pair\r\n */\n\nexport function isLowSurrogate(charCode) {\n  return 0xDC00 <= charCode && charCode <= 0xDFFF;\n}\n/**\r\n * See http://en.wikipedia.org/wiki/Surrogate_pair\r\n */\n\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n  return (highSurrogate - 0xD800 << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\r\n * get the code point that begins at offset `offset`\r\n */\n\nexport function getNextCodePoint(str, len, offset) {\n  const charCode = str.charCodeAt(offset);\n\n  if (isHighSurrogate(charCode) && offset + 1 < len) {\n    const nextCharCode = str.charCodeAt(offset + 1);\n\n    if (isLowSurrogate(nextCharCode)) {\n      return computeCodePoint(charCode, nextCharCode);\n    }\n  }\n\n  return charCode;\n}\n/**\r\n * get the code point that ends right before offset `offset`\r\n */\n\nfunction getPrevCodePoint(str, offset) {\n  const charCode = str.charCodeAt(offset - 1);\n\n  if (isLowSurrogate(charCode) && offset > 1) {\n    const prevCharCode = str.charCodeAt(offset - 2);\n\n    if (isHighSurrogate(prevCharCode)) {\n      return computeCodePoint(prevCharCode, charCode);\n    }\n  }\n\n  return charCode;\n}\n\nexport function nextCharLength(str, offset) {\n  const graphemeBreakTree = GraphemeBreakTree.getInstance();\n  const initialOffset = offset;\n  const len = str.length;\n  const initialCodePoint = getNextCodePoint(str, len, offset);\n  offset += initialCodePoint >= 65536\n  /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */\n  ? 2 : 1;\n  let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\n  while (offset < len) {\n    const nextCodePoint = getNextCodePoint(str, len, offset);\n    const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\n    if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n      break;\n    }\n\n    offset += nextCodePoint >= 65536\n    /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */\n    ? 2 : 1;\n    graphemeBreakType = nextGraphemeBreakType;\n  }\n\n  return offset - initialOffset;\n}\nexport function prevCharLength(str, offset) {\n  const graphemeBreakTree = GraphemeBreakTree.getInstance();\n  const initialOffset = offset;\n  const initialCodePoint = getPrevCodePoint(str, offset);\n  offset -= initialCodePoint >= 65536\n  /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */\n  ? 2 : 1;\n  let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\n  while (offset > 0) {\n    const prevCodePoint = getPrevCodePoint(str, offset);\n    const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\n    if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n      break;\n    }\n\n    offset -= prevCodePoint >= 65536\n    /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */\n    ? 2 : 1;\n    graphemeBreakType = prevGraphemeBreakType;\n  }\n\n  return initialOffset - offset;\n}\n/**\r\n * A manual decoding of a UTF8 string.\r\n * Use only in environments which do not offer native conversion methods!\r\n */\n\nexport function decodeUTF8(buffer) {\n  // https://en.wikipedia.org/wiki/UTF-8\n  const len = buffer.byteLength;\n  const result = [];\n  let offset = 0;\n\n  while (offset < len) {\n    const v0 = buffer[offset];\n    let codePoint;\n\n    if (v0 >= 0b11110000 && offset + 3 < len) {\n      // 4 bytes\n      codePoint = (buffer[offset++] & 0b00000111) << 18 >>> 0 | (buffer[offset++] & 0b00111111) << 12 >>> 0 | (buffer[offset++] & 0b00111111) << 6 >>> 0 | (buffer[offset++] & 0b00111111) << 0 >>> 0;\n    } else if (v0 >= 0b11100000 && offset + 2 < len) {\n      // 3 bytes\n      codePoint = (buffer[offset++] & 0b00001111) << 12 >>> 0 | (buffer[offset++] & 0b00111111) << 6 >>> 0 | (buffer[offset++] & 0b00111111) << 0 >>> 0;\n    } else if (v0 >= 0b11000000 && offset + 1 < len) {\n      // 2 bytes\n      codePoint = (buffer[offset++] & 0b00011111) << 6 >>> 0 | (buffer[offset++] & 0b00111111) << 0 >>> 0;\n    } else {\n      // 1 byte\n      codePoint = buffer[offset++];\n    }\n\n    if (codePoint >= 0 && codePoint <= 0xD7FF || codePoint >= 0xE000 && codePoint <= 0xFFFF) {\n      // Basic Multilingual Plane\n      result.push(String.fromCharCode(codePoint));\n    } else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      // Supplementary Planes\n      const uPrime = codePoint - 0x10000;\n      const w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n      const w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n      result.push(String.fromCharCode(w1));\n      result.push(String.fromCharCode(w2));\n    } else {\n      // illegal code point\n      result.push(String.fromCharCode(0xFFFD));\n    }\n  }\n\n  return result.join('');\n}\n/**\r\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\r\n */\n\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\r\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\r\n */\n\nexport function containsRTL(str) {\n  return CONTAINS_RTL.test(str);\n}\n/**\r\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\n\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\nexport function containsEmoji(str) {\n  return CONTAINS_EMOJI.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\r\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\r\n */\n\nexport function isBasicASCII(str) {\n  return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n\n/**\r\n * Returns true if `str` contains unusual line terminators, like LS or PS\r\n */\n\nexport function containsUnusualLineTerminators(str) {\n  return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n  for (let i = 0, len = str.length; i < len; i++) {\n    if (isFullWidthCharacter(str.charCodeAt(i))) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function isFullWidthCharacter(charCode) {\n  // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n  // http://jrgraphix.net/research/unicode_blocks.php\n  //          2E80 — 2EFF   CJK Radicals Supplement\n  //          2F00 — 2FDF   Kangxi Radicals\n  //          2FF0 — 2FFF   Ideographic Description Characters\n  //          3000 — 303F   CJK Symbols and Punctuation\n  //          3040 — 309F   Hiragana\n  //          30A0 — 30FF   Katakana\n  //          3100 — 312F   Bopomofo\n  //          3130 — 318F   Hangul Compatibility Jamo\n  //          3190 — 319F   Kanbun\n  //          31A0 — 31BF   Bopomofo Extended\n  //          31F0 — 31FF   Katakana Phonetic Extensions\n  //          3200 — 32FF   Enclosed CJK Letters and Months\n  //          3300 — 33FF   CJK Compatibility\n  //          3400 — 4DBF   CJK Unified Ideographs Extension A\n  //          4DC0 — 4DFF   Yijing Hexagram Symbols\n  //          4E00 — 9FFF   CJK Unified Ideographs\n  //          A000 — A48F   Yi Syllables\n  //          A490 — A4CF   Yi Radicals\n  //          AC00 — D7AF   Hangul Syllables\n  // [IGNORE] D800 — DB7F   High Surrogates\n  // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n  // [IGNORE] DC00 — DFFF   Low Surrogates\n  // [IGNORE] E000 — F8FF   Private Use Area\n  //          F900 — FAFF   CJK Compatibility Ideographs\n  // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n  // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n  // [IGNORE] FE00 — FE0F   Variation Selectors\n  // [IGNORE] FE20 — FE2F   Combining Half Marks\n  // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n  // [IGNORE] FE50 — FE6F   Small Form Variants\n  // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n  //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n  //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n  //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n  // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n  // [IGNORE] FFF0 — FFFF   Specials\n  charCode = +charCode; // @perf\n\n  return charCode >= 0x2E80 && charCode <= 0xD7AF || charCode >= 0xF900 && charCode <= 0xFAFF || charCode >= 0xFF01 && charCode <= 0xFF5E;\n}\n/**\r\n * A fast function (therefore imprecise) to check if code points are emojis.\r\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\n\nexport function isEmojiImprecise(x) {\n  return x >= 0x1F1E6 && x <= 0x1F1FF || x === 8986 || x === 8987 || x === 9200 || x === 9203 || x >= 9728 && x <= 10175 || x === 11088 || x === 11093 || x >= 127744 && x <= 128591 || x >= 128640 && x <= 128764 || x >= 128992 && x <= 129003 || x >= 129280 && x <= 129535 || x >= 129648 && x <= 129750;\n} // -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279\n/* UTF8_BOM */\n);\nexport function startsWithUTF8BOM(str) {\n  return !!(str && str.length > 0 && str.charCodeAt(0) === 65279\n  /* UTF8_BOM */\n  );\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n  if (!target) {\n    return false;\n  }\n\n  if (ignoreEscapedChars) {\n    target = target.replace(/\\\\./g, '');\n  }\n\n  return target.toLowerCase() !== target;\n}\n/**\r\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\r\n */\n\nexport function singleLetterHash(n) {\n  const LETTERS_CNT = 90\n  /* Z */\n  - 65\n  /* A */\n  + 1;\n  n = n % (2 * LETTERS_CNT);\n\n  if (n < LETTERS_CNT) {\n    return String.fromCharCode(97\n    /* a */\n    + n);\n  }\n\n  return String.fromCharCode(65\n  /* A */\n  + n - LETTERS_CNT);\n} //#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint) {\n  const graphemeBreakTree = GraphemeBreakTree.getInstance();\n  return graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n  // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n  // !!! Let's make the common case a bit faster\n  if (breakTypeA === 0\n  /* Other */\n  ) {\n    // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n    return breakTypeB !== 5\n    /* Extend */\n    && breakTypeB !== 7\n    /* SpacingMark */\n    ;\n  } // Do not break between a CR and LF. Otherwise, break before and after controls.\n  // GB3                                        CR × LF\n  // GB4                       (Control | CR | LF) ÷\n  // GB5                                           ÷ (Control | CR | LF)\n\n\n  if (breakTypeA === 2\n  /* CR */\n  ) {\n    if (breakTypeB === 3\n    /* LF */\n    ) {\n      return false; // GB3\n    }\n  }\n\n  if (breakTypeA === 4\n  /* Control */\n  || breakTypeA === 2\n  /* CR */\n  || breakTypeA === 3\n  /* LF */\n  ) {\n    return true; // GB4\n  }\n\n  if (breakTypeB === 4\n  /* Control */\n  || breakTypeB === 2\n  /* CR */\n  || breakTypeB === 3\n  /* LF */\n  ) {\n    return true; // GB5\n  } // Do not break Hangul syllable sequences.\n  // GB6                                         L × (L | V | LV | LVT)\n  // GB7                                  (LV | V) × (V | T)\n  // GB8                                 (LVT | T) × T\n\n\n  if (breakTypeA === 8\n  /* L */\n  ) {\n    if (breakTypeB === 8\n    /* L */\n    || breakTypeB === 9\n    /* V */\n    || breakTypeB === 11\n    /* LV */\n    || breakTypeB === 12\n    /* LVT */\n    ) {\n      return false; // GB6\n    }\n  }\n\n  if (breakTypeA === 11\n  /* LV */\n  || breakTypeA === 9\n  /* V */\n  ) {\n    if (breakTypeB === 9\n    /* V */\n    || breakTypeB === 10\n    /* T */\n    ) {\n      return false; // GB7\n    }\n  }\n\n  if (breakTypeA === 12\n  /* LVT */\n  || breakTypeA === 10\n  /* T */\n  ) {\n    if (breakTypeB === 10\n    /* T */\n    ) {\n      return false; // GB8\n    }\n  } // Do not break before extending characters or ZWJ.\n  // GB9                                           × (Extend | ZWJ)\n\n\n  if (breakTypeB === 5\n  /* Extend */\n  || breakTypeB === 13\n  /* ZWJ */\n  ) {\n    return false; // GB9\n  } // The GB9a and GB9b rules only apply to extended grapheme clusters:\n  // Do not break before SpacingMarks, or after Prepend characters.\n  // GB9a                                          × SpacingMark\n  // GB9b                                  Prepend ×\n\n\n  if (breakTypeB === 7\n  /* SpacingMark */\n  ) {\n    return false; // GB9a\n  }\n\n  if (breakTypeA === 1\n  /* Prepend */\n  ) {\n    return false; // GB9b\n  } // Do not break within emoji modifier sequences or emoji zwj sequences.\n  // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\n\n  if (breakTypeA === 13\n  /* ZWJ */\n  && breakTypeB === 14\n  /* Extended_Pictographic */\n  ) {\n    // Note: we are not implementing the rule entirely here to avoid introducing states\n    return false; // GB11\n  } // GB12                          sot (RI RI)* RI × RI\n  // GB13                        [^RI] (RI RI)* RI × RI\n\n\n  if (breakTypeA === 6\n  /* Regional_Indicator */\n  && breakTypeB === 6\n  /* Regional_Indicator */\n  ) {\n    // Note: we are not implementing the rule entirely here to avoid introducing states\n    return false; // GB12 & GB13\n  } // GB999                                     Any ÷ Any\n\n\n  return true;\n}\n\nclass GraphemeBreakTree {\n  constructor() {\n    this._data = getGraphemeBreakRawData();\n  }\n\n  static getInstance() {\n    if (!GraphemeBreakTree._INSTANCE) {\n      GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n    }\n\n    return GraphemeBreakTree._INSTANCE;\n  }\n\n  getGraphemeBreakType(codePoint) {\n    // !!! Let's make 7bit ASCII a bit faster: 0..31\n    if (codePoint < 32) {\n      if (codePoint === 10\n      /* LineFeed */\n      ) {\n        return 3\n        /* LF */\n        ;\n      }\n\n      if (codePoint === 13\n      /* CarriageReturn */\n      ) {\n        return 2\n        /* CR */\n        ;\n      }\n\n      return 4\n      /* Control */\n      ;\n    } // !!! Let's make 7bit ASCII a bit faster: 32..126\n\n\n    if (codePoint < 127) {\n      return 0\n      /* Other */\n      ;\n    }\n\n    const data = this._data;\n    const nodeCount = data.length / 3;\n    let nodeIndex = 1;\n\n    while (nodeIndex <= nodeCount) {\n      if (codePoint < data[3 * nodeIndex]) {\n        // go left\n        nodeIndex = 2 * nodeIndex;\n      } else if (codePoint > data[3 * nodeIndex + 1]) {\n        // go right\n        nodeIndex = 2 * nodeIndex + 1;\n      } else {\n        // hit\n        return data[3 * nodeIndex + 2];\n      }\n    }\n\n    return 0\n    /* Other */\n    ;\n  }\n\n}\n\nGraphemeBreakTree._INSTANCE = null;\n\nfunction getGraphemeBreakRawData() {\n  // generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n  return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n} //#endregion\n\n/**\r\n * Computes the offset after performing a left delete on the given string,\r\n * while considering unicode grapheme/emoji rules.\r\n*/\n\n\nexport function getLeftDeleteOffset(offset, str) {\n  if (offset === 0) {\n    return 0;\n  } // Try to delete emoji part.\n\n\n  const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\n  if (emojiOffset !== undefined) {\n    return emojiOffset;\n  } // Otherwise, just skip a single code point.\n\n\n  const codePoint = getPrevCodePoint(str, offset);\n  offset -= getUTF16Length(codePoint);\n  return offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(offset, str) {\n  // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n  // structure of emojis.\n  let codePoint = getPrevCodePoint(str, offset);\n  offset -= getUTF16Length(codePoint); // Skip modifiers\n\n  while (isEmojiModifier(codePoint) || codePoint === 65039\n  /* emojiVariantSelector */\n  || codePoint === 8419\n  /* enclosingKeyCap */\n  ) {\n    if (offset === 0) {\n      // Cannot skip modifier, no preceding emoji base.\n      return undefined;\n    }\n\n    codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n  } // Expect base emoji\n\n\n  if (!isEmojiImprecise(codePoint)) {\n    // Unexpected code point, not a valid emoji.\n    return undefined;\n  }\n\n  if (offset >= 0) {\n    // Skip optional ZWJ code points that combine multiple emojis.\n    // In theory, we should check if that ZWJ actually combines multiple emojis\n    // to prevent deleting ZWJs in situations we didn't account for.\n    const optionalZwjCodePoint = getPrevCodePoint(str, offset);\n\n    if (optionalZwjCodePoint === 8205\n    /* zwj */\n    ) {\n      offset -= getUTF16Length(optionalZwjCodePoint);\n    }\n  }\n\n  return offset;\n}\n\nfunction getUTF16Length(codePoint) {\n  return codePoint >= 65536\n  /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */\n  ? 2 : 1;\n}\n\nfunction isEmojiModifier(codePoint) {\n  return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\r\n * Return a hash value for an object.\r\n */\n\nexport function hash(obj) {\n  return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n  switch (typeof obj) {\n    case 'object':\n      if (obj === null) {\n        return numberHash(349, hashVal);\n      } else if (Array.isArray(obj)) {\n        return arrayHash(obj, hashVal);\n      }\n\n      return objectHash(obj, hashVal);\n\n    case 'string':\n      return stringHash(obj, hashVal);\n\n    case 'boolean':\n      return booleanHash(obj, hashVal);\n\n    case 'number':\n      return numberHash(obj, hashVal);\n\n    case 'undefined':\n      return numberHash(937, hashVal);\n\n    default:\n      return numberHash(617, hashVal);\n  }\n}\n\nfunction numberHash(val, initialHashVal) {\n  return (initialHashVal << 5) - initialHashVal + val | 0; // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b, initialHashVal) {\n  return numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s, hashVal) {\n  hashVal = numberHash(149417, hashVal);\n\n  for (let i = 0, length = s.length; i < length; i++) {\n    hashVal = numberHash(s.charCodeAt(i), hashVal);\n  }\n\n  return hashVal;\n}\n\nfunction arrayHash(arr, initialHashVal) {\n  initialHashVal = numberHash(104579, initialHashVal);\n  return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj, initialHashVal) {\n  initialHashVal = numberHash(181387, initialHashVal);\n  return Object.keys(obj).sort().reduce((hashVal, key) => {\n    hashVal = stringHash(key, hashVal);\n    return doHash(obj[key], hashVal);\n  }, initialHashVal);\n}\n\nfunction leftRotate(value, bits, totalBits = 32) {\n  // delta + bits = totalBits\n  const delta = totalBits - bits; // All ones, expect `delta` zeros aligned to the right\n\n  const mask = ~((1 << delta) - 1); // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\n  return (value << bits | (mask & value) >>> delta) >>> 0;\n}\n\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n  for (let i = 0; i < count; i++) {\n    dest[index + i] = value;\n  }\n}\n\nfunction leftPad(value, length, char = '0') {\n  while (value.length < length) {\n    value = char + value;\n  }\n\n  return value;\n}\n\nexport function toHexString(bufferOrValue, bitsize = 32) {\n  if (bufferOrValue instanceof ArrayBuffer) {\n    return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n  }\n\n  return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\r\n * A SHA1 implementation that works with strings and does not allocate.\r\n */\n\nexport class StringSHA1 {\n  constructor() {\n    this._h0 = 0x67452301;\n    this._h1 = 0xEFCDAB89;\n    this._h2 = 0x98BADCFE;\n    this._h3 = 0x10325476;\n    this._h4 = 0xC3D2E1F0;\n    this._buff = new Uint8Array(64\n    /* BLOCK_SIZE */\n    + 3\n    /* to fit any utf-8 */\n    );\n    this._buffDV = new DataView(this._buff.buffer);\n    this._buffLen = 0;\n    this._totalLen = 0;\n    this._leftoverHighSurrogate = 0;\n    this._finished = false;\n  }\n\n  update(str) {\n    const strLen = str.length;\n\n    if (strLen === 0) {\n      return;\n    }\n\n    const buff = this._buff;\n    let buffLen = this._buffLen;\n    let leftoverHighSurrogate = this._leftoverHighSurrogate;\n    let charCode;\n    let offset;\n\n    if (leftoverHighSurrogate !== 0) {\n      charCode = leftoverHighSurrogate;\n      offset = -1;\n      leftoverHighSurrogate = 0;\n    } else {\n      charCode = str.charCodeAt(0);\n      offset = 0;\n    }\n\n    while (true) {\n      let codePoint = charCode;\n\n      if (strings.isHighSurrogate(charCode)) {\n        if (offset + 1 < strLen) {\n          const nextCharCode = str.charCodeAt(offset + 1);\n\n          if (strings.isLowSurrogate(nextCharCode)) {\n            offset++;\n            codePoint = strings.computeCodePoint(charCode, nextCharCode);\n          } else {\n            // illegal => unicode replacement character\n            codePoint = 65533\n            /* UNICODE_REPLACEMENT */\n            ;\n          }\n        } else {\n          // last character is a surrogate pair\n          leftoverHighSurrogate = charCode;\n          break;\n        }\n      } else if (strings.isLowSurrogate(charCode)) {\n        // illegal => unicode replacement character\n        codePoint = 65533\n        /* UNICODE_REPLACEMENT */\n        ;\n      }\n\n      buffLen = this._push(buff, buffLen, codePoint);\n      offset++;\n\n      if (offset < strLen) {\n        charCode = str.charCodeAt(offset);\n      } else {\n        break;\n      }\n    }\n\n    this._buffLen = buffLen;\n    this._leftoverHighSurrogate = leftoverHighSurrogate;\n  }\n\n  _push(buff, buffLen, codePoint) {\n    if (codePoint < 0x0080) {\n      buff[buffLen++] = codePoint;\n    } else if (codePoint < 0x0800) {\n      buff[buffLen++] = 0b11000000 | (codePoint & 0b00000000000000000000011111000000) >>> 6;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n    } else if (codePoint < 0x10000) {\n      buff[buffLen++] = 0b11100000 | (codePoint & 0b00000000000000001111000000000000) >>> 12;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000111111000000) >>> 6;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n    } else {\n      buff[buffLen++] = 0b11110000 | (codePoint & 0b00000000000111000000000000000000) >>> 18;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000111111000000000000) >>> 12;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000111111000000) >>> 6;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n    }\n\n    if (buffLen >= 64\n    /* BLOCK_SIZE */\n    ) {\n      this._step();\n\n      buffLen -= 64\n      /* BLOCK_SIZE */\n      ;\n      this._totalLen += 64\n      /* BLOCK_SIZE */\n      ; // take last 3 in case of UTF8 overflow\n\n      buff[0] = buff[64\n      /* BLOCK_SIZE */\n      + 0];\n      buff[1] = buff[64\n      /* BLOCK_SIZE */\n      + 1];\n      buff[2] = buff[64\n      /* BLOCK_SIZE */\n      + 2];\n    }\n\n    return buffLen;\n  }\n\n  digest() {\n    if (!this._finished) {\n      this._finished = true;\n\n      if (this._leftoverHighSurrogate) {\n        // illegal => unicode replacement character\n        this._leftoverHighSurrogate = 0;\n        this._buffLen = this._push(this._buff, this._buffLen, 65533\n        /* UNICODE_REPLACEMENT */\n        );\n      }\n\n      this._totalLen += this._buffLen;\n\n      this._wrapUp();\n    }\n\n    return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n  }\n\n  _wrapUp() {\n    this._buff[this._buffLen++] = 0x80;\n    fill(this._buff, this._buffLen);\n\n    if (this._buffLen > 56) {\n      this._step();\n\n      fill(this._buff);\n    } // this will fit because the mantissa can cover up to 52 bits\n\n\n    const ml = 8 * this._totalLen;\n\n    this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\n    this._buffDV.setUint32(60, ml % 4294967296, false);\n\n    this._step();\n  }\n\n  _step() {\n    const bigBlock32 = StringSHA1._bigBlock32;\n    const data = this._buffDV;\n\n    for (let j = 0; j < 64\n    /* 16*4 */\n    ; j += 4) {\n      bigBlock32.setUint32(j, data.getUint32(j, false), false);\n    }\n\n    for (let j = 64; j < 320\n    /* 80*4 */\n    ; j += 4) {\n      bigBlock32.setUint32(j, leftRotate(bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false), 1), false);\n    }\n\n    let a = this._h0;\n    let b = this._h1;\n    let c = this._h2;\n    let d = this._h3;\n    let e = this._h4;\n    let f, k;\n    let temp;\n\n    for (let j = 0; j < 80; j++) {\n      if (j < 20) {\n        f = b & c | ~b & d;\n        k = 0x5A827999;\n      } else if (j < 40) {\n        f = b ^ c ^ d;\n        k = 0x6ED9EBA1;\n      } else if (j < 60) {\n        f = b & c | b & d | c & d;\n        k = 0x8F1BBCDC;\n      } else {\n        f = b ^ c ^ d;\n        k = 0xCA62C1D6;\n      }\n\n      temp = leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false) & 0xffffffff;\n      e = d;\n      d = c;\n      c = leftRotate(b, 30);\n      b = a;\n      a = temp;\n    }\n\n    this._h0 = this._h0 + a & 0xffffffff;\n    this._h1 = this._h1 + b & 0xffffffff;\n    this._h2 = this._h2 + c & 0xffffffff;\n    this._h3 = this._h3 + d & 0xffffffff;\n    this._h4 = this._h4 + e & 0xffffffff;\n  }\n\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n  constructor(source) {\n    this.source = source;\n  }\n\n  getElements() {\n    const source = this.source;\n    const characters = new Int32Array(source.length);\n\n    for (let i = 0, len = source.length; i < len; i++) {\n      characters[i] = source.charCodeAt(i);\n    }\n\n    return characters;\n  }\n\n}\nexport function stringDiff(original, modified, pretty) {\n  return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n} //\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n  static Assert(condition, message) {\n    if (!condition) {\n      throw new Error(message);\n    }\n  }\n\n}\nexport class MyArray {\n  /**\r\n   * Copies a range of elements from an Array starting at the specified source index and pastes\r\n   * them to another Array starting at the specified destination index. The length and the indexes\r\n   * are specified as 64-bit integers.\r\n   * sourceArray:\r\n   *\t\tThe Array that contains the data to copy.\r\n   * sourceIndex:\r\n   *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\r\n   * destinationArray:\r\n   *\t\tThe Array that receives the data.\r\n   * destinationIndex:\r\n   *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\r\n   * length:\r\n   *\t\tA 64-bit integer that represents the number of elements to copy.\r\n   */\n  static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n    for (let i = 0; i < length; i++) {\n      destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n    }\n  }\n\n  static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n    for (let i = 0; i < length; i++) {\n      destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n    }\n  }\n\n}\n/**\r\n * A utility class which helps to create the set of DiffChanges from\r\n * a difference operation. This class accepts original DiffElements and\r\n * modified DiffElements that are involved in a particular change. The\r\n * MarktNextChange() method can be called to mark the separation between\r\n * distinct changes. At the end, the Changes property can be called to retrieve\r\n * the constructed changes.\r\n */\n\nclass DiffChangeHelper {\n  /**\r\n   * Constructs a new DiffChangeHelper for the given DiffSequences.\r\n   */\n  constructor() {\n    this.m_changes = [];\n    this.m_originalStart = 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    ;\n    this.m_modifiedStart = 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    ;\n    this.m_originalCount = 0;\n    this.m_modifiedCount = 0;\n  }\n  /**\r\n   * Marks the beginning of the next change in the set of differences.\r\n   */\n\n\n  MarkNextChange() {\n    // Only add to the list if there is something to add\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Add the new change to our list\n      this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n    } // Reset for the next change\n\n\n    this.m_originalCount = 0;\n    this.m_modifiedCount = 0;\n    this.m_originalStart = 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    ;\n    this.m_modifiedStart = 1073741824\n    /* MAX_SAFE_SMALL_INTEGER */\n    ;\n  }\n  /**\r\n   * Adds the original element at the given position to the elements\r\n   * affected by the current change. The modified index gives context\r\n   * to the change position with respect to the original sequence.\r\n   * @param originalIndex The index of the original element to add.\r\n   * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\r\n   */\n\n\n  AddOriginalElement(originalIndex, modifiedIndex) {\n    // The 'true' start index is the smallest of the ones we've seen\n    this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n    this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n    this.m_originalCount++;\n  }\n  /**\r\n   * Adds the modified element at the given position to the elements\r\n   * affected by the current change. The original index gives context\r\n   * to the change position with respect to the modified sequence.\r\n   * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\r\n   * @param modifiedIndex The index of the modified element to add.\r\n   */\n\n\n  AddModifiedElement(originalIndex, modifiedIndex) {\n    // The 'true' start index is the smallest of the ones we've seen\n    this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n    this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n    this.m_modifiedCount++;\n  }\n  /**\r\n   * Retrieves all of the changes marked by the class.\r\n   */\n\n\n  getChanges() {\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Finish up on whatever is left\n      this.MarkNextChange();\n    }\n\n    return this.m_changes;\n  }\n  /**\r\n   * Retrieves all of the changes marked by the class in the reverse order\r\n   */\n\n\n  getReverseChanges() {\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Finish up on whatever is left\n      this.MarkNextChange();\n    }\n\n    this.m_changes.reverse();\n    return this.m_changes;\n  }\n\n}\n/**\r\n * An implementation of the difference algorithm described in\r\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\r\n */\n\n\nexport class LcsDiff {\n  /**\r\n   * Constructs the DiffFinder\r\n   */\n  constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n    this.ContinueProcessingPredicate = continueProcessingPredicate;\n    this._originalSequence = originalSequence;\n    this._modifiedSequence = modifiedSequence;\n\n    const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n\n    const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n\n    this._hasStrings = originalHasStrings && modifiedHasStrings;\n    this._originalStringElements = originalStringElements;\n    this._originalElementsOrHash = originalElementsOrHash;\n    this._modifiedStringElements = modifiedStringElements;\n    this._modifiedElementsOrHash = modifiedElementsOrHash;\n    this.m_forwardHistory = [];\n    this.m_reverseHistory = [];\n  }\n\n  static _isStringArray(arr) {\n    return arr.length > 0 && typeof arr[0] === 'string';\n  }\n\n  static _getElements(sequence) {\n    const elements = sequence.getElements();\n\n    if (LcsDiff._isStringArray(elements)) {\n      const hashes = new Int32Array(elements.length);\n\n      for (let i = 0, len = elements.length; i < len; i++) {\n        hashes[i] = stringHash(elements[i], 0);\n      }\n\n      return [elements, hashes, true];\n    }\n\n    if (elements instanceof Int32Array) {\n      return [[], elements, false];\n    }\n\n    return [[], new Int32Array(elements), false];\n  }\n\n  ElementsAreEqual(originalIndex, newIndex) {\n    if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n      return false;\n    }\n\n    return this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true;\n  }\n\n  ElementsAreStrictEqual(originalIndex, newIndex) {\n    if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n      return false;\n    }\n\n    const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n\n    const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n\n    return originalElement === modifiedElement;\n  }\n\n  static _getStrictElement(sequence, index) {\n    if (typeof sequence.getStrictElement === 'function') {\n      return sequence.getStrictElement(index);\n    }\n\n    return null;\n  }\n\n  OriginalElementsAreEqual(index1, index2) {\n    if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n      return false;\n    }\n\n    return this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true;\n  }\n\n  ModifiedElementsAreEqual(index1, index2) {\n    if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n      return false;\n    }\n\n    return this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true;\n  }\n\n  ComputeDiff(pretty) {\n    return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n  }\n  /**\r\n   * Computes the differences between the original and modified input\r\n   * sequences on the bounded range.\r\n   * @returns An array of the differences between the two input sequences.\r\n   */\n\n\n  _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n    const quitEarlyArr = [false];\n    let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n    if (pretty) {\n      // We have to clean up the computed diff to be more intuitive\n      // but it turns out this cannot be done correctly until the entire set\n      // of diffs have been computed\n      changes = this.PrettifyChanges(changes);\n    }\n\n    return {\n      quitEarly: quitEarlyArr[0],\n      changes: changes\n    };\n  }\n  /**\r\n   * Private helper method which computes the differences on the bounded range\r\n   * recursively.\r\n   * @returns An array of the differences between the two input sequences.\r\n   */\n\n\n  ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n    quitEarlyArr[0] = false; // Find the start of the differences\n\n    while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n      originalStart++;\n      modifiedStart++;\n    } // Find the end of the differences\n\n\n    while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n      originalEnd--;\n      modifiedEnd--;\n    } // In the special case where we either have all insertions or all deletions or the sequences are identical\n\n\n    if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n      let changes;\n\n      if (modifiedStart <= modifiedEnd) {\n        Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd'); // All insertions\n\n        changes = [new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)];\n      } else if (originalStart <= originalEnd) {\n        Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd'); // All deletions\n\n        changes = [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)];\n      } else {\n        Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n        Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd'); // Identical sequences - No differences\n\n        changes = [];\n      }\n\n      return changes;\n    } // This problem can be solved using the Divide-And-Conquer technique.\n\n\n    const midOriginalArr = [0];\n    const midModifiedArr = [0];\n    const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n    const midOriginal = midOriginalArr[0];\n    const midModified = midModifiedArr[0];\n\n    if (result !== null) {\n      // Result is not-null when there was enough memory to compute the changes while\n      // searching for the recursion point\n      return result;\n    } else if (!quitEarlyArr[0]) {\n      // We can break the problem down recursively by finding the changes in the\n      // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n      // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n      // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n      const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n      let rightChanges = [];\n\n      if (!quitEarlyArr[0]) {\n        rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n      } else {\n        // We did't have time to finish the first half, so we don't have time to compute this half.\n        // Consider the entire rest of the sequence different.\n        rightChanges = [new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)];\n      }\n\n      return this.ConcatenateChanges(leftChanges, rightChanges);\n    } // If we hit here, we quit early, and so can't return anything meaningful\n\n\n    return [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)];\n  }\n\n  WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n    let forwardChanges = null;\n    let reverseChanges = null; // First, walk backward through the forward diagonals history\n\n    let changeHelper = new DiffChangeHelper();\n    let diagonalMin = diagonalForwardStart;\n    let diagonalMax = diagonalForwardEnd;\n    let diagonalRelative = midOriginalArr[0] - midModifiedArr[0] - diagonalForwardOffset;\n    let lastOriginalIndex = -1073741824\n    /* MIN_SAFE_SMALL_INTEGER */\n    ;\n    let historyIndex = this.m_forwardHistory.length - 1;\n\n    do {\n      // Get the diagonal index from the relative diagonal number\n      const diagonal = diagonalRelative + diagonalForwardBase; // Figure out where we came from\n\n      if (diagonal === diagonalMin || diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1]) {\n        // Vertical line (the element is an insert)\n        originalIndex = forwardPoints[diagonal + 1];\n        modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\n        if (originalIndex < lastOriginalIndex) {\n          changeHelper.MarkNextChange();\n        }\n\n        lastOriginalIndex = originalIndex;\n        changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n        diagonalRelative = diagonal + 1 - diagonalForwardBase; //Setup for the next iteration\n      } else {\n        // Horizontal line (the element is a deletion)\n        originalIndex = forwardPoints[diagonal - 1] + 1;\n        modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\n        if (originalIndex < lastOriginalIndex) {\n          changeHelper.MarkNextChange();\n        }\n\n        lastOriginalIndex = originalIndex - 1;\n        changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n        diagonalRelative = diagonal - 1 - diagonalForwardBase; //Setup for the next iteration\n      }\n\n      if (historyIndex >= 0) {\n        forwardPoints = this.m_forwardHistory[historyIndex];\n        diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\n        diagonalMin = 1;\n        diagonalMax = forwardPoints.length - 1;\n      }\n    } while (--historyIndex >= -1); // Ironically, we get the forward changes as the reverse of the\n    // order we added them since we technically added them backwards\n\n\n    forwardChanges = changeHelper.getReverseChanges();\n\n    if (quitEarlyArr[0]) {\n      // TODO: Calculate a partial from the reverse diagonals.\n      //       For now, just assume everything after the midOriginal/midModified point is a diff\n      let originalStartPoint = midOriginalArr[0] + 1;\n      let modifiedStartPoint = midModifiedArr[0] + 1;\n\n      if (forwardChanges !== null && forwardChanges.length > 0) {\n        const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n        originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n        modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n      }\n\n      reverseChanges = [new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)];\n    } else {\n      // Now walk backward through the reverse diagonals history\n      changeHelper = new DiffChangeHelper();\n      diagonalMin = diagonalReverseStart;\n      diagonalMax = diagonalReverseEnd;\n      diagonalRelative = midOriginalArr[0] - midModifiedArr[0] - diagonalReverseOffset;\n      lastOriginalIndex = 1073741824\n      /* MAX_SAFE_SMALL_INTEGER */\n      ;\n      historyIndex = deltaIsEven ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n      do {\n        // Get the diagonal index from the relative diagonal number\n        const diagonal = diagonalRelative + diagonalReverseBase; // Figure out where we came from\n\n        if (diagonal === diagonalMin || diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1]) {\n          // Horizontal line (the element is a deletion))\n          originalIndex = reversePoints[diagonal + 1] - 1;\n          modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\n          if (originalIndex > lastOriginalIndex) {\n            changeHelper.MarkNextChange();\n          }\n\n          lastOriginalIndex = originalIndex + 1;\n          changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n          diagonalRelative = diagonal + 1 - diagonalReverseBase; //Setup for the next iteration\n        } else {\n          // Vertical line (the element is an insertion)\n          originalIndex = reversePoints[diagonal - 1];\n          modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\n          if (originalIndex > lastOriginalIndex) {\n            changeHelper.MarkNextChange();\n          }\n\n          lastOriginalIndex = originalIndex;\n          changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n          diagonalRelative = diagonal - 1 - diagonalReverseBase; //Setup for the next iteration\n        }\n\n        if (historyIndex >= 0) {\n          reversePoints = this.m_reverseHistory[historyIndex];\n          diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\n          diagonalMin = 1;\n          diagonalMax = reversePoints.length - 1;\n        }\n      } while (--historyIndex >= -1); // There are cases where the reverse history will find diffs that\n      // are correct, but not intuitive, so we need shift them.\n\n\n      reverseChanges = changeHelper.getChanges();\n    }\n\n    return this.ConcatenateChanges(forwardChanges, reverseChanges);\n  }\n  /**\r\n   * Given the range to compute the diff on, this method finds the point:\r\n   * (midOriginal, midModified)\r\n   * that exists in the middle of the LCS of the two sequences and\r\n   * is the point at which the LCS problem may be broken down recursively.\r\n   * This method will try to keep the LCS trace in memory. If the LCS recursion\r\n   * point is calculated and the full trace is available in memory, then this method\r\n   * will return the change list.\r\n   * @param originalStart The start bound of the original sequence range\r\n   * @param originalEnd The end bound of the original sequence range\r\n   * @param modifiedStart The start bound of the modified sequence range\r\n   * @param modifiedEnd The end bound of the modified sequence range\r\n   * @param midOriginal The middle point of the original sequence range\r\n   * @param midModified The middle point of the modified sequence range\r\n   * @returns The diff changes, if available, otherwise null\r\n   */\n\n\n  ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n    let originalIndex = 0,\n        modifiedIndex = 0;\n    let diagonalForwardStart = 0,\n        diagonalForwardEnd = 0;\n    let diagonalReverseStart = 0,\n        diagonalReverseEnd = 0; // To traverse the edit graph and produce the proper LCS, our actual\n    // start position is just outside the given boundary\n\n    originalStart--;\n    modifiedStart--; // We set these up to make the compiler happy, but they will\n    // be replaced before we return with the actual recursion point\n\n    midOriginalArr[0] = 0;\n    midModifiedArr[0] = 0; // Clear out the history\n\n    this.m_forwardHistory = [];\n    this.m_reverseHistory = []; // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n    // The integer value in the cell represents the originalIndex of the furthest\n    // reaching point found so far that ends in that diagonal.\n    // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\n    const maxDifferences = originalEnd - originalStart + (modifiedEnd - modifiedStart);\n    const numDiagonals = maxDifferences + 1;\n    const forwardPoints = new Int32Array(numDiagonals);\n    const reversePoints = new Int32Array(numDiagonals); // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n    // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\n    const diagonalForwardBase = modifiedEnd - modifiedStart;\n    const diagonalReverseBase = originalEnd - originalStart; // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n    //    diagonal number (relative to diagonalForwardBase)\n    // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n    //    diagonal number (relative to diagonalReverseBase)\n\n    const diagonalForwardOffset = originalStart - modifiedStart;\n    const diagonalReverseOffset = originalEnd - modifiedEnd; // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n    //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n    // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\n    const delta = diagonalReverseBase - diagonalForwardBase;\n    const deltaIsEven = delta % 2 === 0; // Here we set up the start and end points as the furthest points found so far\n    // in both the forward and reverse directions, respectively\n\n    forwardPoints[diagonalForwardBase] = originalStart;\n    reversePoints[diagonalReverseBase] = originalEnd; // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\n    quitEarlyArr[0] = false; // A couple of points:\n    // --With this method, we iterate on the number of differences between the two sequences.\n    //   The more differences there actually are, the longer this will take.\n    // --Also, as the number of differences increases, we have to search on diagonals further\n    //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n    // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n    //   is even and odd diagonals only when numDifferences is odd.\n\n    for (let numDifferences = 1; numDifferences <= maxDifferences / 2 + 1; numDifferences++) {\n      let furthestOriginalIndex = 0;\n      let furthestModifiedIndex = 0; // Run the algorithm in the forward direction\n\n      diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n      diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\n      for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n        // STEP 1: We extend the furthest reaching point in the present diagonal\n        // by looking at the diagonals above and below and picking the one whose point\n        // is further away from the start point (originalStart, modifiedStart)\n        if (diagonal === diagonalForwardStart || diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1]) {\n          originalIndex = forwardPoints[diagonal + 1];\n        } else {\n          originalIndex = forwardPoints[diagonal - 1] + 1;\n        }\n\n        modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset; // Save the current originalIndex so we can test for false overlap in step 3\n\n        const tempOriginalIndex = originalIndex; // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n        // so long as the elements are equal.\n\n        while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n          originalIndex++;\n          modifiedIndex++;\n        }\n\n        forwardPoints[diagonal] = originalIndex;\n\n        if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n          furthestOriginalIndex = originalIndex;\n          furthestModifiedIndex = modifiedIndex;\n        } // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n        // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n        // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n        // then check for overlap.\n\n\n        if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= numDifferences - 1) {\n          if (originalIndex >= reversePoints[diagonal]) {\n            midOriginalArr[0] = originalIndex;\n            midModifiedArr[0] = modifiedIndex;\n\n            if (tempOriginalIndex <= reversePoints[diagonal] && 1447\n            /* MaxDifferencesHistory */\n            > 0 && numDifferences <= 1447\n            /* MaxDifferencesHistory */\n            + 1) {\n              // BINGO! We overlapped, and we have the full trace in memory!\n              return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n            } else {\n              // Either false overlap, or we didn't have enough memory for the full trace\n              // Just return the recursion point\n              return null;\n            }\n          }\n        }\n      } // Check to see if we should be quitting early, before moving on to the next iteration.\n\n\n      const matchLengthOfLongest = (furthestOriginalIndex - originalStart + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n      if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n        // We can't finish, so skip ahead to generating a result from what we have.\n        quitEarlyArr[0] = true; // Use the furthest distance we got in the forward direction.\n\n        midOriginalArr[0] = furthestOriginalIndex;\n        midModifiedArr[0] = furthestModifiedIndex;\n\n        if (matchLengthOfLongest > 0 && 1447\n        /* MaxDifferencesHistory */\n        > 0 && numDifferences <= 1447\n        /* MaxDifferencesHistory */\n        + 1) {\n          // Enough of the history is in memory to walk it backwards\n          return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n        } else {\n          // We didn't actually remember enough of the history.\n          //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n          //back into the boundary limits since we decremented their value above beyond the boundary limit.\n          originalStart++;\n          modifiedStart++;\n          return [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)];\n        }\n      } // Run the algorithm in the reverse direction\n\n\n      diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n      diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\n      for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n        // STEP 1: We extend the furthest reaching point in the present diagonal\n        // by looking at the diagonals above and below and picking the one whose point\n        // is further away from the start point (originalEnd, modifiedEnd)\n        if (diagonal === diagonalReverseStart || diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1]) {\n          originalIndex = reversePoints[diagonal + 1] - 1;\n        } else {\n          originalIndex = reversePoints[diagonal - 1];\n        }\n\n        modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset; // Save the current originalIndex so we can test for false overlap\n\n        const tempOriginalIndex = originalIndex; // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n        // as long as the elements are equal.\n\n        while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n          originalIndex--;\n          modifiedIndex--;\n        }\n\n        reversePoints[diagonal] = originalIndex; // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n        // and diagonal is in the range of forward diagonals computed for numDifferences\n        // then check for overlap.\n\n        if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n          if (originalIndex <= forwardPoints[diagonal]) {\n            midOriginalArr[0] = originalIndex;\n            midModifiedArr[0] = modifiedIndex;\n\n            if (tempOriginalIndex >= forwardPoints[diagonal] && 1447\n            /* MaxDifferencesHistory */\n            > 0 && numDifferences <= 1447\n            /* MaxDifferencesHistory */\n            + 1) {\n              // BINGO! We overlapped, and we have the full trace in memory!\n              return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n            } else {\n              // Either false overlap, or we didn't have enough memory for the full trace\n              // Just return the recursion point\n              return null;\n            }\n          }\n        }\n      } // Save current vectors to history before the next iteration\n\n\n      if (numDifferences <= 1447\n      /* MaxDifferencesHistory */\n      ) {\n        // We are allocating space for one extra int, which we fill with\n        // the index of the diagonal base index\n        let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n        temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n        MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n        this.m_forwardHistory.push(temp);\n        temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n        temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n        MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n        this.m_reverseHistory.push(temp);\n      }\n    } // If we got here, then we have the full trace in history. We just have to convert it to a change list\n    // NOTE: This part is a bit messy\n\n\n    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n  }\n  /**\r\n   * Shifts the given changes to provide a more intuitive diff.\r\n   * While the first element in a diff matches the first element after the diff,\r\n   * we shift the diff down.\r\n   *\r\n   * @param changes The list of changes to shift\r\n   * @returns The shifted changes\r\n   */\n\n\n  PrettifyChanges(changes) {\n    // Shift all the changes down first\n    for (let i = 0; i < changes.length; i++) {\n      const change = changes[i];\n      const originalStop = i < changes.length - 1 ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n      const modifiedStop = i < changes.length - 1 ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n      const checkOriginal = change.originalLength > 0;\n      const checkModified = change.modifiedLength > 0;\n\n      while (change.originalStart + change.originalLength < originalStop && change.modifiedStart + change.modifiedLength < modifiedStop && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n        const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n        const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n\n        if (endStrictEqual && !startStrictEqual) {\n          // moving the change down would create an equal change, but the elements are not strict equal\n          break;\n        }\n\n        change.originalStart++;\n        change.modifiedStart++;\n      }\n\n      let mergedChangeArr = [null];\n\n      if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n        changes[i] = mergedChangeArr[0];\n        changes.splice(i + 1, 1);\n        i--;\n        continue;\n      }\n    } // Shift changes back up until we hit empty or whitespace-only lines\n\n\n    for (let i = changes.length - 1; i >= 0; i--) {\n      const change = changes[i];\n      let originalStop = 0;\n      let modifiedStop = 0;\n\n      if (i > 0) {\n        const prevChange = changes[i - 1];\n        originalStop = prevChange.originalStart + prevChange.originalLength;\n        modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n      }\n\n      const checkOriginal = change.originalLength > 0;\n      const checkModified = change.modifiedLength > 0;\n      let bestDelta = 0;\n\n      let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n      for (let delta = 1;; delta++) {\n        const originalStart = change.originalStart - delta;\n        const modifiedStart = change.modifiedStart - delta;\n\n        if (originalStart < originalStop || modifiedStart < modifiedStop) {\n          break;\n        }\n\n        if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n          break;\n        }\n\n        if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n          break;\n        }\n\n        const touchingPreviousChange = originalStart === originalStop && modifiedStart === modifiedStop;\n\n        const score = (touchingPreviousChange ? 5 : 0) + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n        if (score > bestScore) {\n          bestScore = score;\n          bestDelta = delta;\n        }\n      }\n\n      change.originalStart -= bestDelta;\n      change.modifiedStart -= bestDelta;\n      const mergedChangeArr = [null];\n\n      if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n        changes[i - 1] = mergedChangeArr[0];\n        changes.splice(i, 1);\n        i++;\n        continue;\n      }\n    } // There could be multiple longest common substrings.\n    // Give preference to the ones containing longer lines\n\n\n    if (this._hasStrings) {\n      for (let i = 1, len = changes.length; i < len; i++) {\n        const aChange = changes[i - 1];\n        const bChange = changes[i];\n        const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n        const aOriginalStart = aChange.originalStart;\n        const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n        const abOriginalLength = bOriginalEnd - aOriginalStart;\n        const aModifiedStart = aChange.modifiedStart;\n        const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n        const abModifiedLength = bModifiedEnd - aModifiedStart; // Avoid wasting a lot of time with these searches\n\n        if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n          const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n\n          if (t) {\n            const [originalMatchStart, modifiedMatchStart] = t;\n\n            if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n              // switch to another sequence that has a better score\n              aChange.originalLength = originalMatchStart - aChange.originalStart;\n              aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n              bChange.originalStart = originalMatchStart + matchedLength;\n              bChange.modifiedStart = modifiedMatchStart + matchedLength;\n              bChange.originalLength = bOriginalEnd - bChange.originalStart;\n              bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n            }\n          }\n        }\n      }\n    }\n\n    return changes;\n  }\n\n  _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n    if (originalLength < desiredLength || modifiedLength < desiredLength) {\n      return null;\n    }\n\n    const originalMax = originalStart + originalLength - desiredLength + 1;\n    const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n    let bestScore = 0;\n    let bestOriginalStart = 0;\n    let bestModifiedStart = 0;\n\n    for (let i = originalStart; i < originalMax; i++) {\n      for (let j = modifiedStart; j < modifiedMax; j++) {\n        const score = this._contiguousSequenceScore(i, j, desiredLength);\n\n        if (score > 0 && score > bestScore) {\n          bestScore = score;\n          bestOriginalStart = i;\n          bestModifiedStart = j;\n        }\n      }\n    }\n\n    if (bestScore > 0) {\n      return [bestOriginalStart, bestModifiedStart];\n    }\n\n    return null;\n  }\n\n  _contiguousSequenceScore(originalStart, modifiedStart, length) {\n    let score = 0;\n\n    for (let l = 0; l < length; l++) {\n      if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n        return 0;\n      }\n\n      score += this._originalStringElements[originalStart + l].length;\n    }\n\n    return score;\n  }\n\n  _OriginalIsBoundary(index) {\n    if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n      return true;\n    }\n\n    return this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]);\n  }\n\n  _OriginalRegionIsBoundary(originalStart, originalLength) {\n    if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n      return true;\n    }\n\n    if (originalLength > 0) {\n      const originalEnd = originalStart + originalLength;\n\n      if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _ModifiedIsBoundary(index) {\n    if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n      return true;\n    }\n\n    return this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]);\n  }\n\n  _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n    if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n      return true;\n    }\n\n    if (modifiedLength > 0) {\n      const modifiedEnd = modifiedStart + modifiedLength;\n\n      if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n    const originalScore = this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0;\n    const modifiedScore = this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0;\n    return originalScore + modifiedScore;\n  }\n  /**\r\n   * Concatenates the two input DiffChange lists and returns the resulting\r\n   * list.\r\n   * @param The left changes\r\n   * @param The right changes\r\n   * @returns The concatenated list\r\n   */\n\n\n  ConcatenateChanges(left, right) {\n    let mergedChangeArr = [];\n\n    if (left.length === 0 || right.length === 0) {\n      return right.length > 0 ? right : left;\n    } else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n      // Since we break the problem down recursively, it is possible that we\n      // might recurse in the middle of a change thereby splitting it into\n      // two changes. Here in the combining stage, we detect and fuse those\n      // changes back together\n      const result = new Array(left.length + right.length - 1);\n      MyArray.Copy(left, 0, result, 0, left.length - 1);\n      result[left.length - 1] = mergedChangeArr[0];\n      MyArray.Copy(right, 1, result, left.length, right.length - 1);\n      return result;\n    } else {\n      const result = new Array(left.length + right.length);\n      MyArray.Copy(left, 0, result, 0, left.length);\n      MyArray.Copy(right, 0, result, left.length, right.length);\n      return result;\n    }\n  }\n  /**\r\n   * Returns true if the two changes overlap and can be merged into a single\r\n   * change\r\n   * @param left The left change\r\n   * @param right The right change\r\n   * @param mergedChange The merged change if the two overlap, null otherwise\r\n   * @returns True if the two changes overlap\r\n   */\n\n\n  ChangesOverlap(left, right, mergedChangeArr) {\n    Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n    Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n    if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n      const originalStart = left.originalStart;\n      let originalLength = left.originalLength;\n      const modifiedStart = left.modifiedStart;\n      let modifiedLength = left.modifiedLength;\n\n      if (left.originalStart + left.originalLength >= right.originalStart) {\n        originalLength = right.originalStart + right.originalLength - left.originalStart;\n      }\n\n      if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n        modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n      }\n\n      mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n      return true;\n    } else {\n      mergedChangeArr[0] = null;\n      return false;\n    }\n  }\n  /**\r\n   * Helper method used to clip a diagonal index to the range of valid\r\n   * diagonals. This also decides whether or not the diagonal index,\r\n   * if it exceeds the boundary, should be clipped to the boundary or clipped\r\n   * one inside the boundary depending on the Even/Odd status of the boundary\r\n   * and numDifferences.\r\n   * @param diagonal The index of the diagonal to clip.\r\n   * @param numDifferences The current number of differences being iterated upon.\r\n   * @param diagonalBaseIndex The base reference diagonal.\r\n   * @param numDiagonals The total number of diagonals.\r\n   * @returns The clipped diagonal index.\r\n   */\n\n\n  ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n    if (diagonal >= 0 && diagonal < numDiagonals) {\n      // Nothing to clip, its in range\n      return diagonal;\n    } // diagonalsBelow: The number of diagonals below the reference diagonal\n    // diagonalsAbove: The number of diagonals above the reference diagonal\n\n\n    const diagonalsBelow = diagonalBaseIndex;\n    const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n    const diffEven = numDifferences % 2 === 0;\n\n    if (diagonal < 0) {\n      const lowerBoundEven = diagonalsBelow % 2 === 0;\n      return diffEven === lowerBoundEven ? 0 : 1;\n    } else {\n      const upperBoundEven = diagonalsAbove % 2 === 0;\n      return diffEven === upperBoundEven ? numDiagonals - 1 : numDiagonals - 2;\n    }\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\r\n * Copyright Joyent, Inc. and other Node contributors.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to permit\r\n * persons to whom the Software is furnished to do so, subject to the\r\n * following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included\r\n * in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65;\n/* A */\n\nconst CHAR_LOWERCASE_A = 97;\n/* a */\n\nconst CHAR_UPPERCASE_Z = 90;\n/* Z */\n\nconst CHAR_LOWERCASE_Z = 122;\n/* z */\n\nconst CHAR_DOT = 46;\n/* . */\n\nconst CHAR_FORWARD_SLASH = 47;\n/* / */\n\nconst CHAR_BACKWARD_SLASH = 92;\n/* \\ */\n\nconst CHAR_COLON = 58;\n/* : */\n\nconst CHAR_QUESTION_MARK = 63;\n/* ? */\n\nclass ErrorInvalidArgType extends Error {\n  constructor(name, expected, actual) {\n    // determiner: 'must be' or 'must not be'\n    let determiner;\n\n    if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n      determiner = 'must not be';\n      expected = expected.replace(/^not /, '');\n    } else {\n      determiner = 'must be';\n    }\n\n    const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n    let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n    msg += `. Received type ${typeof actual}`;\n    super(msg);\n    this.code = 'ERR_INVALID_ARG_TYPE';\n  }\n\n}\n\nfunction validateString(value, name) {\n  if (typeof value !== 'string') {\n    throw new ErrorInvalidArgType(name, 'string', value);\n  }\n}\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z || code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n} // Resolves . and .. elements in a path with directory names\n\n\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) {\n      code = path.charCodeAt(i);\n    } else if (isPathSeparator(code)) {\n      break;\n    } else {\n      code = CHAR_FORWARD_SLASH;\n    }\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {// NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== CHAR_DOT || res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(separator);\n\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n            }\n\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `${separator}${path.slice(lastSlash + 1, i)}`;\n        } else {\n          res = path.slice(lastSlash + 1, i);\n        }\n\n        lastSegmentLength = i - lastSlash - 1;\n      }\n\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  if (pathObject === null || typeof pathObject !== 'object') {\n    throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n  }\n\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base || `${pathObject.name || ''}${pathObject.ext || ''}`;\n\n  if (!dir) {\n    return base;\n  }\n\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport const win32 = {\n  // path.resolve([from ...], to)\n  resolve(...pathSegments) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = pathSegments.length - 1; i >= -1; i--) {\n      let path;\n\n      if (i >= 0) {\n        path = pathSegments[i];\n        validateString(path, 'path'); // Skip empty entries\n\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path, get cwd for that drive, or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points, because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd(); // Verify that a cwd was found and that it actually points\n        // to our drive. If not, default to the drive's root.\n\n        if (path === undefined || path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() && path.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = path.charCodeAt(0); // Try to match a root\n\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n        // If we started with a separator, we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(path.charCodeAt(1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j; // Match 1 or more non-path separators\n\n          while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n\n          if (j < len && j !== last) {\n            const firstPart = path.slice(last, j); // Matched!\n\n            last = j; // Match 1 or more path separators\n\n            while (j < len && isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n\n            if (j < len && j !== last) {\n              // Matched!\n              last = j; // Match 1 or more non-path separators\n\n              while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                j++;\n              }\n\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n        // Possible device root\n        device = path.slice(0, 2);\n        rootEnd = 2;\n\n        if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n            // This path points to another device so it is not applicable\n            continue;\n          }\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0) {\n          break;\n        }\n      } else {\n        resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    } // At this point the path should be resolved to a full absolute path,\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n    // Normalize the tail path\n\n\n    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n    return resolvedAbsolute ? `${resolvedDevice}\\\\${resolvedTail}` : `${resolvedDevice}${resolvedTail}` || '.';\n  },\n\n  normalize(path) {\n    validateString(path, 'path');\n    const len = path.length;\n\n    if (len === 0) {\n      return '.';\n    }\n\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = path.charCodeAt(0); // Try to match a root\n\n    if (len === 1) {\n      // `path` contains just a single char, exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n      // If we started with a separator, we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j; // Match 1 or more non-path separators\n\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n\n        if (j < len && j !== last) {\n          const firstPart = path.slice(last, j); // Matched!\n\n          last = j; // Match 1 or more path separators\n\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n\n          if (j < len && j !== last) {\n            // Matched!\n            last = j; // Match 1 or more non-path separators\n\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n            }\n\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      // Possible device root\n      device = path.slice(0, 2);\n      rootEnd = 2;\n\n      if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n\n    let tail = rootEnd < len ? normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) : '';\n\n    if (tail.length === 0 && !isAbsolute) {\n      tail = '.';\n    }\n\n    if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n      tail += '\\\\';\n    }\n\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  },\n\n  isAbsolute(path) {\n    validateString(path, 'path');\n    const len = path.length;\n\n    if (len === 0) {\n      return false;\n    }\n\n    const code = path.charCodeAt(0);\n    return isPathSeparator(code) || // Possible device root\n    len > 2 && isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON && isPathSeparator(path.charCodeAt(2));\n  },\n\n  join(...paths) {\n    if (paths.length === 0) {\n      return '.';\n    }\n\n    let joined;\n    let firstPart;\n\n    for (let i = 0; i < paths.length; ++i) {\n      const arg = paths[i];\n      validateString(arg, 'path');\n\n      if (arg.length > 0) {\n        if (joined === undefined) {\n          joined = firstPart = arg;\n        } else {\n          joined += `\\\\${arg}`;\n        }\n      }\n    }\n\n    if (joined === undefined) {\n      return '.';\n    } // Make sure that the joined path doesn't start with two slashes, because\n    // normalize() will mistake it for an UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at an UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as an UNC path it needs to\n    // have at least 2 components, so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\n\n    let needsReplace = true;\n    let slashCount = 0;\n\n    if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n\n      if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n        ++slashCount;\n\n        if (firstLen > 2) {\n          if (isPathSeparator(firstPart.charCodeAt(2))) {\n            ++slashCount;\n          } else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length && isPathSeparator(joined.charCodeAt(slashCount))) {\n        slashCount++;\n      } // Replace the slashes if needed\n\n\n      if (slashCount >= 2) {\n        joined = `\\\\${joined.slice(slashCount)}`;\n      }\n    }\n\n    return win32.normalize(joined);\n  },\n\n  // It will solve the relative path from `from` to `to`, for instance:\n  //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n  //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n  // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n  relative(from, to) {\n    validateString(from, 'from');\n    validateString(to, 'to');\n\n    if (from === to) {\n      return '';\n    }\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig) {\n      return '';\n    }\n\n    from = fromOrig.toLowerCase();\n    to = toOrig.toLowerCase();\n\n    if (from === to) {\n      return '';\n    } // Trim any leading backslashes\n\n\n    let fromStart = 0;\n\n    while (fromStart < from.length && from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    } // Trim trailing backslashes (applicable to UNC paths only)\n\n\n    let fromEnd = from.length;\n\n    while (fromEnd - 1 > fromStart && from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n      fromEnd--;\n    }\n\n    const fromLen = fromEnd - fromStart; // Trim any leading backslashes\n\n    let toStart = 0;\n\n    while (toStart < to.length && to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    } // Trim trailing backslashes (applicable to UNC paths only)\n\n\n    let toEnd = to.length;\n\n    while (toEnd - 1 > toStart && to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n\n    const toLen = toEnd - toStart; // Compare paths to find the longest common path from root\n\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n\n    for (; i < length; i++) {\n      const fromCode = from.charCodeAt(fromStart + i);\n\n      if (fromCode !== to.charCodeAt(toStart + i)) {\n        break;\n      } else if (fromCode === CHAR_BACKWARD_SLASH) {\n        lastCommonSep = i;\n      }\n    } // We found a mismatch before the first common path separator was seen, so\n    // return the original `to`.\n\n\n    if (i !== length) {\n      if (lastCommonSep === -1) {\n        return toOrig;\n      }\n    } else {\n      if (toLen > length) {\n        if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return toOrig.slice(toStart + i + 1);\n        }\n\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return toOrig.slice(toStart + i);\n        }\n      }\n\n      if (fromLen > length) {\n        if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n\n      if (lastCommonSep === -1) {\n        lastCommonSep = 0;\n      }\n    }\n\n    let out = ''; // Generate the relative path based on the path difference between `to` and\n    // `from`\n\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep; // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n\n    if (out.length > 0) {\n      return `${out}${toOrig.slice(toStart, toEnd)}`;\n    }\n\n    if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n      ++toStart;\n    }\n\n    return toOrig.slice(toStart, toEnd);\n  },\n\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string') {\n      return path;\n    }\n\n    if (path.length === 0) {\n      return '';\n    }\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2) {\n      return path;\n    }\n\n    if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n        const code = resolvedPath.charCodeAt(2);\n\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root, convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n        }\n      }\n    } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) && resolvedPath.charCodeAt(1) === CHAR_COLON && resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n      // Matched device root, convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return path;\n  },\n\n  dirname(path) {\n    validateString(path, 'path');\n    const len = path.length;\n\n    if (len === 0) {\n      return '.';\n    }\n\n    let rootEnd = -1;\n    let offset = 0;\n    const code = path.charCodeAt(0);\n\n    if (len === 1) {\n      // `path` contains just a path separator, exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    } // Try to match a root\n\n\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j; // Match 1 or more non-path separators\n\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n\n        if (j < len && j !== last) {\n          // Matched!\n          last = j; // Match 1 or more path separators\n\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n\n          if (j < len && j !== last) {\n            // Matched!\n            last = j; // Match 1 or more non-path separators\n\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a \"normal root\" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      } // Possible device root\n\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(path.charCodeAt(i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1) {\n        return '.';\n      }\n\n      end = rootEnd;\n    }\n\n    return path.slice(0, end);\n  },\n\n  basename(path, ext) {\n    if (ext !== undefined) {\n      validateString(ext, 'ext');\n    }\n\n    validateString(path, 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i; // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 && isWindowsDeviceRoot(path.charCodeAt(0)) && path.charCodeAt(1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path) {\n        return '';\n      }\n\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n\n      for (i = path.length - 1; i >= start; --i) {\n        const code = path.charCodeAt(i);\n\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) {\n        end = firstNonSlashEnd;\n      } else if (end === -1) {\n        end = path.length;\n      }\n\n      return path.slice(start, end);\n    }\n\n    for (i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(path.charCodeAt(i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1) {\n      return '';\n    }\n\n    return path.slice(start, end);\n  },\n\n  extname(path) {\n    validateString(path, 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    let preDotState = 0; // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 && path.charCodeAt(1) === CHAR_COLON && isWindowsDeviceRoot(path.charCodeAt(0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = path.charCodeAt(i);\n\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n    preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n\n    return path.slice(startDot, end);\n  },\n\n  format: _format.bind(null, '\\\\'),\n\n  parse(path) {\n    validateString(path, 'path');\n    const ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n\n    if (path.length === 0) {\n      return ret;\n    }\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = path.charCodeAt(0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator, exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n\n      ret.base = ret.name = path;\n      return ret;\n    } // Try to match a root\n\n\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n      rootEnd = 1;\n\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j; // Match 1 or more non-path separators\n\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n\n        if (j < len && j !== last) {\n          // Matched!\n          last = j; // Match 1 or more path separators\n\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n\n          if (j < len && j !== last) {\n            // Matched!\n            last = j; // Match 1 or more non-path separators\n\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root, exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n\n      rootEnd = 2;\n\n      if (isPathSeparator(path.charCodeAt(2))) {\n        if (len === 3) {\n          // `path` contains just a drive root, exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n\n        rootEnd = 3;\n      }\n    }\n\n    if (rootEnd > 0) {\n      ret.root = path.slice(0, rootEnd);\n    }\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    let preDotState = 0; // Get non-dir info\n\n    for (; i >= rootEnd; --i) {\n      code = path.charCodeAt(i);\n\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 || // We saw a non-dot character immediately before the dot\n      preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        ret.base = ret.name = path.slice(startPart, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n        ret.ext = path.slice(startDot, end);\n      }\n    } // If the directory is the root, use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\n\n    if (startPart > 0 && startPart !== rootEnd) {\n      ret.dir = path.slice(0, startPart - 1);\n    } else {\n      ret.dir = ret.root;\n    }\n\n    return ret;\n  },\n\n  sep: '\\\\',\n  delimiter: ';',\n  win32: null,\n  posix: null\n};\nexport const posix = {\n  // path.resolve([from ...], to)\n  resolve(...pathSegments) {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? pathSegments[i] : process.cwd();\n      validateString(path, 'path'); // Skip empty entries\n\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    } // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n\n\n    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  },\n\n  normalize(path) {\n    validateString(path, 'path');\n\n    if (path.length === 0) {\n      return '.';\n    }\n\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH; // Normalize the path\n\n    path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute) {\n        return '/';\n      }\n\n      return trailingSeparator ? './' : '.';\n    }\n\n    if (trailingSeparator) {\n      path += '/';\n    }\n\n    return isAbsolute ? `/${path}` : path;\n  },\n\n  isAbsolute(path) {\n    validateString(path, 'path');\n    return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n  },\n\n  join(...paths) {\n    if (paths.length === 0) {\n      return '.';\n    }\n\n    let joined;\n\n    for (let i = 0; i < paths.length; ++i) {\n      const arg = paths[i];\n      validateString(arg, 'path');\n\n      if (arg.length > 0) {\n        if (joined === undefined) {\n          joined = arg;\n        } else {\n          joined += `/${arg}`;\n        }\n      }\n    }\n\n    if (joined === undefined) {\n      return '.';\n    }\n\n    return posix.normalize(joined);\n  },\n\n  relative(from, to) {\n    validateString(from, 'from');\n    validateString(to, 'to');\n\n    if (from === to) {\n      return '';\n    } // Trim leading forward slashes.\n\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) {\n      return '';\n    }\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart; // Compare paths to find the longest common path from root\n\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n\n    for (; i < length; i++) {\n      const fromCode = from.charCodeAt(fromStart + i);\n\n      if (fromCode !== to.charCodeAt(toStart + i)) {\n        break;\n      } else if (fromCode === CHAR_FORWARD_SLASH) {\n        lastCommonSep = i;\n      }\n    }\n\n    if (i === length) {\n      if (toLen > length) {\n        if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return to.slice(toStart + i + 1);\n        }\n\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return to.slice(toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = ''; // Generate the relative path based on the path difference between `to`\n    // and `from`.\n\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    } // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n\n\n    return `${out}${to.slice(toStart + lastCommonSep)}`;\n  },\n\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  },\n\n  dirname(path) {\n    validateString(path, 'path');\n\n    if (path.length === 0) {\n      return '.';\n    }\n\n    const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      return hasRoot ? '/' : '.';\n    }\n\n    if (hasRoot && end === 1) {\n      return '//';\n    }\n\n    return path.slice(0, end);\n  },\n\n  basename(path, ext) {\n    if (ext !== undefined) {\n      validateString(ext, 'ext');\n    }\n\n    validateString(path, 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path) {\n        return '';\n      }\n\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n\n      for (i = path.length - 1; i >= 0; --i) {\n        const code = path.charCodeAt(i);\n\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) {\n        end = firstNonSlashEnd;\n      } else if (end === -1) {\n        end = path.length;\n      }\n\n      return path.slice(start, end);\n    }\n\n    for (i = path.length - 1; i >= 0; --i) {\n      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1) {\n      return '';\n    }\n\n    return path.slice(start, end);\n  },\n\n  extname(path) {\n    validateString(path, 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    let preDotState = 0;\n\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = path.charCodeAt(i);\n\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n    preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n\n    return path.slice(startDot, end);\n  },\n\n  format: _format.bind(null, '/'),\n\n  parse(path) {\n    validateString(path, 'path');\n    const ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n\n    if (path.length === 0) {\n      return ret;\n    }\n\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let start;\n\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    let preDotState = 0; // Get non-dir info\n\n    for (; i >= start; --i) {\n      const code = path.charCodeAt(i);\n\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n\n      if (startDot === -1 || // We saw a non-dot character immediately before the dot\n      preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        ret.base = ret.name = path.slice(start, end);\n      } else {\n        ret.name = path.slice(start, startDot);\n        ret.base = path.slice(start, end);\n        ret.ext = path.slice(startDot, end);\n      }\n    }\n\n    if (startPart > 0) {\n      ret.dir = path.slice(0, startPart - 1);\n    } else if (isAbsolute) {\n      ret.dir = '/';\n    }\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = process.platform === 'win32' ? win32.normalize : posix.normalize;\nexport const resolve = process.platform === 'win32' ? win32.resolve : posix.resolve;\nexport const relative = process.platform === 'win32' ? win32.relative : posix.relative;\nexport const dirname = process.platform === 'win32' ? win32.dirname : posix.dirname;\nexport const basename = process.platform === 'win32' ? win32.basename : posix.basename;\nexport const extname = process.platform === 'win32' ? win32.extname : posix.extname;\nexport const sep = process.platform === 'win32' ? win32.sep : posix.sep;","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isWindows } from './platform.js';\nimport * as paths from './path.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret, _strict) {\n  // scheme, must be set\n  if (!ret.scheme && _strict) {\n    throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n  } // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n  // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\n\n  if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n    throw new Error('[UriError]: Scheme contains illegal characters.');\n  } // path, http://tools.ietf.org/html/rfc3986#section-3.3\n  // If a URI contains an authority component, then the path component\n  // must either be empty or begin with a slash (\"/\") character.  If a URI\n  // does not contain an authority component, then the path cannot begin\n  // with two slash characters (\"//\").\n\n\n  if (ret.path) {\n    if (ret.authority) {\n      if (!_singleSlashStart.test(ret.path)) {\n        throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n      }\n    } else {\n      if (_doubleSlashStart.test(ret.path)) {\n        throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n      }\n    }\n  }\n} // for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\n\n\nfunction _schemeFix(scheme, _strict) {\n  if (!scheme && !_strict) {\n    return 'file';\n  }\n\n  return scheme;\n} // implements a bit of https://tools.ietf.org/html/rfc3986#section-5\n\n\nfunction _referenceResolution(scheme, path) {\n  // the slash-character is our 'default base' as we don't\n  // support constructing URIs relative to other URIs. This\n  // also means that we alter and potentially break paths.\n  // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n  switch (scheme) {\n    case 'https':\n    case 'http':\n    case 'file':\n      if (!path) {\n        path = _slash;\n      } else if (path[0] !== _slash) {\n        path = _slash + path;\n      }\n\n      break;\n  }\n\n  return path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\r\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\r\n * This class is a simple parser which creates the basic component parts\r\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\r\n * and encoding.\r\n *\r\n * ```txt\r\n *       foo://example.com:8042/over/there?name=ferret#nose\r\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\r\n *        |           |            |            |        |\r\n *     scheme     authority       path        query   fragment\r\n *        |   _____________________|__\r\n *       / \\ /                        \\\r\n *       urn:example:animal:ferret:nose\r\n * ```\r\n */\n\nexport class URI {\n  /**\r\n   * @internal\r\n   */\n  constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n    if (typeof schemeOrData === 'object') {\n      this.scheme = schemeOrData.scheme || _empty;\n      this.authority = schemeOrData.authority || _empty;\n      this.path = schemeOrData.path || _empty;\n      this.query = schemeOrData.query || _empty;\n      this.fragment = schemeOrData.fragment || _empty; // no validation because it's this URI\n      // that creates uri components.\n      // _validateUri(this);\n    } else {\n      this.scheme = _schemeFix(schemeOrData, _strict);\n      this.authority = authority || _empty;\n      this.path = _referenceResolution(this.scheme, path || _empty);\n      this.query = query || _empty;\n      this.fragment = fragment || _empty;\n\n      _validateUri(this, _strict);\n    }\n  }\n\n  static isUri(thing) {\n    if (thing instanceof URI) {\n      return true;\n    }\n\n    if (!thing) {\n      return false;\n    }\n\n    return typeof thing.authority === 'string' && typeof thing.fragment === 'string' && typeof thing.path === 'string' && typeof thing.query === 'string' && typeof thing.scheme === 'string' && typeof thing.fsPath === 'string' && typeof thing.with === 'function' && typeof thing.toString === 'function';\n  } // ---- filesystem path -----------------------\n\n  /**\r\n   * Returns a string representing the corresponding file system path of this URI.\r\n   * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\r\n   * platform specific path separator.\r\n   *\r\n   * * Will *not* validate the path for invalid characters and semantics.\r\n   * * Will *not* look at the scheme of this URI.\r\n   * * The result shall *not* be used for display purposes but for accessing a file on disk.\r\n   *\r\n   *\r\n   * The *difference* to `URI#path` is the use of the platform specific separator and the handling\r\n   * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\r\n   *\r\n   * ```ts\r\n      const u = URI.parse('file://server/c$/folder/file.txt')\r\n      u.authority === 'server'\r\n      u.path === '/shares/c$/file.txt'\r\n      u.fsPath === '\\\\server\\c$\\folder\\file.txt'\r\n  ```\r\n   *\r\n   * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\r\n   * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\r\n   * with URIs that represent files on disk (`file` scheme).\r\n   */\n\n\n  get fsPath() {\n    // if (this.scheme !== 'file') {\n    // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n    // }\n    return uriToFsPath(this, false);\n  } // ---- modify to new -------------------------\n\n\n  with(change) {\n    if (!change) {\n      return this;\n    }\n\n    let {\n      scheme,\n      authority,\n      path,\n      query,\n      fragment\n    } = change;\n\n    if (scheme === undefined) {\n      scheme = this.scheme;\n    } else if (scheme === null) {\n      scheme = _empty;\n    }\n\n    if (authority === undefined) {\n      authority = this.authority;\n    } else if (authority === null) {\n      authority = _empty;\n    }\n\n    if (path === undefined) {\n      path = this.path;\n    } else if (path === null) {\n      path = _empty;\n    }\n\n    if (query === undefined) {\n      query = this.query;\n    } else if (query === null) {\n      query = _empty;\n    }\n\n    if (fragment === undefined) {\n      fragment = this.fragment;\n    } else if (fragment === null) {\n      fragment = _empty;\n    }\n\n    if (scheme === this.scheme && authority === this.authority && path === this.path && query === this.query && fragment === this.fragment) {\n      return this;\n    }\n\n    return new Uri(scheme, authority, path, query, fragment);\n  } // ---- parse & validate ------------------------\n\n  /**\r\n   * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\r\n   * `file:///usr/home`, or `scheme:with/path`.\r\n   *\r\n   * @param value A string which represents an URI (see `URI#toString`).\r\n   */\n\n\n  static parse(value, _strict = false) {\n    const match = _regexp.exec(value);\n\n    if (!match) {\n      return new Uri(_empty, _empty, _empty, _empty, _empty);\n    }\n\n    return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n  }\n  /**\r\n   * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\r\n   * `/usr/home`, or `\\\\server\\share\\some\\path`.\r\n   *\r\n   * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\r\n   * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\r\n   * `URI.parse('file://' + path)` because the path might contain characters that are\r\n   * interpreted (# and ?). See the following sample:\r\n   * ```ts\r\n  const good = URI.file('/coding/c#/project1');\r\n  good.scheme === 'file';\r\n  good.path === '/coding/c#/project1';\r\n  good.fragment === '';\r\n  const bad = URI.parse('file://' + '/coding/c#/project1');\r\n  bad.scheme === 'file';\r\n  bad.path === '/coding/c'; // path is now broken\r\n  bad.fragment === '/project1';\r\n  ```\r\n   *\r\n   * @param path A file system path (see `URI#fsPath`)\r\n   */\n\n\n  static file(path) {\n    let authority = _empty; // normalize to fwd-slashes on windows,\n    // on other systems bwd-slashes are valid\n    // filename character, eg /f\\oo/ba\\r.txt\n\n    if (isWindows) {\n      path = path.replace(/\\\\/g, _slash);\n    } // check for authority as used in UNC shares\n    // or use the path as given\n\n\n    if (path[0] === _slash && path[1] === _slash) {\n      const idx = path.indexOf(_slash, 2);\n\n      if (idx === -1) {\n        authority = path.substring(2);\n        path = _slash;\n      } else {\n        authority = path.substring(2, idx);\n        path = path.substring(idx) || _slash;\n      }\n    }\n\n    return new Uri('file', authority, path, _empty, _empty);\n  }\n\n  static from(components) {\n    const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n\n    _validateUri(result, true);\n\n    return result;\n  }\n  /**\r\n   * Join a URI path with path fragments and normalizes the resulting path.\r\n   *\r\n   * @param uri The input URI.\r\n   * @param pathFragment The path fragment to add to the URI path.\r\n   * @returns The resulting URI.\r\n   */\n\n\n  static joinPath(uri, ...pathFragment) {\n    if (!uri.path) {\n      throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n    }\n\n    let newPath;\n\n    if (isWindows && uri.scheme === 'file') {\n      newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n    } else {\n      newPath = paths.posix.join(uri.path, ...pathFragment);\n    }\n\n    return uri.with({\n      path: newPath\n    });\n  } // ---- printing/externalize ---------------------------\n\n  /**\r\n   * Creates a string representation for this URI. It's guaranteed that calling\r\n   * `URI.parse` with the result of this function creates an URI which is equal\r\n   * to this URI.\r\n   *\r\n   * * The result shall *not* be used for display purposes but for externalization or transport.\r\n   * * The result will be encoded using the percentage encoding and encoding happens mostly\r\n   * ignore the scheme-specific encoding rules.\r\n   *\r\n   * @param skipEncoding Do not encode the result, default is `false`\r\n   */\n\n\n  toString(skipEncoding = false) {\n    return _asFormatted(this, skipEncoding);\n  }\n\n  toJSON() {\n    return this;\n  }\n\n  static revive(data) {\n    if (!data) {\n      return data;\n    } else if (data instanceof URI) {\n      return data;\n    } else {\n      const result = new Uri(data);\n      result._formatted = data.external;\n      result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n      return result;\n    }\n  }\n\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined; // This class exists so that URI is compatibile with vscode.Uri (API).\n\n\nclass Uri extends URI {\n  constructor() {\n    super(...arguments);\n    this._formatted = null;\n    this._fsPath = null;\n  }\n\n  get fsPath() {\n    if (!this._fsPath) {\n      this._fsPath = uriToFsPath(this, false);\n    }\n\n    return this._fsPath;\n  }\n\n  toString(skipEncoding = false) {\n    if (!skipEncoding) {\n      if (!this._formatted) {\n        this._formatted = _asFormatted(this, false);\n      }\n\n      return this._formatted;\n    } else {\n      // we don't cache that\n      return _asFormatted(this, true);\n    }\n  }\n\n  toJSON() {\n    const res = {\n      $mid: 1\n      /* Uri */\n\n    }; // cached state\n\n    if (this._fsPath) {\n      res.fsPath = this._fsPath;\n      res._sep = _pathSepMarker;\n    }\n\n    if (this._formatted) {\n      res.external = this._formatted;\n    } // uri components\n\n\n    if (this.path) {\n      res.path = this.path;\n    }\n\n    if (this.scheme) {\n      res.scheme = this.scheme;\n    }\n\n    if (this.authority) {\n      res.authority = this.authority;\n    }\n\n    if (this.query) {\n      res.query = this.query;\n    }\n\n    if (this.fragment) {\n      res.fragment = this.fragment;\n    }\n\n    return res;\n  }\n\n} // reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\n\n\nconst encodeTable = {\n  [58\n  /* Colon */\n  ]: '%3A',\n  [47\n  /* Slash */\n  ]: '%2F',\n  [63\n  /* QuestionMark */\n  ]: '%3F',\n  [35\n  /* Hash */\n  ]: '%23',\n  [91\n  /* OpenSquareBracket */\n  ]: '%5B',\n  [93\n  /* CloseSquareBracket */\n  ]: '%5D',\n  [64\n  /* AtSign */\n  ]: '%40',\n  [33\n  /* ExclamationMark */\n  ]: '%21',\n  [36\n  /* DollarSign */\n  ]: '%24',\n  [38\n  /* Ampersand */\n  ]: '%26',\n  [39\n  /* SingleQuote */\n  ]: '%27',\n  [40\n  /* OpenParen */\n  ]: '%28',\n  [41\n  /* CloseParen */\n  ]: '%29',\n  [42\n  /* Asterisk */\n  ]: '%2A',\n  [43\n  /* Plus */\n  ]: '%2B',\n  [44\n  /* Comma */\n  ]: '%2C',\n  [59\n  /* Semicolon */\n  ]: '%3B',\n  [61\n  /* Equals */\n  ]: '%3D',\n  [32\n  /* Space */\n  ]: '%20'\n};\n\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n  let res = undefined;\n  let nativeEncodePos = -1;\n\n  for (let pos = 0; pos < uriComponent.length; pos++) {\n    const code = uriComponent.charCodeAt(pos); // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\n    if (code >= 97\n    /* a */\n    && code <= 122\n    /* z */\n    || code >= 65\n    /* A */\n    && code <= 90\n    /* Z */\n    || code >= 48\n    /* Digit0 */\n    && code <= 57\n    /* Digit9 */\n    || code === 45\n    /* Dash */\n    || code === 46\n    /* Period */\n    || code === 95\n    /* Underline */\n    || code === 126\n    /* Tilde */\n    || allowSlash && code === 47\n    /* Slash */\n    ) {\n      // check if we are delaying native encode\n      if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n        nativeEncodePos = -1;\n      } // check if we write into a new string (by default we try to return the param)\n\n\n      if (res !== undefined) {\n        res += uriComponent.charAt(pos);\n      }\n    } else {\n      // encoding needed, we need to allocate a new string\n      if (res === undefined) {\n        res = uriComponent.substr(0, pos);\n      } // check with default table first\n\n\n      const escaped = encodeTable[code];\n\n      if (escaped !== undefined) {\n        // check if we are delaying native encode\n        if (nativeEncodePos !== -1) {\n          res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n          nativeEncodePos = -1;\n        } // append escaped variant to result\n\n\n        res += escaped;\n      } else if (nativeEncodePos === -1) {\n        // use native encode only when needed\n        nativeEncodePos = pos;\n      }\n    }\n  }\n\n  if (nativeEncodePos !== -1) {\n    res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n  }\n\n  return res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path) {\n  let res = undefined;\n\n  for (let pos = 0; pos < path.length; pos++) {\n    const code = path.charCodeAt(pos);\n\n    if (code === 35\n    /* Hash */\n    || code === 63\n    /* QuestionMark */\n    ) {\n      if (res === undefined) {\n        res = path.substr(0, pos);\n      }\n\n      res += encodeTable[code];\n    } else {\n      if (res !== undefined) {\n        res += path[pos];\n      }\n    }\n  }\n\n  return res !== undefined ? res : path;\n}\n/**\r\n * Compute `fsPath` for the given uri\r\n */\n\n\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n  let value;\n\n  if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n    // unc path: file://shares/c$/far/boo\n    value = `//${uri.authority}${uri.path}`;\n  } else if (uri.path.charCodeAt(0) === 47\n  /* Slash */\n  && (uri.path.charCodeAt(1) >= 65\n  /* A */\n  && uri.path.charCodeAt(1) <= 90\n  /* Z */\n  || uri.path.charCodeAt(1) >= 97\n  /* a */\n  && uri.path.charCodeAt(1) <= 122\n  /* z */\n  ) && uri.path.charCodeAt(2) === 58\n  /* Colon */\n  ) {\n    if (!keepDriveLetterCasing) {\n      // windows drive letter: file:///c:/far/boo\n      value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    } else {\n      value = uri.path.substr(1);\n    }\n  } else {\n    // other path\n    value = uri.path;\n  }\n\n  if (isWindows) {\n    value = value.replace(/\\//g, '\\\\');\n  }\n\n  return value;\n}\n/**\r\n * Create the external version of a uri\r\n */\n\nfunction _asFormatted(uri, skipEncoding) {\n  const encoder = !skipEncoding ? encodeURIComponentFast : encodeURIComponentMinimal;\n  let res = '';\n  let {\n    scheme,\n    authority,\n    path,\n    query,\n    fragment\n  } = uri;\n\n  if (scheme) {\n    res += scheme;\n    res += ':';\n  }\n\n  if (authority || scheme === 'file') {\n    res += _slash;\n    res += _slash;\n  }\n\n  if (authority) {\n    let idx = authority.indexOf('@');\n\n    if (idx !== -1) {\n      // <user>@<auth>\n      const userinfo = authority.substr(0, idx);\n      authority = authority.substr(idx + 1);\n      idx = userinfo.indexOf(':');\n\n      if (idx === -1) {\n        res += encoder(userinfo, false);\n      } else {\n        // <user>:<pass>@<auth>\n        res += encoder(userinfo.substr(0, idx), false);\n        res += ':';\n        res += encoder(userinfo.substr(idx + 1), false);\n      }\n\n      res += '@';\n    }\n\n    authority = authority.toLowerCase();\n    idx = authority.indexOf(':');\n\n    if (idx === -1) {\n      res += encoder(authority, false);\n    } else {\n      // <auth>:<port>\n      res += encoder(authority.substr(0, idx), false);\n      res += authority.substr(idx);\n    }\n  }\n\n  if (path) {\n    // lower-case windows drive letters in /C:/fff or C:/fff\n    if (path.length >= 3 && path.charCodeAt(0) === 47\n    /* Slash */\n    && path.charCodeAt(2) === 58\n    /* Colon */\n    ) {\n      const code = path.charCodeAt(1);\n\n      if (code >= 65\n      /* A */\n      && code <= 90\n      /* Z */\n      ) {\n        path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n      }\n    } else if (path.length >= 2 && path.charCodeAt(1) === 58\n    /* Colon */\n    ) {\n      const code = path.charCodeAt(0);\n\n      if (code >= 65\n      /* A */\n      && code <= 90\n      /* Z */\n      ) {\n        path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n      }\n    } // encode the rest of the path\n\n\n    res += encoder(path, true);\n  }\n\n  if (query) {\n    res += '?';\n    res += encoder(query, false);\n  }\n\n  if (fragment) {\n    res += '#';\n    res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n  }\n\n  return res;\n} // --- decode\n\n\nfunction decodeURIComponentGraceful(str) {\n  try {\n    return decodeURIComponent(str);\n  } catch (_a) {\n    if (str.length > 3) {\n      return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n    } else {\n      return str;\n    }\n  }\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str) {\n  if (!str.match(_rEncodedAsHex)) {\n    return str;\n  }\n\n  return str.replace(_rEncodedAsHex, match => decodeURIComponentGraceful(match));\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n\n/**\r\n * A position in the editor.\r\n */\nexport class Position {\n  constructor(lineNumber, column) {\n    this.lineNumber = lineNumber;\n    this.column = column;\n  }\n  /**\r\n   * Create a new position from this position.\r\n   *\r\n   * @param newLineNumber new line number\r\n   * @param newColumn new column\r\n   */\n\n\n  with(newLineNumber = this.lineNumber, newColumn = this.column) {\n    if (newLineNumber === this.lineNumber && newColumn === this.column) {\n      return this;\n    } else {\n      return new Position(newLineNumber, newColumn);\n    }\n  }\n  /**\r\n   * Derive a new position from this position.\r\n   *\r\n   * @param deltaLineNumber line number delta\r\n   * @param deltaColumn column delta\r\n   */\n\n\n  delta(deltaLineNumber = 0, deltaColumn = 0) {\n    return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n  }\n  /**\r\n   * Test if this position equals other position\r\n   */\n\n\n  equals(other) {\n    return Position.equals(this, other);\n  }\n  /**\r\n   * Test if position `a` equals position `b`\r\n   */\n\n\n  static equals(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n\n    return !!a && !!b && a.lineNumber === b.lineNumber && a.column === b.column;\n  }\n  /**\r\n   * Test if this position is before other position.\r\n   * If the two positions are equal, the result will be false.\r\n   */\n\n\n  isBefore(other) {\n    return Position.isBefore(this, other);\n  }\n  /**\r\n   * Test if position `a` is before position `b`.\r\n   * If the two positions are equal, the result will be false.\r\n   */\n\n\n  static isBefore(a, b) {\n    if (a.lineNumber < b.lineNumber) {\n      return true;\n    }\n\n    if (b.lineNumber < a.lineNumber) {\n      return false;\n    }\n\n    return a.column < b.column;\n  }\n  /**\r\n   * Test if this position is before other position.\r\n   * If the two positions are equal, the result will be true.\r\n   */\n\n\n  isBeforeOrEqual(other) {\n    return Position.isBeforeOrEqual(this, other);\n  }\n  /**\r\n   * Test if position `a` is before position `b`.\r\n   * If the two positions are equal, the result will be true.\r\n   */\n\n\n  static isBeforeOrEqual(a, b) {\n    if (a.lineNumber < b.lineNumber) {\n      return true;\n    }\n\n    if (b.lineNumber < a.lineNumber) {\n      return false;\n    }\n\n    return a.column <= b.column;\n  }\n  /**\r\n   * A function that compares positions, useful for sorting\r\n   */\n\n\n  static compare(a, b) {\n    let aLineNumber = a.lineNumber | 0;\n    let bLineNumber = b.lineNumber | 0;\n\n    if (aLineNumber === bLineNumber) {\n      let aColumn = a.column | 0;\n      let bColumn = b.column | 0;\n      return aColumn - bColumn;\n    }\n\n    return aLineNumber - bLineNumber;\n  }\n  /**\r\n   * Clone this position.\r\n   */\n\n\n  clone() {\n    return new Position(this.lineNumber, this.column);\n  }\n  /**\r\n   * Convert to a human-readable representation.\r\n   */\n\n\n  toString() {\n    return '(' + this.lineNumber + ',' + this.column + ')';\n  } // ---\n\n  /**\r\n   * Create a `Position` from an `IPosition`.\r\n   */\n\n\n  static lift(pos) {\n    return new Position(pos.lineNumber, pos.column);\n  }\n  /**\r\n   * Test if `obj` is an `IPosition`.\r\n   */\n\n\n  static isIPosition(obj) {\n    return obj && typeof obj.lineNumber === 'number' && typeof obj.column === 'number';\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\r\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\r\n */\n\nexport class Range {\n  constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n    if (startLineNumber > endLineNumber || startLineNumber === endLineNumber && startColumn > endColumn) {\n      this.startLineNumber = endLineNumber;\n      this.startColumn = endColumn;\n      this.endLineNumber = startLineNumber;\n      this.endColumn = startColumn;\n    } else {\n      this.startLineNumber = startLineNumber;\n      this.startColumn = startColumn;\n      this.endLineNumber = endLineNumber;\n      this.endColumn = endColumn;\n    }\n  }\n  /**\r\n   * Test if this range is empty.\r\n   */\n\n\n  isEmpty() {\n    return Range.isEmpty(this);\n  }\n  /**\r\n   * Test if `range` is empty.\r\n   */\n\n\n  static isEmpty(range) {\n    return range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn;\n  }\n  /**\r\n   * Test if position is in this range. If the position is at the edges, will return true.\r\n   */\n\n\n  containsPosition(position) {\n    return Range.containsPosition(this, position);\n  }\n  /**\r\n   * Test if `position` is in `range`. If the position is at the edges, will return true.\r\n   */\n\n\n  static containsPosition(range, position) {\n    if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n      return false;\n    }\n\n    if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n      return false;\n    }\n\n    if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\r\n   * Test if range is in this range. If the range is equal to this range, will return true.\r\n   */\n\n\n  containsRange(range) {\n    return Range.containsRange(this, range);\n  }\n  /**\r\n   * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\r\n   */\n\n\n  static containsRange(range, otherRange) {\n    if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n      return false;\n    }\n\n    if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n      return false;\n    }\n\n    if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n      return false;\n    }\n\n    if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\r\n   * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\r\n   */\n\n\n  strictContainsRange(range) {\n    return Range.strictContainsRange(this, range);\n  }\n  /**\r\n   * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\r\n   */\n\n\n  static strictContainsRange(range, otherRange) {\n    if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n      return false;\n    }\n\n    if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n      return false;\n    }\n\n    if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n      return false;\n    }\n\n    if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\r\n   * A reunion of the two ranges.\r\n   * The smallest position will be used as the start point, and the largest one as the end point.\r\n   */\n\n\n  plusRange(range) {\n    return Range.plusRange(this, range);\n  }\n  /**\r\n   * A reunion of the two ranges.\r\n   * The smallest position will be used as the start point, and the largest one as the end point.\r\n   */\n\n\n  static plusRange(a, b) {\n    let startLineNumber;\n    let startColumn;\n    let endLineNumber;\n    let endColumn;\n\n    if (b.startLineNumber < a.startLineNumber) {\n      startLineNumber = b.startLineNumber;\n      startColumn = b.startColumn;\n    } else if (b.startLineNumber === a.startLineNumber) {\n      startLineNumber = b.startLineNumber;\n      startColumn = Math.min(b.startColumn, a.startColumn);\n    } else {\n      startLineNumber = a.startLineNumber;\n      startColumn = a.startColumn;\n    }\n\n    if (b.endLineNumber > a.endLineNumber) {\n      endLineNumber = b.endLineNumber;\n      endColumn = b.endColumn;\n    } else if (b.endLineNumber === a.endLineNumber) {\n      endLineNumber = b.endLineNumber;\n      endColumn = Math.max(b.endColumn, a.endColumn);\n    } else {\n      endLineNumber = a.endLineNumber;\n      endColumn = a.endColumn;\n    }\n\n    return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n  }\n  /**\r\n   * A intersection of the two ranges.\r\n   */\n\n\n  intersectRanges(range) {\n    return Range.intersectRanges(this, range);\n  }\n  /**\r\n   * A intersection of the two ranges.\r\n   */\n\n\n  static intersectRanges(a, b) {\n    let resultStartLineNumber = a.startLineNumber;\n    let resultStartColumn = a.startColumn;\n    let resultEndLineNumber = a.endLineNumber;\n    let resultEndColumn = a.endColumn;\n    let otherStartLineNumber = b.startLineNumber;\n    let otherStartColumn = b.startColumn;\n    let otherEndLineNumber = b.endLineNumber;\n    let otherEndColumn = b.endColumn;\n\n    if (resultStartLineNumber < otherStartLineNumber) {\n      resultStartLineNumber = otherStartLineNumber;\n      resultStartColumn = otherStartColumn;\n    } else if (resultStartLineNumber === otherStartLineNumber) {\n      resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n    }\n\n    if (resultEndLineNumber > otherEndLineNumber) {\n      resultEndLineNumber = otherEndLineNumber;\n      resultEndColumn = otherEndColumn;\n    } else if (resultEndLineNumber === otherEndLineNumber) {\n      resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n    } // Check if selection is now empty\n\n\n    if (resultStartLineNumber > resultEndLineNumber) {\n      return null;\n    }\n\n    if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n      return null;\n    }\n\n    return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n  }\n  /**\r\n   * Test if this range equals other.\r\n   */\n\n\n  equalsRange(other) {\n    return Range.equalsRange(this, other);\n  }\n  /**\r\n   * Test if range `a` equals `b`.\r\n   */\n\n\n  static equalsRange(a, b) {\n    return !!a && !!b && a.startLineNumber === b.startLineNumber && a.startColumn === b.startColumn && a.endLineNumber === b.endLineNumber && a.endColumn === b.endColumn;\n  }\n  /**\r\n   * Return the end position (which will be after or equal to the start position)\r\n   */\n\n\n  getEndPosition() {\n    return Range.getEndPosition(this);\n  }\n  /**\r\n   * Return the end position (which will be after or equal to the start position)\r\n   */\n\n\n  static getEndPosition(range) {\n    return new Position(range.endLineNumber, range.endColumn);\n  }\n  /**\r\n   * Return the start position (which will be before or equal to the end position)\r\n   */\n\n\n  getStartPosition() {\n    return Range.getStartPosition(this);\n  }\n  /**\r\n   * Return the start position (which will be before or equal to the end position)\r\n   */\n\n\n  static getStartPosition(range) {\n    return new Position(range.startLineNumber, range.startColumn);\n  }\n  /**\r\n   * Transform to a user presentable string representation.\r\n   */\n\n\n  toString() {\n    return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n  }\n  /**\r\n   * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\r\n   */\n\n\n  setEndPosition(endLineNumber, endColumn) {\n    return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n  }\n  /**\r\n   * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\r\n   */\n\n\n  setStartPosition(startLineNumber, startColumn) {\n    return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n  }\n  /**\r\n   * Create a new empty range using this range's start position.\r\n   */\n\n\n  collapseToStart() {\n    return Range.collapseToStart(this);\n  }\n  /**\r\n   * Create a new empty range using this range's start position.\r\n   */\n\n\n  static collapseToStart(range) {\n    return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n  } // ---\n\n\n  static fromPositions(start, end = start) {\n    return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n  }\n\n  static lift(range) {\n    if (!range) {\n      return null;\n    }\n\n    return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n  }\n  /**\r\n   * Test if `obj` is an `IRange`.\r\n   */\n\n\n  static isIRange(obj) {\n    return obj && typeof obj.startLineNumber === 'number' && typeof obj.startColumn === 'number' && typeof obj.endLineNumber === 'number' && typeof obj.endColumn === 'number';\n  }\n  /**\r\n   * Test if the two ranges are touching in any way.\r\n   */\n\n\n  static areIntersectingOrTouching(a, b) {\n    // Check if `a` is before `b`\n    if (a.endLineNumber < b.startLineNumber || a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn) {\n      return false;\n    } // Check if `b` is before `a`\n\n\n    if (b.endLineNumber < a.startLineNumber || b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn) {\n      return false;\n    } // These ranges must intersect\n\n\n    return true;\n  }\n  /**\r\n   * Test if the two ranges are intersecting. If the ranges are touching it returns true.\r\n   */\n\n\n  static areIntersecting(a, b) {\n    // Check if `a` is before `b`\n    if (a.endLineNumber < b.startLineNumber || a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn) {\n      return false;\n    } // Check if `b` is before `a`\n\n\n    if (b.endLineNumber < a.startLineNumber || b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn) {\n      return false;\n    } // These ranges must intersect\n\n\n    return true;\n  }\n  /**\r\n   * A function that compares ranges, useful for sorting ranges\r\n   * It will first compare ranges on the startPosition and then on the endPosition\r\n   */\n\n\n  static compareRangesUsingStarts(a, b) {\n    if (a && b) {\n      const aStartLineNumber = a.startLineNumber | 0;\n      const bStartLineNumber = b.startLineNumber | 0;\n\n      if (aStartLineNumber === bStartLineNumber) {\n        const aStartColumn = a.startColumn | 0;\n        const bStartColumn = b.startColumn | 0;\n\n        if (aStartColumn === bStartColumn) {\n          const aEndLineNumber = a.endLineNumber | 0;\n          const bEndLineNumber = b.endLineNumber | 0;\n\n          if (aEndLineNumber === bEndLineNumber) {\n            const aEndColumn = a.endColumn | 0;\n            const bEndColumn = b.endColumn | 0;\n            return aEndColumn - bEndColumn;\n          }\n\n          return aEndLineNumber - bEndLineNumber;\n        }\n\n        return aStartColumn - bStartColumn;\n      }\n\n      return aStartLineNumber - bStartLineNumber;\n    }\n\n    const aExists = a ? 1 : 0;\n    const bExists = b ? 1 : 0;\n    return aExists - bExists;\n  }\n  /**\r\n   * A function that compares ranges, useful for sorting ranges\r\n   * It will first compare ranges on the endPosition and then on the startPosition\r\n   */\n\n\n  static compareRangesUsingEnds(a, b) {\n    if (a.endLineNumber === b.endLineNumber) {\n      if (a.endColumn === b.endColumn) {\n        if (a.startLineNumber === b.startLineNumber) {\n          return a.startColumn - b.startColumn;\n        }\n\n        return a.startLineNumber - b.startLineNumber;\n      }\n\n      return a.endColumn - b.endColumn;\n    }\n\n    return a.endLineNumber - b.endLineNumber;\n  }\n  /**\r\n   * Test if the range spans multiple lines.\r\n   */\n\n\n  static spansMultipleLines(range) {\n    return range.endLineNumber > range.startLineNumber;\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n  const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n  return diffAlgo.ComputeDiff(pretty);\n}\n\nclass LineSequence {\n  constructor(lines) {\n    const startColumns = [];\n    const endColumns = [];\n\n    for (let i = 0, length = lines.length; i < length; i++) {\n      startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n      endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n    }\n\n    this.lines = lines;\n    this._startColumns = startColumns;\n    this._endColumns = endColumns;\n  }\n\n  getElements() {\n    const elements = [];\n\n    for (let i = 0, len = this.lines.length; i < len; i++) {\n      elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    }\n\n    return elements;\n  }\n\n  getStrictElement(index) {\n    return this.lines[index];\n  }\n\n  getStartLineNumber(i) {\n    return i + 1;\n  }\n\n  getEndLineNumber(i) {\n    return i + 1;\n  }\n\n  createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n    const charCodes = [];\n    const lineNumbers = [];\n    const columns = [];\n    let len = 0;\n\n    for (let index = startIndex; index <= endIndex; index++) {\n      const lineContent = this.lines[index];\n      const startColumn = shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1;\n      const endColumn = shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1;\n\n      for (let col = startColumn; col < endColumn; col++) {\n        charCodes[len] = lineContent.charCodeAt(col - 1);\n        lineNumbers[len] = index + 1;\n        columns[len] = col;\n        len++;\n      }\n    }\n\n    return new CharSequence(charCodes, lineNumbers, columns);\n  }\n\n}\n\nclass CharSequence {\n  constructor(charCodes, lineNumbers, columns) {\n    this._charCodes = charCodes;\n    this._lineNumbers = lineNumbers;\n    this._columns = columns;\n  }\n\n  getElements() {\n    return this._charCodes;\n  }\n\n  getStartLineNumber(i) {\n    return this._lineNumbers[i];\n  }\n\n  getStartColumn(i) {\n    return this._columns[i];\n  }\n\n  getEndLineNumber(i) {\n    return this._lineNumbers[i];\n  }\n\n  getEndColumn(i) {\n    return this._columns[i] + 1;\n  }\n\n}\n\nclass CharChange {\n  constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n    this.originalStartLineNumber = originalStartLineNumber;\n    this.originalStartColumn = originalStartColumn;\n    this.originalEndLineNumber = originalEndLineNumber;\n    this.originalEndColumn = originalEndColumn;\n    this.modifiedStartLineNumber = modifiedStartLineNumber;\n    this.modifiedStartColumn = modifiedStartColumn;\n    this.modifiedEndLineNumber = modifiedEndLineNumber;\n    this.modifiedEndColumn = modifiedEndColumn;\n  }\n\n  static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n    let originalStartLineNumber;\n    let originalStartColumn;\n    let originalEndLineNumber;\n    let originalEndColumn;\n    let modifiedStartLineNumber;\n    let modifiedStartColumn;\n    let modifiedEndLineNumber;\n    let modifiedEndColumn;\n\n    if (diffChange.originalLength === 0) {\n      originalStartLineNumber = 0;\n      originalStartColumn = 0;\n      originalEndLineNumber = 0;\n      originalEndColumn = 0;\n    } else {\n      originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n      originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n      originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n      originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n    }\n\n    if (diffChange.modifiedLength === 0) {\n      modifiedStartLineNumber = 0;\n      modifiedStartColumn = 0;\n      modifiedEndLineNumber = 0;\n      modifiedEndColumn = 0;\n    } else {\n      modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n      modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n      modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n      modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n    }\n\n    return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n  }\n\n}\n\nfunction postProcessCharChanges(rawChanges) {\n  if (rawChanges.length <= 1) {\n    return rawChanges;\n  }\n\n  const result = [rawChanges[0]];\n  let prevChange = result[0];\n\n  for (let i = 1, len = rawChanges.length; i < len; i++) {\n    const currChange = rawChanges[i];\n    const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n    const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength); // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n\n    const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n\n    if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n      // Merge the current change into the previous one\n      prevChange.originalLength = currChange.originalStart + currChange.originalLength - prevChange.originalStart;\n      prevChange.modifiedLength = currChange.modifiedStart + currChange.modifiedLength - prevChange.modifiedStart;\n    } else {\n      // Add the current change\n      result.push(currChange);\n      prevChange = currChange;\n    }\n  }\n\n  return result;\n}\n\nclass LineChange {\n  constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n    this.originalStartLineNumber = originalStartLineNumber;\n    this.originalEndLineNumber = originalEndLineNumber;\n    this.modifiedStartLineNumber = modifiedStartLineNumber;\n    this.modifiedEndLineNumber = modifiedEndLineNumber;\n    this.charChanges = charChanges;\n  }\n\n  static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n    let originalStartLineNumber;\n    let originalEndLineNumber;\n    let modifiedStartLineNumber;\n    let modifiedEndLineNumber;\n    let charChanges = undefined;\n\n    if (diffChange.originalLength === 0) {\n      originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n      originalEndLineNumber = 0;\n    } else {\n      originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n      originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n    }\n\n    if (diffChange.modifiedLength === 0) {\n      modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n      modifiedEndLineNumber = 0;\n    } else {\n      modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n      modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n    }\n\n    if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n      // Compute character changes for diff chunks of at most 20 lines...\n      const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n      const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n      let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n\n      if (shouldPostProcessCharChanges) {\n        rawChanges = postProcessCharChanges(rawChanges);\n      }\n\n      charChanges = [];\n\n      for (let i = 0, length = rawChanges.length; i < length; i++) {\n        charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n      }\n    }\n\n    return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n  }\n\n}\n\nexport class DiffComputer {\n  constructor(originalLines, modifiedLines, opts) {\n    this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n    this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n    this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n    this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n    this.originalLines = originalLines;\n    this.modifiedLines = modifiedLines;\n    this.original = new LineSequence(originalLines);\n    this.modified = new LineSequence(modifiedLines);\n    this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n    this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n  }\n\n  computeDiff() {\n    if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n      // empty original => fast path\n      if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n        return {\n          quitEarly: false,\n          changes: []\n        };\n      }\n\n      return {\n        quitEarly: false,\n        changes: [{\n          originalStartLineNumber: 1,\n          originalEndLineNumber: 1,\n          modifiedStartLineNumber: 1,\n          modifiedEndLineNumber: this.modified.lines.length,\n          charChanges: [{\n            modifiedEndColumn: 0,\n            modifiedEndLineNumber: 0,\n            modifiedStartColumn: 0,\n            modifiedStartLineNumber: 0,\n            originalEndColumn: 0,\n            originalEndLineNumber: 0,\n            originalStartColumn: 0,\n            originalStartLineNumber: 0\n          }]\n        }]\n      };\n    }\n\n    if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n      // empty modified => fast path\n      return {\n        quitEarly: false,\n        changes: [{\n          originalStartLineNumber: 1,\n          originalEndLineNumber: this.original.lines.length,\n          modifiedStartLineNumber: 1,\n          modifiedEndLineNumber: 1,\n          charChanges: [{\n            modifiedEndColumn: 0,\n            modifiedEndLineNumber: 0,\n            modifiedStartColumn: 0,\n            modifiedStartLineNumber: 0,\n            originalEndColumn: 0,\n            originalEndLineNumber: 0,\n            originalStartColumn: 0,\n            originalStartLineNumber: 0\n          }]\n        }]\n      };\n    }\n\n    const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n    const rawChanges = diffResult.changes;\n    const quitEarly = diffResult.quitEarly; // The diff is always computed with ignoring trim whitespace\n    // This ensures we get the prettiest diff\n\n    if (this.shouldIgnoreTrimWhitespace) {\n      const lineChanges = [];\n\n      for (let i = 0, length = rawChanges.length; i < length; i++) {\n        lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n      }\n\n      return {\n        quitEarly: quitEarly,\n        changes: lineChanges\n      };\n    } // Need to post-process and introduce changes where the trim whitespace is different\n    // Note that we are looping starting at -1 to also cover the lines before the first change\n\n\n    const result = [];\n    let originalLineIndex = 0;\n    let modifiedLineIndex = 0;\n\n    for (let i = -1\n    /* !!!! */\n    , len = rawChanges.length; i < len; i++) {\n      const nextChange = i + 1 < len ? rawChanges[i + 1] : null;\n      const originalStop = nextChange ? nextChange.originalStart : this.originalLines.length;\n      const modifiedStop = nextChange ? nextChange.modifiedStart : this.modifiedLines.length;\n\n      while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n        const originalLine = this.originalLines[originalLineIndex];\n        const modifiedLine = this.modifiedLines[modifiedLineIndex];\n\n        if (originalLine !== modifiedLine) {\n          // These lines differ only in trim whitespace\n          // Check the leading whitespace\n          {\n            let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n            let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n\n            while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n              const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n              const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n\n              if (originalChar !== modifiedChar) {\n                break;\n              }\n\n              originalStartColumn--;\n              modifiedStartColumn--;\n            }\n\n            if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n              this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n            }\n          } // Check the trailing whitespace\n\n          {\n            let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n            let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n            const originalMaxColumn = originalLine.length + 1;\n            const modifiedMaxColumn = modifiedLine.length + 1;\n\n            while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n              const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n              const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n\n              if (originalChar !== modifiedChar) {\n                break;\n              }\n\n              originalEndColumn++;\n              modifiedEndColumn++;\n            }\n\n            if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n              this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n            }\n          }\n        }\n\n        originalLineIndex++;\n        modifiedLineIndex++;\n      }\n\n      if (nextChange) {\n        // Emit the actual change\n        result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n        originalLineIndex += nextChange.originalLength;\n        modifiedLineIndex += nextChange.modifiedLength;\n      }\n    }\n\n    return {\n      quitEarly: quitEarly,\n      changes: result\n    };\n  }\n\n  _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n    if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n      // Merged into previous\n      return;\n    }\n\n    let charChanges = undefined;\n\n    if (this.shouldComputeCharChanges) {\n      charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n    }\n\n    result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n  }\n\n  _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n    const len = result.length;\n\n    if (len === 0) {\n      return false;\n    }\n\n    const prevChange = result[len - 1];\n\n    if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n      // Don't merge with inserts/deletes\n      return false;\n    }\n\n    if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n      prevChange.originalEndLineNumber = originalLineNumber;\n      prevChange.modifiedEndLineNumber = modifiedLineNumber;\n\n      if (this.shouldComputeCharChanges && prevChange.charChanges) {\n        prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n  const r = strings.firstNonWhitespaceIndex(txt);\n\n  if (r === -1) {\n    return defaultValue;\n  }\n\n  return r + 1;\n}\n\nfunction getLastNonBlankColumn(txt, defaultValue) {\n  const r = strings.lastNonWhitespaceIndex(txt);\n\n  if (r === -1) {\n    return defaultValue;\n  }\n\n  return r + 2;\n}\n\nfunction createContinueProcessingPredicate(maximumRuntime) {\n  if (maximumRuntime === 0) {\n    return () => true;\n  }\n\n  const startTime = Date.now();\n  return () => {\n    return Date.now() - startTime < maximumRuntime;\n  };\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n  if (v < 0) {\n    return 0;\n  }\n\n  if (v > 255\n  /* MAX_UINT_8 */\n  ) {\n    return 255\n    /* MAX_UINT_8 */\n    ;\n  }\n\n  return v | 0;\n}\nexport function toUint32(v) {\n  if (v < 0) {\n    return 0;\n  }\n\n  if (v > 4294967295\n  /* MAX_UINT_32 */\n  ) {\n    return 4294967295\n    /* MAX_UINT_32 */\n    ;\n  }\n\n  return v | 0;\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumIndexOfResult {\n  constructor(index, remainder) {\n    this._prefixSumIndexOfResultBrand = undefined;\n    this.index = index;\n    this.remainder = remainder;\n  }\n\n}\nexport class PrefixSumComputer {\n  constructor(values) {\n    this.values = values;\n    this.prefixSum = new Uint32Array(values.length);\n    this.prefixSumValidIndex = new Int32Array(1);\n    this.prefixSumValidIndex[0] = -1;\n  }\n\n  insertValues(insertIndex, insertValues) {\n    insertIndex = toUint32(insertIndex);\n    const oldValues = this.values;\n    const oldPrefixSum = this.prefixSum;\n    const insertValuesLen = insertValues.length;\n\n    if (insertValuesLen === 0) {\n      return false;\n    }\n\n    this.values = new Uint32Array(oldValues.length + insertValuesLen);\n    this.values.set(oldValues.subarray(0, insertIndex), 0);\n    this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n    this.values.set(insertValues, insertIndex);\n\n    if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = insertIndex - 1;\n    }\n\n    this.prefixSum = new Uint32Array(this.values.length);\n\n    if (this.prefixSumValidIndex[0] >= 0) {\n      this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n    }\n\n    return true;\n  }\n\n  changeValue(index, value) {\n    index = toUint32(index);\n    value = toUint32(value);\n\n    if (this.values[index] === value) {\n      return false;\n    }\n\n    this.values[index] = value;\n\n    if (index - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = index - 1;\n    }\n\n    return true;\n  }\n\n  removeValues(startIndex, count) {\n    startIndex = toUint32(startIndex);\n    count = toUint32(count);\n    const oldValues = this.values;\n    const oldPrefixSum = this.prefixSum;\n\n    if (startIndex >= oldValues.length) {\n      return false;\n    }\n\n    let maxCount = oldValues.length - startIndex;\n\n    if (count >= maxCount) {\n      count = maxCount;\n    }\n\n    if (count === 0) {\n      return false;\n    }\n\n    this.values = new Uint32Array(oldValues.length - count);\n    this.values.set(oldValues.subarray(0, startIndex), 0);\n    this.values.set(oldValues.subarray(startIndex + count), startIndex);\n    this.prefixSum = new Uint32Array(this.values.length);\n\n    if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = startIndex - 1;\n    }\n\n    if (this.prefixSumValidIndex[0] >= 0) {\n      this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n    }\n\n    return true;\n  }\n\n  getTotalSum() {\n    if (this.values.length === 0) {\n      return 0;\n    }\n\n    return this._getPrefixSum(this.values.length - 1);\n  }\n\n  getPrefixSum(index) {\n    if (index < 0) {\n      return 0;\n    }\n\n    index = toUint32(index);\n    return this._getPrefixSum(index);\n  }\n\n  _getPrefixSum(index) {\n    if (index <= this.prefixSumValidIndex[0]) {\n      return this.prefixSum[index];\n    }\n\n    let startIndex = this.prefixSumValidIndex[0] + 1;\n\n    if (startIndex === 0) {\n      this.prefixSum[0] = this.values[0];\n      startIndex++;\n    }\n\n    if (index >= this.values.length) {\n      index = this.values.length - 1;\n    }\n\n    for (let i = startIndex; i <= index; i++) {\n      this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n    }\n\n    this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n    return this.prefixSum[index];\n  }\n\n  getIndexOf(sum) {\n    sum = Math.floor(sum); //@perf\n    // Compute all sums (to get a fully valid prefixSum)\n\n    this.getTotalSum();\n    let low = 0;\n    let high = this.values.length - 1;\n    let mid = 0;\n    let midStop = 0;\n    let midStart = 0;\n\n    while (low <= high) {\n      mid = low + (high - low) / 2 | 0;\n      midStop = this.prefixSum[mid];\n      midStart = midStop - this.values[mid];\n\n      if (sum < midStart) {\n        high = mid - 1;\n      } else if (sum >= midStop) {\n        low = mid + 1;\n      } else {\n        break;\n      }\n    }\n\n    return new PrefixSumIndexOfResult(mid, sum - midStart);\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\r\n * Create a word definition regular expression based on default word separators.\r\n * Optionally provide allowed separators that should be included in words.\r\n *\r\n * The default would look like this:\r\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\r\n */\n\nfunction createWordRegExp(allowInWords = '') {\n  let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\n  for (const sep of USUAL_WORD_SEPARATORS) {\n    if (allowInWords.indexOf(sep) >= 0) {\n      continue;\n    }\n\n    source += '\\\\' + sep;\n  }\n\n  source += '\\\\s]+)';\n  return new RegExp(source, 'g');\n} // catches numbers (including floating numbers) in the first group, and alphanum in the second\n\n\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n  let result = DEFAULT_WORD_REGEXP;\n\n  if (wordDefinition && wordDefinition instanceof RegExp) {\n    if (!wordDefinition.global) {\n      let flags = 'g';\n\n      if (wordDefinition.ignoreCase) {\n        flags += 'i';\n      }\n\n      if (wordDefinition.multiline) {\n        flags += 'm';\n      }\n\n      if (wordDefinition.unicode) {\n        flags += 'u';\n      }\n\n      result = new RegExp(wordDefinition.source, flags);\n    } else {\n      result = wordDefinition;\n    }\n  }\n\n  result.lastIndex = 0;\n  return result;\n}\nconst _defaultConfig = {\n  maxLen: 1000,\n  windowSize: 15,\n  timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset, config = _defaultConfig) {\n  if (text.length > config.maxLen) {\n    // don't throw strings that long at the regexp\n    // but use a sub-string in which a word must occur\n    let start = column - config.maxLen / 2;\n\n    if (start < 0) {\n      start = 0;\n    } else {\n      textOffset += start;\n    }\n\n    text = text.substring(start, column + config.maxLen / 2);\n    return getWordAtText(column, wordDefinition, text, textOffset, config);\n  }\n\n  const t1 = Date.now();\n  const pos = column - 1 - textOffset;\n  let prevRegexIndex = -1;\n  let match = null;\n\n  for (let i = 1;; i++) {\n    // check time budget\n    if (Date.now() - t1 >= config.timeBudget) {\n      break;\n    } // reset the index at which the regexp should start matching, also know where it\n    // should stop so that subsequent search don't repeat previous searches\n\n\n    const regexIndex = pos - config.windowSize * i;\n    wordDefinition.lastIndex = Math.max(0, regexIndex);\n\n    const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n\n    if (!thisMatch && match) {\n      // stop: we have something\n      break;\n    }\n\n    match = thisMatch; // stop: searched at start\n\n    if (regexIndex <= 0) {\n      break;\n    }\n\n    prevRegexIndex = regexIndex;\n  }\n\n  if (match) {\n    let result = {\n      word: match[0],\n      startColumn: textOffset + 1 + match.index,\n      endColumn: textOffset + 1 + match.index + match[0].length\n    };\n    wordDefinition.lastIndex = 0;\n    return result;\n  }\n\n  return null;\n}\n\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n  let match;\n\n  while (match = wordDefinition.exec(text)) {\n    const matchIndex = match.index || 0;\n\n    if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n      return match;\n    } else if (stopPos > 0 && matchIndex > stopPos) {\n      return null;\n    }\n  }\n\n  return null;\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\r\n * A fast character classifier that uses a compact array for ASCII values.\r\n */\n\nexport class CharacterClassifier {\n  constructor(_defaultValue) {\n    let defaultValue = toUint8(_defaultValue);\n    this._defaultValue = defaultValue;\n    this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n    this._map = new Map();\n  }\n\n  static _createAsciiMap(defaultValue) {\n    let asciiMap = new Uint8Array(256);\n\n    for (let i = 0; i < 256; i++) {\n      asciiMap[i] = defaultValue;\n    }\n\n    return asciiMap;\n  }\n\n  set(charCode, _value) {\n    let value = toUint8(_value);\n\n    if (charCode >= 0 && charCode < 256) {\n      this._asciiMap[charCode] = value;\n    } else {\n      this._map.set(charCode, value);\n    }\n  }\n\n  get(charCode) {\n    if (charCode >= 0 && charCode < 256) {\n      return this._asciiMap[charCode];\n    } else {\n      return this._map.get(charCode) || this._defaultValue;\n    }\n  }\n\n}\nexport class CharacterSet {\n  constructor() {\n    this._actual = new CharacterClassifier(0\n    /* False */\n    );\n  }\n\n  add(charCode) {\n    this._actual.set(charCode, 1\n    /* True */\n    );\n  }\n\n  has(charCode) {\n    return this._actual.get(charCode) === 1\n    /* True */\n    ;\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport class Uint8Matrix {\n  constructor(rows, cols, defaultValue) {\n    const data = new Uint8Array(rows * cols);\n\n    for (let i = 0, len = rows * cols; i < len; i++) {\n      data[i] = defaultValue;\n    }\n\n    this._data = data;\n    this.rows = rows;\n    this.cols = cols;\n  }\n\n  get(row, col) {\n    return this._data[row * this.cols + col];\n  }\n\n  set(row, col, value) {\n    this._data[row * this.cols + col] = value;\n  }\n\n}\nexport class StateMachine {\n  constructor(edges) {\n    let maxCharCode = 0;\n    let maxState = 0\n    /* Invalid */\n    ;\n\n    for (let i = 0, len = edges.length; i < len; i++) {\n      let [from, chCode, to] = edges[i];\n\n      if (chCode > maxCharCode) {\n        maxCharCode = chCode;\n      }\n\n      if (from > maxState) {\n        maxState = from;\n      }\n\n      if (to > maxState) {\n        maxState = to;\n      }\n    }\n\n    maxCharCode++;\n    maxState++;\n    let states = new Uint8Matrix(maxState, maxCharCode, 0\n    /* Invalid */\n    );\n\n    for (let i = 0, len = edges.length; i < len; i++) {\n      let [from, chCode, to] = edges[i];\n      states.set(from, chCode, to);\n    }\n\n    this._states = states;\n    this._maxCharCode = maxCharCode;\n  }\n\n  nextState(currentState, chCode) {\n    if (chCode < 0 || chCode >= this._maxCharCode) {\n      return 0\n      /* Invalid */\n      ;\n    }\n\n    return this._states.get(currentState, chCode);\n  }\n\n} // State machine for http:// or https:// or file://\n\nlet _stateMachine = null;\n\nfunction getStateMachine() {\n  if (_stateMachine === null) {\n    _stateMachine = new StateMachine([[1\n    /* Start */\n    , 104\n    /* h */\n    , 2\n    /* H */\n    ], [1\n    /* Start */\n    , 72\n    /* H */\n    , 2\n    /* H */\n    ], [1\n    /* Start */\n    , 102\n    /* f */\n    , 6\n    /* F */\n    ], [1\n    /* Start */\n    , 70\n    /* F */\n    , 6\n    /* F */\n    ], [2\n    /* H */\n    , 116\n    /* t */\n    , 3\n    /* HT */\n    ], [2\n    /* H */\n    , 84\n    /* T */\n    , 3\n    /* HT */\n    ], [3\n    /* HT */\n    , 116\n    /* t */\n    , 4\n    /* HTT */\n    ], [3\n    /* HT */\n    , 84\n    /* T */\n    , 4\n    /* HTT */\n    ], [4\n    /* HTT */\n    , 112\n    /* p */\n    , 5\n    /* HTTP */\n    ], [4\n    /* HTT */\n    , 80\n    /* P */\n    , 5\n    /* HTTP */\n    ], [5\n    /* HTTP */\n    , 115\n    /* s */\n    , 9\n    /* BeforeColon */\n    ], [5\n    /* HTTP */\n    , 83\n    /* S */\n    , 9\n    /* BeforeColon */\n    ], [5\n    /* HTTP */\n    , 58\n    /* Colon */\n    , 10\n    /* AfterColon */\n    ], [6\n    /* F */\n    , 105\n    /* i */\n    , 7\n    /* FI */\n    ], [6\n    /* F */\n    , 73\n    /* I */\n    , 7\n    /* FI */\n    ], [7\n    /* FI */\n    , 108\n    /* l */\n    , 8\n    /* FIL */\n    ], [7\n    /* FI */\n    , 76\n    /* L */\n    , 8\n    /* FIL */\n    ], [8\n    /* FIL */\n    , 101\n    /* e */\n    , 9\n    /* BeforeColon */\n    ], [8\n    /* FIL */\n    , 69\n    /* E */\n    , 9\n    /* BeforeColon */\n    ], [9\n    /* BeforeColon */\n    , 58\n    /* Colon */\n    , 10\n    /* AfterColon */\n    ], [10\n    /* AfterColon */\n    , 47\n    /* Slash */\n    , 11\n    /* AlmostThere */\n    ], [11\n    /* AlmostThere */\n    , 47\n    /* Slash */\n    , 12\n    /* End */\n    ]]);\n  }\n\n  return _stateMachine;\n}\n\nlet _classifier = null;\n\nfunction getClassifier() {\n  if (_classifier === null) {\n    _classifier = new CharacterClassifier(0\n    /* None */\n    );\n    const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n\n    for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n      _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1\n      /* ForceTermination */\n      );\n    }\n\n    const CANNOT_END_WITH_CHARACTERS = '.,;';\n\n    for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n      _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2\n      /* CannotEndIn */\n      );\n    }\n  }\n\n  return _classifier;\n}\n\nexport class LinkComputer {\n  static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n    // Do not allow to end link in certain characters...\n    let lastIncludedCharIndex = linkEndIndex - 1;\n\n    do {\n      const chCode = line.charCodeAt(lastIncludedCharIndex);\n      const chClass = classifier.get(chCode);\n\n      if (chClass !== 2\n      /* CannotEndIn */\n      ) {\n        break;\n      }\n\n      lastIncludedCharIndex--;\n    } while (lastIncludedCharIndex > linkBeginIndex); // Handle links enclosed in parens, square brackets and curlys.\n\n\n    if (linkBeginIndex > 0) {\n      const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n      const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n\n      if (charCodeBeforeLink === 40\n      /* OpenParen */\n      && lastCharCodeInLink === 41\n      /* CloseParen */\n      || charCodeBeforeLink === 91\n      /* OpenSquareBracket */\n      && lastCharCodeInLink === 93\n      /* CloseSquareBracket */\n      || charCodeBeforeLink === 123\n      /* OpenCurlyBrace */\n      && lastCharCodeInLink === 125\n      /* CloseCurlyBrace */\n      ) {\n        // Do not end in ) if ( is before the link start\n        // Do not end in ] if [ is before the link start\n        // Do not end in } if { is before the link start\n        lastIncludedCharIndex--;\n      }\n    }\n\n    return {\n      range: {\n        startLineNumber: lineNumber,\n        startColumn: linkBeginIndex + 1,\n        endLineNumber: lineNumber,\n        endColumn: lastIncludedCharIndex + 2\n      },\n      url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n    };\n  }\n\n  static computeLinks(model, stateMachine = getStateMachine()) {\n    const classifier = getClassifier();\n    let result = [];\n\n    for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n      const line = model.getLineContent(i);\n      const len = line.length;\n      let j = 0;\n      let linkBeginIndex = 0;\n      let linkBeginChCode = 0;\n      let state = 1\n      /* Start */\n      ;\n      let hasOpenParens = false;\n      let hasOpenSquareBracket = false;\n      let inSquareBrackets = false;\n      let hasOpenCurlyBracket = false;\n\n      while (j < len) {\n        let resetStateMachine = false;\n        const chCode = line.charCodeAt(j);\n\n        if (state === 13\n        /* Accept */\n        ) {\n          let chClass;\n\n          switch (chCode) {\n            case 40\n            /* OpenParen */\n            :\n              hasOpenParens = true;\n              chClass = 0\n              /* None */\n              ;\n              break;\n\n            case 41\n            /* CloseParen */\n            :\n              chClass = hasOpenParens ? 0\n              /* None */\n              : 1\n              /* ForceTermination */\n              ;\n              break;\n\n            case 91\n            /* OpenSquareBracket */\n            :\n              inSquareBrackets = true;\n              hasOpenSquareBracket = true;\n              chClass = 0\n              /* None */\n              ;\n              break;\n\n            case 93\n            /* CloseSquareBracket */\n            :\n              inSquareBrackets = false;\n              chClass = hasOpenSquareBracket ? 0\n              /* None */\n              : 1\n              /* ForceTermination */\n              ;\n              break;\n\n            case 123\n            /* OpenCurlyBrace */\n            :\n              hasOpenCurlyBracket = true;\n              chClass = 0\n              /* None */\n              ;\n              break;\n\n            case 125\n            /* CloseCurlyBrace */\n            :\n              chClass = hasOpenCurlyBracket ? 0\n              /* None */\n              : 1\n              /* ForceTermination */\n              ;\n              break;\n\n            /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n\n            case 39\n            /* SingleQuote */\n            :\n              chClass = linkBeginChCode === 34\n              /* DoubleQuote */\n              || linkBeginChCode === 96\n              /* BackTick */\n              ? 0\n              /* None */\n              : 1\n              /* ForceTermination */\n              ;\n              break;\n\n            case 34\n            /* DoubleQuote */\n            :\n              chClass = linkBeginChCode === 39\n              /* SingleQuote */\n              || linkBeginChCode === 96\n              /* BackTick */\n              ? 0\n              /* None */\n              : 1\n              /* ForceTermination */\n              ;\n              break;\n\n            case 96\n            /* BackTick */\n            :\n              chClass = linkBeginChCode === 39\n              /* SingleQuote */\n              || linkBeginChCode === 34\n              /* DoubleQuote */\n              ? 0\n              /* None */\n              : 1\n              /* ForceTermination */\n              ;\n              break;\n\n            case 42\n            /* Asterisk */\n            :\n              // `*` terminates a link if the link began with `*`\n              chClass = linkBeginChCode === 42\n              /* Asterisk */\n              ? 1\n              /* ForceTermination */\n              : 0\n              /* None */\n              ;\n              break;\n\n            case 124\n            /* Pipe */\n            :\n              // `|` terminates a link if the link began with `|`\n              chClass = linkBeginChCode === 124\n              /* Pipe */\n              ? 1\n              /* ForceTermination */\n              : 0\n              /* None */\n              ;\n              break;\n\n            case 32\n            /* Space */\n            :\n              // ` ` allow space in between [ and ]\n              chClass = inSquareBrackets ? 0\n              /* None */\n              : 1\n              /* ForceTermination */\n              ;\n              break;\n\n            default:\n              chClass = classifier.get(chCode);\n          } // Check if character terminates link\n\n\n          if (chClass === 1\n          /* ForceTermination */\n          ) {\n            result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n            resetStateMachine = true;\n          }\n        } else if (state === 12\n        /* End */\n        ) {\n          let chClass;\n\n          if (chCode === 91\n          /* OpenSquareBracket */\n          ) {\n            // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n            hasOpenSquareBracket = true;\n            chClass = 0\n            /* None */\n            ;\n          } else {\n            chClass = classifier.get(chCode);\n          } // Check if character terminates link\n\n\n          if (chClass === 1\n          /* ForceTermination */\n          ) {\n            resetStateMachine = true;\n          } else {\n            state = 13\n            /* Accept */\n            ;\n          }\n        } else {\n          state = stateMachine.nextState(state, chCode);\n\n          if (state === 0\n          /* Invalid */\n          ) {\n            resetStateMachine = true;\n          }\n        }\n\n        if (resetStateMachine) {\n          state = 1\n          /* Start */\n          ;\n          hasOpenParens = false;\n          hasOpenSquareBracket = false;\n          hasOpenCurlyBracket = false; // Record where the link started\n\n          linkBeginIndex = j + 1;\n          linkBeginChCode = chCode;\n        }\n\n        j++;\n      }\n\n      if (state === 13\n      /* Accept */\n      ) {\n        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n      }\n    }\n\n    return result;\n  }\n\n}\n/**\r\n * Returns an array of all links contains in the provided\r\n * document. *Note* that this operation is computational\r\n * expensive and should not run in the UI thread.\r\n */\n\nexport function computeLinks(model) {\n  if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n    // Unknown caller!\n    return [];\n  }\n\n  return LinkComputer.computeLinks(model);\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n  constructor() {\n    this._defaultValueSet = [['true', 'false'], ['True', 'False'], ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'], ['public', 'protected', 'private']];\n  }\n\n  navigateValueSet(range1, text1, range2, text2, up) {\n    if (range1 && text1) {\n      let result = this.doNavigateValueSet(text1, up);\n\n      if (result) {\n        return {\n          range: range1,\n          value: result\n        };\n      }\n    }\n\n    if (range2 && text2) {\n      let result = this.doNavigateValueSet(text2, up);\n\n      if (result) {\n        return {\n          range: range2,\n          value: result\n        };\n      }\n    }\n\n    return null;\n  }\n\n  doNavigateValueSet(text, up) {\n    let numberResult = this.numberReplace(text, up);\n\n    if (numberResult !== null) {\n      return numberResult;\n    }\n\n    return this.textReplace(text, up);\n  }\n\n  numberReplace(value, up) {\n    let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n    let n1 = Number(value);\n    let n2 = parseFloat(value);\n\n    if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n      if (n1 === 0 && !up) {\n        return null; // don't do negative\n        //\t\t\t} else if(n1 === 9 && up) {\n        //\t\t\t\treturn null; // don't insert 10 into a number\n      } else {\n        n1 = Math.floor(n1 * precision);\n        n1 += up ? precision : -precision;\n        return String(n1 / precision);\n      }\n    }\n\n    return null;\n  }\n\n  textReplace(value, up) {\n    return this.valueSetsReplace(this._defaultValueSet, value, up);\n  }\n\n  valueSetsReplace(valueSets, value, up) {\n    let result = null;\n\n    for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n      result = this.valueSetReplace(valueSets[i], value, up);\n    }\n\n    return result;\n  }\n\n  valueSetReplace(valueSet, value, up) {\n    let idx = valueSet.indexOf(value);\n\n    if (idx >= 0) {\n      idx += up ? +1 : -1;\n\n      if (idx < 0) {\n        idx = valueSet.length - 1;\n      } else {\n        idx %= valueSet.length;\n      }\n\n      return valueSet[idx];\n    }\n\n    return null;\n  }\n\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n  constructor(element) {\n    this.element = element;\n    this.next = Node.Undefined;\n    this.prev = Node.Undefined;\n  }\n\n}\n\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n  constructor() {\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  }\n\n  get size() {\n    return this._size;\n  }\n\n  isEmpty() {\n    return this._first === Node.Undefined;\n  }\n\n  clear() {\n    let node = this._first;\n\n    while (node !== Node.Undefined) {\n      const next = node.next;\n      node.prev = Node.Undefined;\n      node.next = Node.Undefined;\n      node = next;\n    }\n\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  }\n\n  unshift(element) {\n    return this._insert(element, false);\n  }\n\n  push(element) {\n    return this._insert(element, true);\n  }\n\n  _insert(element, atTheEnd) {\n    const newNode = new Node(element);\n\n    if (this._first === Node.Undefined) {\n      this._first = newNode;\n      this._last = newNode;\n    } else if (atTheEnd) {\n      // push\n      const oldLast = this._last;\n      this._last = newNode;\n      newNode.prev = oldLast;\n      oldLast.next = newNode;\n    } else {\n      // unshift\n      const oldFirst = this._first;\n      this._first = newNode;\n      newNode.next = oldFirst;\n      oldFirst.prev = newNode;\n    }\n\n    this._size += 1;\n    let didRemove = false;\n    return () => {\n      if (!didRemove) {\n        didRemove = true;\n\n        this._remove(newNode);\n      }\n    };\n  }\n\n  shift() {\n    if (this._first === Node.Undefined) {\n      return undefined;\n    } else {\n      const res = this._first.element;\n\n      this._remove(this._first);\n\n      return res;\n    }\n  }\n\n  pop() {\n    if (this._last === Node.Undefined) {\n      return undefined;\n    } else {\n      const res = this._last.element;\n\n      this._remove(this._last);\n\n      return res;\n    }\n  }\n\n  _remove(node) {\n    if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n      // middle\n      const anchor = node.prev;\n      anchor.next = node.next;\n      node.next.prev = anchor;\n    } else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n      // only node\n      this._first = Node.Undefined;\n      this._last = Node.Undefined;\n    } else if (node.next === Node.Undefined) {\n      // last\n      this._last = this._last.prev;\n      this._last.next = Node.Undefined;\n    } else if (node.prev === Node.Undefined) {\n      // first\n      this._first = this._first.next;\n      this._first.prev = Node.Undefined;\n    } // done\n\n\n    this._size -= 1;\n  }\n\n  *[Symbol.iterator]() {\n    let node = this._first;\n\n    while (node !== Node.Undefined) {\n      yield node.element;\n      node = node.next;\n    }\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = globals.performance && typeof globals.performance.now === 'function';\nexport class StopWatch {\n  constructor(highResolution) {\n    this._highResolution = hasPerformanceNow && highResolution;\n    this._startTime = this._now();\n    this._stopTime = -1;\n  }\n\n  static create(highResolution = true) {\n    return new StopWatch(highResolution);\n  }\n\n  stop() {\n    this._stopTime = this._now();\n  }\n\n  elapsed() {\n    if (this._stopTime !== -1) {\n      return this._stopTime - this._startTime;\n    }\n\n    return this._now() - this._startTime;\n  }\n\n  _now() {\n    return this._highResolution ? globals.performance.now() : Date.now();\n  }\n\n}","import { onUnexpectedError } from './errors.js';\nimport { Disposable, combinedDisposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nexport var Event;\n\n(function (Event) {\n  Event.None = () => Disposable.None;\n  /**\r\n   * Given an event, returns another event which only fires once.\r\n   */\n\n\n  function once(event) {\n    return (listener, thisArgs = null, disposables) => {\n      // we need this, in case the event fires during the listener call\n      let didFire = false;\n      let result;\n      result = event(e => {\n        if (didFire) {\n          return;\n        } else if (result) {\n          result.dispose();\n        } else {\n          didFire = true;\n        }\n\n        return listener.call(thisArgs, e);\n      }, null, disposables);\n\n      if (didFire) {\n        result.dispose();\n      }\n\n      return result;\n    };\n  }\n\n  Event.once = once;\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n  function map(event, map) {\n    return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n  }\n\n  Event.map = map;\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n  function forEach(event, each) {\n    return snapshot((listener, thisArgs = null, disposables) => event(i => {\n      each(i);\n      listener.call(thisArgs, i);\n    }, null, disposables));\n  }\n\n  Event.forEach = forEach;\n\n  function filter(event, filter) {\n    return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n  }\n\n  Event.filter = filter;\n  /**\r\n   * Given an event, returns the same event but typed as `Event<void>`.\r\n   */\n\n  function signal(event) {\n    return event;\n  }\n\n  Event.signal = signal;\n\n  function any(...events) {\n    return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n  }\n\n  Event.any = any;\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n  function reduce(event, merge, initial) {\n    let output = initial;\n    return map(event, e => {\n      output = merge(output, e);\n      return output;\n    });\n  }\n\n  Event.reduce = reduce;\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n  function snapshot(event) {\n    let listener;\n    const emitter = new Emitter({\n      onFirstListenerAdd() {\n        listener = event(emitter.fire, emitter);\n      },\n\n      onLastListenerRemove() {\n        listener.dispose();\n      }\n\n    });\n    return emitter.event;\n  }\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n\n  function debounce(event, merge, delay = 100, leading = false, leakWarningThreshold) {\n    let subscription;\n    let output = undefined;\n    let handle = undefined;\n    let numDebouncedCalls = 0;\n    const emitter = new Emitter({\n      leakWarningThreshold,\n\n      onFirstListenerAdd() {\n        subscription = event(cur => {\n          numDebouncedCalls++;\n          output = merge(output, cur);\n\n          if (leading && !handle) {\n            emitter.fire(output);\n            output = undefined;\n          }\n\n          clearTimeout(handle);\n          handle = setTimeout(() => {\n            const _output = output;\n            output = undefined;\n            handle = undefined;\n\n            if (!leading || numDebouncedCalls > 1) {\n              emitter.fire(_output);\n            }\n\n            numDebouncedCalls = 0;\n          }, delay);\n        });\n      },\n\n      onLastListenerRemove() {\n        subscription.dispose();\n      }\n\n    });\n    return emitter.event;\n  }\n\n  Event.debounce = debounce;\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n  function latch(event, equals = (a, b) => a === b) {\n    let firstCall = true;\n    let cache;\n    return filter(event, value => {\n      const shouldEmit = firstCall || !equals(value, cache);\n      firstCall = false;\n      cache = value;\n      return shouldEmit;\n    });\n  }\n\n  Event.latch = latch;\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n  function split(event, isT) {\n    return [Event.filter(event, isT), Event.filter(event, e => !isT(e))];\n  }\n\n  Event.split = split;\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n  function buffer(event, nextTick = false, _buffer = []) {\n    let buffer = _buffer.slice();\n\n    let listener = event(e => {\n      if (buffer) {\n        buffer.push(e);\n      } else {\n        emitter.fire(e);\n      }\n    });\n\n    const flush = () => {\n      if (buffer) {\n        buffer.forEach(e => emitter.fire(e));\n      }\n\n      buffer = null;\n    };\n\n    const emitter = new Emitter({\n      onFirstListenerAdd() {\n        if (!listener) {\n          listener = event(e => emitter.fire(e));\n        }\n      },\n\n      onFirstListenerDidAdd() {\n        if (buffer) {\n          if (nextTick) {\n            setTimeout(flush);\n          } else {\n            flush();\n          }\n        }\n      },\n\n      onLastListenerRemove() {\n        if (listener) {\n          listener.dispose();\n        }\n\n        listener = null;\n      }\n\n    });\n    return emitter.event;\n  }\n\n  Event.buffer = buffer;\n\n  class ChainableEvent {\n    constructor(event) {\n      this.event = event;\n    }\n\n    map(fn) {\n      return new ChainableEvent(map(this.event, fn));\n    }\n\n    forEach(fn) {\n      return new ChainableEvent(forEach(this.event, fn));\n    }\n\n    filter(fn) {\n      return new ChainableEvent(filter(this.event, fn));\n    }\n\n    reduce(merge, initial) {\n      return new ChainableEvent(reduce(this.event, merge, initial));\n    }\n\n    latch() {\n      return new ChainableEvent(latch(this.event));\n    }\n\n    debounce(merge, delay = 100, leading = false, leakWarningThreshold) {\n      return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n    }\n\n    on(listener, thisArgs, disposables) {\n      return this.event(listener, thisArgs, disposables);\n    }\n\n    once(listener, thisArgs, disposables) {\n      return once(this.event)(listener, thisArgs, disposables);\n    }\n\n  }\n  /**\r\n   * @deprecated DO NOT use, this leaks memory\r\n   */\n\n\n  function chain(event) {\n    return new ChainableEvent(event);\n  }\n\n  Event.chain = chain;\n\n  function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n    const fn = (...args) => result.fire(map(...args));\n\n    const onFirstListenerAdd = () => emitter.on(eventName, fn);\n\n    const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\n    const result = new Emitter({\n      onFirstListenerAdd,\n      onLastListenerRemove\n    });\n    return result.event;\n  }\n\n  Event.fromNodeEventEmitter = fromNodeEventEmitter;\n\n  function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n    const fn = (...args) => result.fire(map(...args));\n\n    const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\n    const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\n    const result = new Emitter({\n      onFirstListenerAdd,\n      onLastListenerRemove\n    });\n    return result.event;\n  }\n\n  Event.fromDOMEventEmitter = fromDOMEventEmitter;\n\n  function toPromise(event) {\n    return new Promise(resolve => once(event)(resolve));\n  }\n\n  Event.toPromise = toPromise;\n})(Event || (Event = {}));\n\nclass EventProfiling {\n  constructor(name) {\n    this._listenerCount = 0;\n    this._invocationCount = 0;\n    this._elapsedOverall = 0;\n    this._name = `${name}_${EventProfiling._idPool++}`;\n  }\n\n  start(listenerCount) {\n    this._stopWatch = new StopWatch(true);\n    this._listenerCount = listenerCount;\n  }\n\n  stop() {\n    if (this._stopWatch) {\n      const elapsed = this._stopWatch.elapsed();\n\n      this._elapsedOverall += elapsed;\n      this._invocationCount += 1;\n      console.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n      this._stopWatch = undefined;\n    }\n  }\n\n}\n\nEventProfiling._idPool = 0;\n\nlet _globalLeakWarningThreshold = -1;\n\nclass LeakageMonitor {\n  constructor(customThreshold, name = Math.random().toString(18).slice(2, 5)) {\n    this.customThreshold = customThreshold;\n    this.name = name;\n    this._warnCountdown = 0;\n  }\n\n  dispose() {\n    if (this._stacks) {\n      this._stacks.clear();\n    }\n  }\n\n  check(listenerCount) {\n    let threshold = _globalLeakWarningThreshold;\n\n    if (typeof this.customThreshold === 'number') {\n      threshold = this.customThreshold;\n    }\n\n    if (threshold <= 0 || listenerCount < threshold) {\n      return undefined;\n    }\n\n    if (!this._stacks) {\n      this._stacks = new Map();\n    }\n\n    const stack = new Error().stack.split('\\n').slice(3).join('\\n');\n    const count = this._stacks.get(stack) || 0;\n\n    this._stacks.set(stack, count + 1);\n\n    this._warnCountdown -= 1;\n\n    if (this._warnCountdown <= 0) {\n      // only warn on first exceed and then every time the limit\n      // is exceeded by 50% again\n      this._warnCountdown = threshold * 0.5; // find most frequent listener and print warning\n\n      let topStack;\n      let topCount = 0;\n\n      for (const [stack, count] of this._stacks) {\n        if (!topStack || topCount < count) {\n          topStack = stack;\n          topCount = count;\n        }\n      }\n\n      console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n      console.warn(topStack);\n    }\n\n    return () => {\n      const count = this._stacks.get(stack) || 0;\n\n      this._stacks.set(stack, count - 1);\n    };\n  }\n\n}\n/**\r\n * The Emitter can be used to expose an Event to the public\r\n * to fire it from the insides.\r\n * Sample:\r\n    class Document {\r\n\r\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\r\n\r\n        public onDidChange = this._onDidChange.event;\r\n\r\n        // getter-style\r\n        // get onDidChange(): Event<(value:string)=>any> {\r\n        // \treturn this._onDidChange.event;\r\n        // }\r\n\r\n        private _doIt() {\r\n            //...\r\n            this._onDidChange.fire(value);\r\n        }\r\n    }\r\n */\n\n\nexport class Emitter {\n  constructor(options) {\n    var _a;\n\n    this._disposed = false;\n    this._options = options;\n    this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n    this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n  }\n  /**\r\n   * For the public to allow to subscribe\r\n   * to events from this Emitter\r\n   */\n\n\n  get event() {\n    if (!this._event) {\n      this._event = (listener, thisArgs, disposables) => {\n        var _a;\n\n        if (!this._listeners) {\n          this._listeners = new LinkedList();\n        }\n\n        const firstListener = this._listeners.isEmpty();\n\n        if (firstListener && this._options && this._options.onFirstListenerAdd) {\n          this._options.onFirstListenerAdd(this);\n        }\n\n        const remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n        if (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n          this._options.onFirstListenerDidAdd(this);\n        }\n\n        if (this._options && this._options.onListenerDidAdd) {\n          this._options.onListenerDidAdd(this, listener, thisArgs);\n        } // check and record this emitter for potential leakage\n\n\n        const removeMonitor = (_a = this._leakageMon) === null || _a === void 0 ? void 0 : _a.check(this._listeners.size);\n        const result = toDisposable(() => {\n          if (removeMonitor) {\n            removeMonitor();\n          }\n\n          if (!this._disposed) {\n            remove();\n\n            if (this._options && this._options.onLastListenerRemove) {\n              const hasListeners = this._listeners && !this._listeners.isEmpty();\n\n              if (!hasListeners) {\n                this._options.onLastListenerRemove(this);\n              }\n            }\n          }\n        });\n\n        if (disposables instanceof DisposableStore) {\n          disposables.add(result);\n        } else if (Array.isArray(disposables)) {\n          disposables.push(result);\n        }\n\n        return result;\n      };\n    }\n\n    return this._event;\n  }\n  /**\r\n   * To be kept private to fire an event to\r\n   * subscribers\r\n   */\n\n\n  fire(event) {\n    var _a, _b;\n\n    if (this._listeners) {\n      // put all [listener,event]-pairs into delivery queue\n      // then emit all event. an inner/nested event might be\n      // the driver of this\n      if (!this._deliveryQueue) {\n        this._deliveryQueue = new LinkedList();\n      }\n\n      for (let listener of this._listeners) {\n        this._deliveryQueue.push([listener, event]);\n      } // start/stop performance insight collection\n\n\n      (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n\n      while (this._deliveryQueue.size > 0) {\n        const [listener, event] = this._deliveryQueue.shift();\n\n        try {\n          if (typeof listener === 'function') {\n            listener.call(undefined, event);\n          } else {\n            listener[0].call(listener[1], event);\n          }\n        } catch (e) {\n          onUnexpectedError(e);\n        }\n      }\n\n      (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n    }\n  }\n\n  dispose() {\n    var _a, _b, _c, _d, _e;\n\n    if (!this._disposed) {\n      this._disposed = true;\n      (_a = this._listeners) === null || _a === void 0 ? void 0 : _a.clear();\n      (_b = this._deliveryQueue) === null || _b === void 0 ? void 0 : _b.clear();\n      (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onLastListenerRemove) === null || _d === void 0 ? void 0 : _d.call(_c);\n      (_e = this._leakageMon) === null || _e === void 0 ? void 0 : _e.dispose();\n    }\n  }\n\n}\nexport class PauseableEmitter extends Emitter {\n  constructor(options) {\n    super(options);\n    this._isPaused = 0;\n    this._eventQueue = new LinkedList();\n    this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n  }\n\n  pause() {\n    this._isPaused++;\n  }\n\n  resume() {\n    if (this._isPaused !== 0 && --this._isPaused === 0) {\n      if (this._mergeFn) {\n        // use the merge function to create a single composite\n        // event. make a copy in case firing pauses this emitter\n        const events = Array.from(this._eventQueue);\n\n        this._eventQueue.clear();\n\n        super.fire(this._mergeFn(events));\n      } else {\n        // no merging, fire each event individually and test\n        // that this emitter isn't paused halfway through\n        while (!this._isPaused && this._eventQueue.size !== 0) {\n          super.fire(this._eventQueue.shift());\n        }\n      }\n    }\n  }\n\n  fire(event) {\n    if (this._listeners) {\n      if (this._isPaused !== 0) {\n        this._eventQueue.push(event);\n      } else {\n        super.fire(event);\n      }\n    }\n  }\n\n}\nexport class DebounceEmitter extends PauseableEmitter {\n  constructor(options) {\n    var _a;\n\n    super(options);\n    this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n  }\n\n  fire(event) {\n    if (!this._handle) {\n      this.pause();\n      this._handle = setTimeout(() => {\n        this._handle = undefined;\n        this.resume();\n      }, this._delay);\n    }\n\n    super.fire(event);\n  }\n\n}\n/**\r\n * The EventBufferer is useful in situations in which you want\r\n * to delay firing your events during some code.\r\n * You can wrap that code and be sure that the event will not\r\n * be fired during that wrap.\r\n *\r\n * ```\r\n * const emitter: Emitter;\r\n * const delayer = new EventDelayer();\r\n * const delayedEvent = delayer.wrapEvent(emitter.event);\r\n *\r\n * delayedEvent(console.log);\r\n *\r\n * delayer.bufferEvents(() => {\r\n *   emitter.fire(); // event will not be fired yet\r\n * });\r\n *\r\n * // event will only be fired at this point\r\n * ```\r\n */\n\nexport class EventBufferer {\n  constructor() {\n    this.buffers = [];\n  }\n\n  wrapEvent(event) {\n    return (listener, thisArgs, disposables) => {\n      return event(i => {\n        const buffer = this.buffers[this.buffers.length - 1];\n\n        if (buffer) {\n          buffer.push(() => listener.call(thisArgs, i));\n        } else {\n          listener.call(thisArgs, i);\n        }\n      }, undefined, disposables);\n    };\n  }\n\n  bufferEvents(fn) {\n    const buffer = [];\n    this.buffers.push(buffer);\n    const r = fn();\n    this.buffers.pop();\n    buffer.forEach(flush => flush());\n    return r;\n  }\n\n}\n/**\r\n * A Relay is an event forwarder which functions as a replugabble event pipe.\r\n * Once created, you can connect an input event to it and it will simply forward\r\n * events from that input event through its own `event` property. The `input`\r\n * can be changed at any point in time.\r\n */\n\nexport class Relay {\n  constructor() {\n    this.listening = false;\n    this.inputEvent = Event.None;\n    this.inputEventListener = Disposable.None;\n    this.emitter = new Emitter({\n      onFirstListenerDidAdd: () => {\n        this.listening = true;\n        this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n      },\n      onLastListenerRemove: () => {\n        this.listening = false;\n        this.inputEventListener.dispose();\n      }\n    });\n    this.event = this.emitter.event;\n  }\n\n  set input(event) {\n    this.inputEvent = event;\n\n    if (this.listening) {\n      this.inputEventListener.dispose();\n      this.inputEventListener = event(this.emitter.fire, this.emitter);\n    }\n  }\n\n  dispose() {\n    this.inputEventListener.dispose();\n    this.emitter.dispose();\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n  const handle = setTimeout(callback.bind(context), 0);\n  return {\n    dispose() {\n      clearTimeout(handle);\n    }\n\n  };\n});\nexport var CancellationToken;\n\n(function (CancellationToken) {\n  function isCancellationToken(thing) {\n    if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n      return true;\n    }\n\n    if (thing instanceof MutableToken) {\n      return true;\n    }\n\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n\n    return typeof thing.isCancellationRequested === 'boolean' && typeof thing.onCancellationRequested === 'function';\n  }\n\n  CancellationToken.isCancellationToken = isCancellationToken;\n  CancellationToken.None = Object.freeze({\n    isCancellationRequested: false,\n    onCancellationRequested: Event.None\n  });\n  CancellationToken.Cancelled = Object.freeze({\n    isCancellationRequested: true,\n    onCancellationRequested: shortcutEvent\n  });\n})(CancellationToken || (CancellationToken = {}));\n\nclass MutableToken {\n  constructor() {\n    this._isCancelled = false;\n    this._emitter = null;\n  }\n\n  cancel() {\n    if (!this._isCancelled) {\n      this._isCancelled = true;\n\n      if (this._emitter) {\n        this._emitter.fire(undefined);\n\n        this.dispose();\n      }\n    }\n  }\n\n  get isCancellationRequested() {\n    return this._isCancelled;\n  }\n\n  get onCancellationRequested() {\n    if (this._isCancelled) {\n      return shortcutEvent;\n    }\n\n    if (!this._emitter) {\n      this._emitter = new Emitter();\n    }\n\n    return this._emitter.event;\n  }\n\n  dispose() {\n    if (this._emitter) {\n      this._emitter.dispose();\n\n      this._emitter = null;\n    }\n  }\n\n}\n\nexport class CancellationTokenSource {\n  constructor(parent) {\n    this._token = undefined;\n    this._parentListener = undefined;\n    this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n  }\n\n  get token() {\n    if (!this._token) {\n      // be lazy and create the token only when\n      // actually needed\n      this._token = new MutableToken();\n    }\n\n    return this._token;\n  }\n\n  cancel() {\n    if (!this._token) {\n      // save an object by returning the default\n      // cancelled token when cancellation happens\n      // before someone asks for the token\n      this._token = CancellationToken.Cancelled;\n    } else if (this._token instanceof MutableToken) {\n      // actually cancel\n      this._token.cancel();\n    }\n  }\n\n  dispose(cancel = false) {\n    if (cancel) {\n      this.cancel();\n    }\n\n    if (this._parentListener) {\n      this._parentListener.dispose();\n    }\n\n    if (!this._token) {\n      // ensure to initialize with an empty token if we had none\n      this._token = CancellationToken.None;\n    } else if (this._token instanceof MutableToken) {\n      // actually dispose\n      this._token.dispose();\n    }\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\n\nclass KeyCodeStrMap {\n  constructor() {\n    this._keyCodeToStr = [];\n    this._strToKeyCode = Object.create(null);\n  }\n\n  define(keyCode, str) {\n    this._keyCodeToStr[keyCode] = str;\n    this._strToKeyCode[str.toLowerCase()] = keyCode;\n  }\n\n  keyCodeToStr(keyCode) {\n    return this._keyCodeToStr[keyCode];\n  }\n\n  strToKeyCode(str) {\n    return this._strToKeyCode[str.toLowerCase()] || 0\n    /* Unknown */\n    ;\n  }\n\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\n\n(function () {\n  function define(keyCode, uiLabel, usUserSettingsLabel = uiLabel, generalUserSettingsLabel = usUserSettingsLabel) {\n    uiMap.define(keyCode, uiLabel);\n    userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n    userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n  }\n\n  define(0\n  /* Unknown */\n  , 'unknown');\n  define(1\n  /* Backspace */\n  , 'Backspace');\n  define(2\n  /* Tab */\n  , 'Tab');\n  define(3\n  /* Enter */\n  , 'Enter');\n  define(4\n  /* Shift */\n  , 'Shift');\n  define(5\n  /* Ctrl */\n  , 'Ctrl');\n  define(6\n  /* Alt */\n  , 'Alt');\n  define(7\n  /* PauseBreak */\n  , 'PauseBreak');\n  define(8\n  /* CapsLock */\n  , 'CapsLock');\n  define(9\n  /* Escape */\n  , 'Escape');\n  define(10\n  /* Space */\n  , 'Space');\n  define(11\n  /* PageUp */\n  , 'PageUp');\n  define(12\n  /* PageDown */\n  , 'PageDown');\n  define(13\n  /* End */\n  , 'End');\n  define(14\n  /* Home */\n  , 'Home');\n  define(15\n  /* LeftArrow */\n  , 'LeftArrow', 'Left');\n  define(16\n  /* UpArrow */\n  , 'UpArrow', 'Up');\n  define(17\n  /* RightArrow */\n  , 'RightArrow', 'Right');\n  define(18\n  /* DownArrow */\n  , 'DownArrow', 'Down');\n  define(19\n  /* Insert */\n  , 'Insert');\n  define(20\n  /* Delete */\n  , 'Delete');\n  define(21\n  /* KEY_0 */\n  , '0');\n  define(22\n  /* KEY_1 */\n  , '1');\n  define(23\n  /* KEY_2 */\n  , '2');\n  define(24\n  /* KEY_3 */\n  , '3');\n  define(25\n  /* KEY_4 */\n  , '4');\n  define(26\n  /* KEY_5 */\n  , '5');\n  define(27\n  /* KEY_6 */\n  , '6');\n  define(28\n  /* KEY_7 */\n  , '7');\n  define(29\n  /* KEY_8 */\n  , '8');\n  define(30\n  /* KEY_9 */\n  , '9');\n  define(31\n  /* KEY_A */\n  , 'A');\n  define(32\n  /* KEY_B */\n  , 'B');\n  define(33\n  /* KEY_C */\n  , 'C');\n  define(34\n  /* KEY_D */\n  , 'D');\n  define(35\n  /* KEY_E */\n  , 'E');\n  define(36\n  /* KEY_F */\n  , 'F');\n  define(37\n  /* KEY_G */\n  , 'G');\n  define(38\n  /* KEY_H */\n  , 'H');\n  define(39\n  /* KEY_I */\n  , 'I');\n  define(40\n  /* KEY_J */\n  , 'J');\n  define(41\n  /* KEY_K */\n  , 'K');\n  define(42\n  /* KEY_L */\n  , 'L');\n  define(43\n  /* KEY_M */\n  , 'M');\n  define(44\n  /* KEY_N */\n  , 'N');\n  define(45\n  /* KEY_O */\n  , 'O');\n  define(46\n  /* KEY_P */\n  , 'P');\n  define(47\n  /* KEY_Q */\n  , 'Q');\n  define(48\n  /* KEY_R */\n  , 'R');\n  define(49\n  /* KEY_S */\n  , 'S');\n  define(50\n  /* KEY_T */\n  , 'T');\n  define(51\n  /* KEY_U */\n  , 'U');\n  define(52\n  /* KEY_V */\n  , 'V');\n  define(53\n  /* KEY_W */\n  , 'W');\n  define(54\n  /* KEY_X */\n  , 'X');\n  define(55\n  /* KEY_Y */\n  , 'Y');\n  define(56\n  /* KEY_Z */\n  , 'Z');\n  define(57\n  /* Meta */\n  , 'Meta');\n  define(58\n  /* ContextMenu */\n  , 'ContextMenu');\n  define(59\n  /* F1 */\n  , 'F1');\n  define(60\n  /* F2 */\n  , 'F2');\n  define(61\n  /* F3 */\n  , 'F3');\n  define(62\n  /* F4 */\n  , 'F4');\n  define(63\n  /* F5 */\n  , 'F5');\n  define(64\n  /* F6 */\n  , 'F6');\n  define(65\n  /* F7 */\n  , 'F7');\n  define(66\n  /* F8 */\n  , 'F8');\n  define(67\n  /* F9 */\n  , 'F9');\n  define(68\n  /* F10 */\n  , 'F10');\n  define(69\n  /* F11 */\n  , 'F11');\n  define(70\n  /* F12 */\n  , 'F12');\n  define(71\n  /* F13 */\n  , 'F13');\n  define(72\n  /* F14 */\n  , 'F14');\n  define(73\n  /* F15 */\n  , 'F15');\n  define(74\n  /* F16 */\n  , 'F16');\n  define(75\n  /* F17 */\n  , 'F17');\n  define(76\n  /* F18 */\n  , 'F18');\n  define(77\n  /* F19 */\n  , 'F19');\n  define(78\n  /* NumLock */\n  , 'NumLock');\n  define(79\n  /* ScrollLock */\n  , 'ScrollLock');\n  define(80\n  /* US_SEMICOLON */\n  , ';', ';', 'OEM_1');\n  define(81\n  /* US_EQUAL */\n  , '=', '=', 'OEM_PLUS');\n  define(82\n  /* US_COMMA */\n  , ',', ',', 'OEM_COMMA');\n  define(83\n  /* US_MINUS */\n  , '-', '-', 'OEM_MINUS');\n  define(84\n  /* US_DOT */\n  , '.', '.', 'OEM_PERIOD');\n  define(85\n  /* US_SLASH */\n  , '/', '/', 'OEM_2');\n  define(86\n  /* US_BACKTICK */\n  , '`', '`', 'OEM_3');\n  define(110\n  /* ABNT_C1 */\n  , 'ABNT_C1');\n  define(111\n  /* ABNT_C2 */\n  , 'ABNT_C2');\n  define(87\n  /* US_OPEN_SQUARE_BRACKET */\n  , '[', '[', 'OEM_4');\n  define(88\n  /* US_BACKSLASH */\n  , '\\\\', '\\\\', 'OEM_5');\n  define(89\n  /* US_CLOSE_SQUARE_BRACKET */\n  , ']', ']', 'OEM_6');\n  define(90\n  /* US_QUOTE */\n  , '\\'', '\\'', 'OEM_7');\n  define(91\n  /* OEM_8 */\n  , 'OEM_8');\n  define(92\n  /* OEM_102 */\n  , 'OEM_102');\n  define(93\n  /* NUMPAD_0 */\n  , 'NumPad0');\n  define(94\n  /* NUMPAD_1 */\n  , 'NumPad1');\n  define(95\n  /* NUMPAD_2 */\n  , 'NumPad2');\n  define(96\n  /* NUMPAD_3 */\n  , 'NumPad3');\n  define(97\n  /* NUMPAD_4 */\n  , 'NumPad4');\n  define(98\n  /* NUMPAD_5 */\n  , 'NumPad5');\n  define(99\n  /* NUMPAD_6 */\n  , 'NumPad6');\n  define(100\n  /* NUMPAD_7 */\n  , 'NumPad7');\n  define(101\n  /* NUMPAD_8 */\n  , 'NumPad8');\n  define(102\n  /* NUMPAD_9 */\n  , 'NumPad9');\n  define(103\n  /* NUMPAD_MULTIPLY */\n  , 'NumPad_Multiply');\n  define(104\n  /* NUMPAD_ADD */\n  , 'NumPad_Add');\n  define(105\n  /* NUMPAD_SEPARATOR */\n  , 'NumPad_Separator');\n  define(106\n  /* NUMPAD_SUBTRACT */\n  , 'NumPad_Subtract');\n  define(107\n  /* NUMPAD_DECIMAL */\n  , 'NumPad_Decimal');\n  define(108\n  /* NUMPAD_DIVIDE */\n  , 'NumPad_Divide');\n})();\n\nexport var KeyCodeUtils;\n\n(function (KeyCodeUtils) {\n  function toString(keyCode) {\n    return uiMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toString = toString;\n\n  function fromString(key) {\n    return uiMap.strToKeyCode(key);\n  }\n\n  KeyCodeUtils.fromString = fromString;\n\n  function toUserSettingsUS(keyCode) {\n    return userSettingsUSMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n\n  function toUserSettingsGeneral(keyCode) {\n    return userSettingsGeneralMap.keyCodeToStr(keyCode);\n  }\n\n  KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n\n  function fromUserSettings(key) {\n    return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n  }\n\n  KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\n\nexport function KeyChord(firstPart, secondPart) {\n  const chordPart = (secondPart & 0x0000FFFF) << 16 >>> 0;\n  return (firstPart | chordPart) >>> 0;\n}\nexport function createKeybinding(keybinding, OS) {\n  if (keybinding === 0) {\n    return null;\n  }\n\n  const firstPart = (keybinding & 0x0000FFFF) >>> 0;\n  const chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\n  if (chordPart !== 0) {\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS), createSimpleKeybinding(chordPart, OS)]);\n  }\n\n  return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n  const ctrlCmd = keybinding & 2048\n  /* CtrlCmd */\n  ? true : false;\n  const winCtrl = keybinding & 256\n  /* WinCtrl */\n  ? true : false;\n  const ctrlKey = OS === 2\n  /* Macintosh */\n  ? winCtrl : ctrlCmd;\n  const shiftKey = keybinding & 1024\n  /* Shift */\n  ? true : false;\n  const altKey = keybinding & 512\n  /* Alt */\n  ? true : false;\n  const metaKey = OS === 2\n  /* Macintosh */\n  ? ctrlCmd : winCtrl;\n  const keyCode = keybinding & 255\n  /* KeyCode */\n  ;\n  return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nexport class SimpleKeybinding {\n  constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n    this.ctrlKey = ctrlKey;\n    this.shiftKey = shiftKey;\n    this.altKey = altKey;\n    this.metaKey = metaKey;\n    this.keyCode = keyCode;\n  }\n\n  equals(other) {\n    return this.ctrlKey === other.ctrlKey && this.shiftKey === other.shiftKey && this.altKey === other.altKey && this.metaKey === other.metaKey && this.keyCode === other.keyCode;\n  }\n\n  isModifierKey() {\n    return this.keyCode === 0\n    /* Unknown */\n    || this.keyCode === 5\n    /* Ctrl */\n    || this.keyCode === 57\n    /* Meta */\n    || this.keyCode === 6\n    /* Alt */\n    || this.keyCode === 4\n    /* Shift */\n    ;\n  }\n\n  toChord() {\n    return new ChordKeybinding([this]);\n  }\n  /**\r\n   * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\r\n   */\n\n\n  isDuplicateModifierCase() {\n    return this.ctrlKey && this.keyCode === 5\n    /* Ctrl */\n    || this.shiftKey && this.keyCode === 4\n    /* Shift */\n    || this.altKey && this.keyCode === 6\n    /* Alt */\n    || this.metaKey && this.keyCode === 57\n    /* Meta */\n    ;\n  }\n\n}\nexport class ChordKeybinding {\n  constructor(parts) {\n    if (parts.length === 0) {\n      throw illegalArgument(`parts`);\n    }\n\n    this.parts = parts;\n  }\n\n}\nexport class ResolvedKeybindingPart {\n  constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n    this.ctrlKey = ctrlKey;\n    this.shiftKey = shiftKey;\n    this.altKey = altKey;\n    this.metaKey = metaKey;\n    this.keyLabel = kbLabel;\n    this.keyAriaLabel = kbAriaLabel;\n  }\n\n}\n/**\r\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\r\n */\n\nexport class ResolvedKeybinding {}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n\n(function (AccessibilitySupport) {\n  /**\r\n   * This should be the browser case where it is not known if a screen reader is attached or no.\r\n   */\n  AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n  AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n  AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\n\nexport var CompletionItemInsertTextRule;\n\n(function (CompletionItemInsertTextRule) {\n  /**\r\n   * Adjust whitespace/indentation of multiline insert texts to\r\n   * match the current line indentation.\r\n   */\n  CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n  /**\r\n   * `insertText` is a snippet.\r\n   */\n\n  CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n\nexport var CompletionItemKind;\n\n(function (CompletionItemKind) {\n  CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n  CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n  CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n  CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n  CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n  CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n  CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n  CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n  CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n  CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n  CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n  CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n  CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n  CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n  CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n  CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n  CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n  CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n  CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n  CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n  CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n  CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n  CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n  CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n  CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n  CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n  CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n  CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\n\nexport var CompletionItemTag;\n\n(function (CompletionItemTag) {\n  CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\r\n * How a suggest provider was triggered.\r\n */\n\n\nexport var CompletionTriggerKind;\n\n(function (CompletionTriggerKind) {\n  CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n  CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n  CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\r\n * A positioning preference for rendering content widgets.\r\n */\n\n\nexport var ContentWidgetPositionPreference;\n\n(function (ContentWidgetPositionPreference) {\n  /**\r\n   * Place the content widget exactly at a position\r\n   */\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n  /**\r\n   * Place the content widget above a position\r\n   */\n\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n  /**\r\n   * Place the content widget below a position\r\n   */\n\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\r\n * Describes the reason the cursor has changed its position.\r\n */\n\n\nexport var CursorChangeReason;\n\n(function (CursorChangeReason) {\n  /**\r\n   * Unknown or not set.\r\n   */\n  CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n  /**\r\n   * A `model.setValue()` was called.\r\n   */\n\n  CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n  /**\r\n   * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\r\n   */\n\n  CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n  /**\r\n   * There was an explicit user gesture.\r\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n  /**\r\n   * There was a Paste.\r\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n  /**\r\n   * There was an Undo.\r\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n  /**\r\n   * There was a Redo.\r\n   */\n\n  CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\r\n * The default end of line to use when instantiating models.\r\n */\n\n\nexport var DefaultEndOfLine;\n\n(function (DefaultEndOfLine) {\n  /**\r\n   * Use line feed (\\n) as the end of line character.\r\n   */\n  DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n  /**\r\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n   */\n\n  DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\r\n * A document highlight kind.\r\n */\n\n\nexport var DocumentHighlightKind;\n\n(function (DocumentHighlightKind) {\n  /**\r\n   * A textual occurrence.\r\n   */\n  DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n  /**\r\n   * Read-access of a symbol, like reading a variable.\r\n   */\n\n  DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n  /**\r\n   * Write-access of a symbol, like writing to a variable.\r\n   */\n\n  DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\r\n * Configuration options for auto indentation in the editor\r\n */\n\n\nexport var EditorAutoIndentStrategy;\n\n(function (EditorAutoIndentStrategy) {\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\n\nexport var EditorOption;\n\n(function (EditorOption) {\n  EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n  EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n  EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n  EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n  EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n  EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\n  EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\n  EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\n  EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\n  EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\n  EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\n  EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\n  EditorOption[EditorOption[\"codeLens\"] = 12] = \"codeLens\";\n  EditorOption[EditorOption[\"codeLensFontFamily\"] = 13] = \"codeLensFontFamily\";\n  EditorOption[EditorOption[\"codeLensFontSize\"] = 14] = \"codeLensFontSize\";\n  EditorOption[EditorOption[\"colorDecorators\"] = 15] = \"colorDecorators\";\n  EditorOption[EditorOption[\"columnSelection\"] = 16] = \"columnSelection\";\n  EditorOption[EditorOption[\"comments\"] = 17] = \"comments\";\n  EditorOption[EditorOption[\"contextmenu\"] = 18] = \"contextmenu\";\n  EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 19] = \"copyWithSyntaxHighlighting\";\n  EditorOption[EditorOption[\"cursorBlinking\"] = 20] = \"cursorBlinking\";\n  EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 21] = \"cursorSmoothCaretAnimation\";\n  EditorOption[EditorOption[\"cursorStyle\"] = 22] = \"cursorStyle\";\n  EditorOption[EditorOption[\"cursorSurroundingLines\"] = 23] = \"cursorSurroundingLines\";\n  EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 24] = \"cursorSurroundingLinesStyle\";\n  EditorOption[EditorOption[\"cursorWidth\"] = 25] = \"cursorWidth\";\n  EditorOption[EditorOption[\"disableLayerHinting\"] = 26] = \"disableLayerHinting\";\n  EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 27] = \"disableMonospaceOptimizations\";\n  EditorOption[EditorOption[\"domReadOnly\"] = 28] = \"domReadOnly\";\n  EditorOption[EditorOption[\"dragAndDrop\"] = 29] = \"dragAndDrop\";\n  EditorOption[EditorOption[\"emptySelectionClipboard\"] = 30] = \"emptySelectionClipboard\";\n  EditorOption[EditorOption[\"extraEditorClassName\"] = 31] = \"extraEditorClassName\";\n  EditorOption[EditorOption[\"fastScrollSensitivity\"] = 32] = \"fastScrollSensitivity\";\n  EditorOption[EditorOption[\"find\"] = 33] = \"find\";\n  EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 34] = \"fixedOverflowWidgets\";\n  EditorOption[EditorOption[\"folding\"] = 35] = \"folding\";\n  EditorOption[EditorOption[\"foldingStrategy\"] = 36] = \"foldingStrategy\";\n  EditorOption[EditorOption[\"foldingHighlight\"] = 37] = \"foldingHighlight\";\n  EditorOption[EditorOption[\"foldingImportsByDefault\"] = 38] = \"foldingImportsByDefault\";\n  EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 39] = \"unfoldOnClickAfterEndOfLine\";\n  EditorOption[EditorOption[\"fontFamily\"] = 40] = \"fontFamily\";\n  EditorOption[EditorOption[\"fontInfo\"] = 41] = \"fontInfo\";\n  EditorOption[EditorOption[\"fontLigatures\"] = 42] = \"fontLigatures\";\n  EditorOption[EditorOption[\"fontSize\"] = 43] = \"fontSize\";\n  EditorOption[EditorOption[\"fontWeight\"] = 44] = \"fontWeight\";\n  EditorOption[EditorOption[\"formatOnPaste\"] = 45] = \"formatOnPaste\";\n  EditorOption[EditorOption[\"formatOnType\"] = 46] = \"formatOnType\";\n  EditorOption[EditorOption[\"glyphMargin\"] = 47] = \"glyphMargin\";\n  EditorOption[EditorOption[\"gotoLocation\"] = 48] = \"gotoLocation\";\n  EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 49] = \"hideCursorInOverviewRuler\";\n  EditorOption[EditorOption[\"highlightActiveIndentGuide\"] = 50] = \"highlightActiveIndentGuide\";\n  EditorOption[EditorOption[\"hover\"] = 51] = \"hover\";\n  EditorOption[EditorOption[\"inDiffEditor\"] = 52] = \"inDiffEditor\";\n  EditorOption[EditorOption[\"inlineSuggest\"] = 53] = \"inlineSuggest\";\n  EditorOption[EditorOption[\"letterSpacing\"] = 54] = \"letterSpacing\";\n  EditorOption[EditorOption[\"lightbulb\"] = 55] = \"lightbulb\";\n  EditorOption[EditorOption[\"lineDecorationsWidth\"] = 56] = \"lineDecorationsWidth\";\n  EditorOption[EditorOption[\"lineHeight\"] = 57] = \"lineHeight\";\n  EditorOption[EditorOption[\"lineNumbers\"] = 58] = \"lineNumbers\";\n  EditorOption[EditorOption[\"lineNumbersMinChars\"] = 59] = \"lineNumbersMinChars\";\n  EditorOption[EditorOption[\"linkedEditing\"] = 60] = \"linkedEditing\";\n  EditorOption[EditorOption[\"links\"] = 61] = \"links\";\n  EditorOption[EditorOption[\"matchBrackets\"] = 62] = \"matchBrackets\";\n  EditorOption[EditorOption[\"minimap\"] = 63] = \"minimap\";\n  EditorOption[EditorOption[\"mouseStyle\"] = 64] = \"mouseStyle\";\n  EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 65] = \"mouseWheelScrollSensitivity\";\n  EditorOption[EditorOption[\"mouseWheelZoom\"] = 66] = \"mouseWheelZoom\";\n  EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 67] = \"multiCursorMergeOverlapping\";\n  EditorOption[EditorOption[\"multiCursorModifier\"] = 68] = \"multiCursorModifier\";\n  EditorOption[EditorOption[\"multiCursorPaste\"] = 69] = \"multiCursorPaste\";\n  EditorOption[EditorOption[\"occurrencesHighlight\"] = 70] = \"occurrencesHighlight\";\n  EditorOption[EditorOption[\"overviewRulerBorder\"] = 71] = \"overviewRulerBorder\";\n  EditorOption[EditorOption[\"overviewRulerLanes\"] = 72] = \"overviewRulerLanes\";\n  EditorOption[EditorOption[\"padding\"] = 73] = \"padding\";\n  EditorOption[EditorOption[\"parameterHints\"] = 74] = \"parameterHints\";\n  EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 75] = \"peekWidgetDefaultFocus\";\n  EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 76] = \"definitionLinkOpensInPeek\";\n  EditorOption[EditorOption[\"quickSuggestions\"] = 77] = \"quickSuggestions\";\n  EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 78] = \"quickSuggestionsDelay\";\n  EditorOption[EditorOption[\"readOnly\"] = 79] = \"readOnly\";\n  EditorOption[EditorOption[\"renameOnType\"] = 80] = \"renameOnType\";\n  EditorOption[EditorOption[\"renderControlCharacters\"] = 81] = \"renderControlCharacters\";\n  EditorOption[EditorOption[\"renderIndentGuides\"] = 82] = \"renderIndentGuides\";\n  EditorOption[EditorOption[\"renderFinalNewline\"] = 83] = \"renderFinalNewline\";\n  EditorOption[EditorOption[\"renderLineHighlight\"] = 84] = \"renderLineHighlight\";\n  EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 85] = \"renderLineHighlightOnlyWhenFocus\";\n  EditorOption[EditorOption[\"renderValidationDecorations\"] = 86] = \"renderValidationDecorations\";\n  EditorOption[EditorOption[\"renderWhitespace\"] = 87] = \"renderWhitespace\";\n  EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 88] = \"revealHorizontalRightPadding\";\n  EditorOption[EditorOption[\"roundedSelection\"] = 89] = \"roundedSelection\";\n  EditorOption[EditorOption[\"rulers\"] = 90] = \"rulers\";\n  EditorOption[EditorOption[\"scrollbar\"] = 91] = \"scrollbar\";\n  EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 92] = \"scrollBeyondLastColumn\";\n  EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 93] = \"scrollBeyondLastLine\";\n  EditorOption[EditorOption[\"scrollPredominantAxis\"] = 94] = \"scrollPredominantAxis\";\n  EditorOption[EditorOption[\"selectionClipboard\"] = 95] = \"selectionClipboard\";\n  EditorOption[EditorOption[\"selectionHighlight\"] = 96] = \"selectionHighlight\";\n  EditorOption[EditorOption[\"selectOnLineNumbers\"] = 97] = \"selectOnLineNumbers\";\n  EditorOption[EditorOption[\"showFoldingControls\"] = 98] = \"showFoldingControls\";\n  EditorOption[EditorOption[\"showUnused\"] = 99] = \"showUnused\";\n  EditorOption[EditorOption[\"snippetSuggestions\"] = 100] = \"snippetSuggestions\";\n  EditorOption[EditorOption[\"smartSelect\"] = 101] = \"smartSelect\";\n  EditorOption[EditorOption[\"smoothScrolling\"] = 102] = \"smoothScrolling\";\n  EditorOption[EditorOption[\"stickyTabStops\"] = 103] = \"stickyTabStops\";\n  EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 104] = \"stopRenderingLineAfter\";\n  EditorOption[EditorOption[\"suggest\"] = 105] = \"suggest\";\n  EditorOption[EditorOption[\"suggestFontSize\"] = 106] = \"suggestFontSize\";\n  EditorOption[EditorOption[\"suggestLineHeight\"] = 107] = \"suggestLineHeight\";\n  EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 108] = \"suggestOnTriggerCharacters\";\n  EditorOption[EditorOption[\"suggestSelection\"] = 109] = \"suggestSelection\";\n  EditorOption[EditorOption[\"tabCompletion\"] = 110] = \"tabCompletion\";\n  EditorOption[EditorOption[\"tabIndex\"] = 111] = \"tabIndex\";\n  EditorOption[EditorOption[\"unusualLineTerminators\"] = 112] = \"unusualLineTerminators\";\n  EditorOption[EditorOption[\"useShadowDOM\"] = 113] = \"useShadowDOM\";\n  EditorOption[EditorOption[\"useTabStops\"] = 114] = \"useTabStops\";\n  EditorOption[EditorOption[\"wordSeparators\"] = 115] = \"wordSeparators\";\n  EditorOption[EditorOption[\"wordWrap\"] = 116] = \"wordWrap\";\n  EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 117] = \"wordWrapBreakAfterCharacters\";\n  EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 118] = \"wordWrapBreakBeforeCharacters\";\n  EditorOption[EditorOption[\"wordWrapColumn\"] = 119] = \"wordWrapColumn\";\n  EditorOption[EditorOption[\"wordWrapOverride1\"] = 120] = \"wordWrapOverride1\";\n  EditorOption[EditorOption[\"wordWrapOverride2\"] = 121] = \"wordWrapOverride2\";\n  EditorOption[EditorOption[\"wrappingIndent\"] = 122] = \"wrappingIndent\";\n  EditorOption[EditorOption[\"wrappingStrategy\"] = 123] = \"wrappingStrategy\";\n  EditorOption[EditorOption[\"showDeprecated\"] = 124] = \"showDeprecated\";\n  EditorOption[EditorOption[\"inlayHints\"] = 125] = \"inlayHints\";\n  EditorOption[EditorOption[\"editorClassName\"] = 126] = \"editorClassName\";\n  EditorOption[EditorOption[\"pixelRatio\"] = 127] = \"pixelRatio\";\n  EditorOption[EditorOption[\"tabFocusMode\"] = 128] = \"tabFocusMode\";\n  EditorOption[EditorOption[\"layoutInfo\"] = 129] = \"layoutInfo\";\n  EditorOption[EditorOption[\"wrappingInfo\"] = 130] = \"wrappingInfo\";\n})(EditorOption || (EditorOption = {}));\n/**\r\n * End of line character preference.\r\n */\n\n\nexport var EndOfLinePreference;\n\n(function (EndOfLinePreference) {\n  /**\r\n   * Use the end of line character identified in the text buffer.\r\n   */\n  EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n  /**\r\n   * Use line feed (\\n) as the end of line character.\r\n   */\n\n  EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n  /**\r\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n   */\n\n  EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\r\n * End of line character preference.\r\n */\n\n\nexport var EndOfLineSequence;\n\n(function (EndOfLineSequence) {\n  /**\r\n   * Use line feed (\\n) as the end of line character.\r\n   */\n  EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n  /**\r\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n   */\n\n  EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\n\n\nexport var IndentAction;\n\n(function (IndentAction) {\n  /**\r\n   * Insert new line and copy the previous line's indentation.\r\n   */\n  IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n  /**\r\n   * Insert new line and indent once (relative to the previous line's indentation).\r\n   */\n\n  IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n  /**\r\n   * Insert two new lines:\r\n   *  - the first one indented which will hold the cursor\r\n   *  - the second one at the same indentation level\r\n   */\n\n  IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n  /**\r\n   * Insert new line and outdent once (relative to the previous line's indentation).\r\n   */\n\n  IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\n\nexport var InlayHintKind;\n\n(function (InlayHintKind) {\n  InlayHintKind[InlayHintKind[\"Other\"] = 0] = \"Other\";\n  InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n  InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\r\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\r\n */\n\n\nexport var InlineCompletionTriggerKind;\n\n(function (InlineCompletionTriggerKind) {\n  /**\r\n   * Completion was triggered automatically while editing.\r\n   * It is sufficient to return a single completion item in this case.\r\n   */\n  InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n  /**\r\n   * Completion was triggered explicitly by a user gesture.\r\n   * Return multiple completion items to enable cycling through them.\r\n   */\n\n  InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\n\n\nexport var KeyCode;\n\n(function (KeyCode) {\n  KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n  /**\r\n   * Placed first to cover the 0 value of the enum.\r\n   */\n\n  KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n  KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n  KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n  KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n  KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n  KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n  KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n  KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n  KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n  KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n  KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n  KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n  KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n  KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n  KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n  KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n  KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n  KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n  KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n  KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n  KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n  KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n  KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n  KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n  KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n  KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n  KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n  KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n  KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n  KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n  KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n  KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n  KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n  KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n  KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n  KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n  KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n  KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n  KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n  KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n  KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n  KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n  KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n  KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n  KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n  KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n  KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n  KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n  KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n  KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n  KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n  KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n  KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n  KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n  KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n  KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n  KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n  KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n  KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n  KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n  KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n  KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n  KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n  KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n  KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n  KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n  KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n  KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n  KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n  KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n  KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n  KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n  KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n  KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n  KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n  KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n  KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n  KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n  KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n  KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   * For the US standard keyboard, the ';:' key\r\n   */\n\n  KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n  /**\r\n   * For any country/region, the '+' key\r\n   * For the US standard keyboard, the '=+' key\r\n   */\n\n  KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n  /**\r\n   * For any country/region, the ',' key\r\n   * For the US standard keyboard, the ',<' key\r\n   */\n\n  KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n  /**\r\n   * For any country/region, the '-' key\r\n   * For the US standard keyboard, the '-_' key\r\n   */\n\n  KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n  /**\r\n   * For any country/region, the '.' key\r\n   * For the US standard keyboard, the '.>' key\r\n   */\n\n  KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   * For the US standard keyboard, the '/?' key\r\n   */\n\n  KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   * For the US standard keyboard, the '`~' key\r\n   */\n\n  KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   * For the US standard keyboard, the '[{' key\r\n   */\n\n  KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   * For the US standard keyboard, the '\\|' key\r\n   */\n\n  KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   * For the US standard keyboard, the ']}' key\r\n   */\n\n  KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   * For the US standard keyboard, the ''\"' key\r\n   */\n\n  KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n  /**\r\n   * Used for miscellaneous characters; it can vary by keyboard.\r\n   */\n\n  KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n  /**\r\n   * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n   */\n\n  KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n  KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n  KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n  KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n  KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n  KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n  KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n  KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n  KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n  KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n  KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n  KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n  KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n  KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n  KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n  KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n  KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n  /**\r\n   * Cover all key codes when IME is processing input.\r\n   */\n\n  KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n  KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n  KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n  /**\r\n   * Placed last to cover the length of the enum.\r\n   * Please do not depend on this value!\r\n   */\n\n  KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n\nexport var MarkerSeverity;\n\n(function (MarkerSeverity) {\n  MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n  MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n  MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n  MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n\nexport var MarkerTag;\n\n(function (MarkerTag) {\n  MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n  MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\r\n * Position in the minimap to render the decoration.\r\n */\n\n\nexport var MinimapPosition;\n\n(function (MinimapPosition) {\n  MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n  MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\r\n * Type of hit element with the mouse in the editor.\r\n */\n\n\nexport var MouseTargetType;\n\n(function (MouseTargetType) {\n  /**\r\n   * Mouse is on top of an unknown element.\r\n   */\n  MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  /**\r\n   * Mouse is on top of the textarea used for input.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n  /**\r\n   * Mouse is on top of the glyph margin\r\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n  /**\r\n   * Mouse is on top of the line numbers\r\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n  /**\r\n   * Mouse is on top of the line decorations\r\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n  /**\r\n   * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n  /**\r\n   * Mouse is on top of text in the content.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n  /**\r\n   * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n  /**\r\n   * Mouse is on top of a view zone in the content.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n  /**\r\n   * Mouse is on top of a content widget.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n  /**\r\n   * Mouse is on top of the decorations overview ruler.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n  /**\r\n   * Mouse is on top of a scrollbar.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n  /**\r\n   * Mouse is on top of an overlay widget.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n  /**\r\n   * Mouse is outside of the editor.\r\n   */\n\n  MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\r\n * A positioning preference for rendering overlay widgets.\r\n */\n\n\nexport var OverlayWidgetPositionPreference;\n\n(function (OverlayWidgetPositionPreference) {\n  /**\r\n   * Position the overlay widget in the top right corner\r\n   */\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n  /**\r\n   * Position the overlay widget in the bottom right corner\r\n   */\n\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n  /**\r\n   * Position the overlay widget in the top center\r\n   */\n\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\r\n * Vertical Lane in the overview ruler of the editor.\r\n */\n\n\nexport var OverviewRulerLane;\n\n(function (OverviewRulerLane) {\n  OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n  OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n  OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n  OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n\nexport var RenderLineNumbersType;\n\n(function (RenderLineNumbersType) {\n  RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n  RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n\nexport var RenderMinimap;\n\n(function (RenderMinimap) {\n  RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n  RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n  RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n\nexport var ScrollType;\n\n(function (ScrollType) {\n  ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n  ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n\nexport var ScrollbarVisibility;\n\n(function (ScrollbarVisibility) {\n  ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n  ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n  ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\r\n * The direction of a selection.\r\n */\n\n\nexport var SelectionDirection;\n\n(function (SelectionDirection) {\n  /**\r\n   * The selection starts above where it ends.\r\n   */\n  SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n  /**\r\n   * The selection starts below where it ends.\r\n   */\n\n  SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\n\nexport var SignatureHelpTriggerKind;\n\n(function (SignatureHelpTriggerKind) {\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\r\n * A symbol kind.\r\n */\n\n\nexport var SymbolKind;\n\n(function (SymbolKind) {\n  SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n  SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n  SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n  SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n  SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n  SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n  SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n  SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n  SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n  SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n  SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n  SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n  SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n  SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n  SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n  SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n  SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n  SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n  SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n  SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n  SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n  SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n  SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n  SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n  SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n  SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n\nexport var SymbolTag;\n\n(function (SymbolTag) {\n  SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\r\n * The kind of animation in which the editor's cursor should be rendered.\r\n */\n\n\nexport var TextEditorCursorBlinkingStyle;\n\n(function (TextEditorCursorBlinkingStyle) {\n  /**\r\n   * Hidden\r\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n  /**\r\n   * Blinking\r\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n  /**\r\n   * Blinking with smooth fading\r\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n  /**\r\n   * Blinking with prolonged filled state and smooth fading\r\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n  /**\r\n   * Expand collapse animation on the y axis\r\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n  /**\r\n   * No-Blinking\r\n   */\n\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\r\n * The style in which the editor's cursor should be rendered.\r\n */\n\n\nexport var TextEditorCursorStyle;\n\n(function (TextEditorCursorStyle) {\n  /**\r\n   * As a vertical line (sitting between two characters).\r\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n  /**\r\n   * As a block (sitting on top of a character).\r\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n  /**\r\n   * As a horizontal line (sitting under a character).\r\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n  /**\r\n   * As a thin vertical line (sitting between two characters).\r\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n  /**\r\n   * As an outlined block (sitting on top of a character).\r\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n  /**\r\n   * As a thin horizontal line (sitting under a character).\r\n   */\n\n  TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\r\n * Describes the behavior of decorations when typing/editing near their edges.\r\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\r\n */\n\n\nexport var TrackedRangeStickiness;\n\n(function (TrackedRangeStickiness) {\n  TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\r\n * Describes how to indent wrapped lines.\r\n */\n\n\nexport var WrappingIndent;\n\n(function (WrappingIndent) {\n  /**\r\n   * No indentation => wrapped lines begin at column 1.\r\n   */\n  WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n  /**\r\n   * Same => wrapped lines get the same indentation as the parent.\r\n   */\n\n  WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n  /**\r\n   * Indent => wrapped lines get +1 indentation toward the parent.\r\n   */\n\n  WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n  /**\r\n   * DeepIndent => wrapped lines get +2 indentation toward the parent.\r\n   */\n\n  WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\r\n * A selection in the editor.\r\n * The selection is a range that has an orientation.\r\n */\n\nexport class Selection extends Range {\n  constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n    super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n    this.selectionStartLineNumber = selectionStartLineNumber;\n    this.selectionStartColumn = selectionStartColumn;\n    this.positionLineNumber = positionLineNumber;\n    this.positionColumn = positionColumn;\n  }\n  /**\r\n   * Transform to a human-readable representation.\r\n   */\n\n\n  toString() {\n    return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n  }\n  /**\r\n   * Test if equals other selection.\r\n   */\n\n\n  equalsSelection(other) {\n    return Selection.selectionsEqual(this, other);\n  }\n  /**\r\n   * Test if the two selections are equal.\r\n   */\n\n\n  static selectionsEqual(a, b) {\n    return a.selectionStartLineNumber === b.selectionStartLineNumber && a.selectionStartColumn === b.selectionStartColumn && a.positionLineNumber === b.positionLineNumber && a.positionColumn === b.positionColumn;\n  }\n  /**\r\n   * Get directions (LTR or RTL).\r\n   */\n\n\n  getDirection() {\n    if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n      return 0\n      /* LTR */\n      ;\n    }\n\n    return 1\n    /* RTL */\n    ;\n  }\n  /**\r\n   * Create a new selection with a different `positionLineNumber` and `positionColumn`.\r\n   */\n\n\n  setEndPosition(endLineNumber, endColumn) {\n    if (this.getDirection() === 0\n    /* LTR */\n    ) {\n      return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n\n    return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n  }\n  /**\r\n   * Get the position at `positionLineNumber` and `positionColumn`.\r\n   */\n\n\n  getPosition() {\n    return new Position(this.positionLineNumber, this.positionColumn);\n  }\n  /**\r\n   * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\r\n   */\n\n\n  setStartPosition(startLineNumber, startColumn) {\n    if (this.getDirection() === 0\n    /* LTR */\n    ) {\n      return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n\n    return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n  } // ----\n\n  /**\r\n   * Create a `Selection` from one or two positions\r\n   */\n\n\n  static fromPositions(start, end = start) {\n    return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n  }\n  /**\r\n   * Create a `Selection` from an `ISelection`.\r\n   */\n\n\n  static liftSelection(sel) {\n    return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n  }\n  /**\r\n   * `a` equals `b`.\r\n   */\n\n\n  static selectionsArrEqual(a, b) {\n    if (a && !b || !a && b) {\n      return false;\n    }\n\n    if (!a && !b) {\n      return true;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0, len = a.length; i < len; i++) {\n      if (!this.selectionsEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\r\n   * Test if `obj` is an `ISelection`.\r\n   */\n\n\n  static isISelection(obj) {\n    return obj && typeof obj.selectionStartLineNumber === 'number' && typeof obj.selectionStartColumn === 'number' && typeof obj.positionLineNumber === 'number' && typeof obj.positionColumn === 'number';\n  }\n  /**\r\n   * Create with a direction.\r\n   */\n\n\n  static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n    if (direction === 0\n    /* LTR */\n    ) {\n      return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n\n    return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nexport class Token {\n  constructor(offset, type, language) {\n    this._tokenBrand = undefined;\n    this.offset = offset | 0; // @perf\n\n    this.type = type;\n    this.language = language;\n  }\n\n  toString() {\n    return '(' + this.offset + ', ' + this.type + ')';\n  }\n\n}\nexport class TokenizationResult {\n  constructor(tokens, endState) {\n    this._tokenizationResultBrand = undefined;\n    this.tokens = tokens;\n    this.endState = endState;\n  }\n\n}\nexport class TokenizationResult2 {\n  constructor(tokens, endState) {\n    this._tokenizationResult2Brand = undefined;\n    this.tokens = tokens;\n    this.endState = endState;\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nexport class KeyMod {\n  static chord(firstPart, secondPart) {\n    return KeyChord(firstPart, secondPart);\n  }\n\n}\nKeyMod.CtrlCmd = 2048\n/* CtrlCmd */\n;\nKeyMod.Shift = 1024\n/* Shift */\n;\nKeyMod.Alt = 512\n/* Alt */\n;\nKeyMod.WinCtrl = 256\n/* WinCtrl */\n;\nexport function createMonacoBaseAPI() {\n  return {\n    editor: undefined,\n    languages: undefined,\n    CancellationTokenSource: CancellationTokenSource,\n    Emitter: Emitter,\n    KeyCode: standaloneEnums.KeyCode,\n    KeyMod: KeyMod,\n    Position: Position,\n    Range: Range,\n    Selection: Selection,\n    SelectionDirection: standaloneEnums.SelectionDirection,\n    MarkerSeverity: standaloneEnums.MarkerSeverity,\n    MarkerTag: standaloneEnums.MarkerTag,\n    Uri: URI,\n    Token: Token\n  };\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n/**\r\n * @internal\r\n */\n\nclass MirrorModel extends BaseMirrorModel {\n  get uri() {\n    return this._uri;\n  }\n\n  get eol() {\n    return this._eol;\n  }\n\n  getValue() {\n    return this.getText();\n  }\n\n  getLinesContent() {\n    return this._lines.slice(0);\n  }\n\n  getLineCount() {\n    return this._lines.length;\n  }\n\n  getLineContent(lineNumber) {\n    return this._lines[lineNumber - 1];\n  }\n\n  getWordAtPosition(position, wordDefinition) {\n    let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n\n    if (wordAtText) {\n      return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n    }\n\n    return null;\n  }\n\n  words(wordDefinition) {\n    const lines = this._lines;\n\n    const wordenize = this._wordenize.bind(this);\n\n    let lineNumber = 0;\n    let lineText = '';\n    let wordRangesIdx = 0;\n    let wordRanges = [];\n    return {\n      *[Symbol.iterator]() {\n        while (true) {\n          if (wordRangesIdx < wordRanges.length) {\n            const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n            wordRangesIdx += 1;\n            yield value;\n          } else {\n            if (lineNumber < lines.length) {\n              lineText = lines[lineNumber];\n              wordRanges = wordenize(lineText, wordDefinition);\n              wordRangesIdx = 0;\n              lineNumber += 1;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n\n    };\n  }\n\n  getLineWords(lineNumber, wordDefinition) {\n    let content = this._lines[lineNumber - 1];\n\n    let ranges = this._wordenize(content, wordDefinition);\n\n    let words = [];\n\n    for (const range of ranges) {\n      words.push({\n        word: content.substring(range.start, range.end),\n        startColumn: range.start + 1,\n        endColumn: range.end + 1\n      });\n    }\n\n    return words;\n  }\n\n  _wordenize(content, wordDefinition) {\n    const result = [];\n    let match;\n    wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n    while (match = wordDefinition.exec(content)) {\n      if (match[0].length === 0) {\n        // it did match the empty string\n        break;\n      }\n\n      result.push({\n        start: match.index,\n        end: match.index + match[0].length\n      });\n    }\n\n    return result;\n  }\n\n  getValueInRange(range) {\n    range = this._validateRange(range);\n\n    if (range.startLineNumber === range.endLineNumber) {\n      return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n    }\n\n    let lineEnding = this._eol;\n    let startLineIndex = range.startLineNumber - 1;\n    let endLineIndex = range.endLineNumber - 1;\n    let resultLines = [];\n    resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\n    for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n      resultLines.push(this._lines[i]);\n    }\n\n    resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n    return resultLines.join(lineEnding);\n  }\n\n  offsetAt(position) {\n    position = this._validatePosition(position);\n\n    this._ensureLineStarts();\n\n    return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n  }\n\n  positionAt(offset) {\n    offset = Math.floor(offset);\n    offset = Math.max(0, offset);\n\n    this._ensureLineStarts();\n\n    let out = this._lineStarts.getIndexOf(offset);\n\n    let lineLength = this._lines[out.index].length; // Ensure we return a valid position\n\n    return {\n      lineNumber: 1 + out.index,\n      column: 1 + Math.min(out.remainder, lineLength)\n    };\n  }\n\n  _validateRange(range) {\n    const start = this._validatePosition({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n\n    const end = this._validatePosition({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n\n    if (start.lineNumber !== range.startLineNumber || start.column !== range.startColumn || end.lineNumber !== range.endLineNumber || end.column !== range.endColumn) {\n      return {\n        startLineNumber: start.lineNumber,\n        startColumn: start.column,\n        endLineNumber: end.lineNumber,\n        endColumn: end.column\n      };\n    }\n\n    return range;\n  }\n\n  _validatePosition(position) {\n    if (!Position.isIPosition(position)) {\n      throw new Error('bad position');\n    }\n\n    let {\n      lineNumber,\n      column\n    } = position;\n    let hasChanged = false;\n\n    if (lineNumber < 1) {\n      lineNumber = 1;\n      column = 1;\n      hasChanged = true;\n    } else if (lineNumber > this._lines.length) {\n      lineNumber = this._lines.length;\n      column = this._lines[lineNumber - 1].length + 1;\n      hasChanged = true;\n    } else {\n      let maxCharacter = this._lines[lineNumber - 1].length + 1;\n\n      if (column < 1) {\n        column = 1;\n        hasChanged = true;\n      } else if (column > maxCharacter) {\n        column = maxCharacter;\n        hasChanged = true;\n      }\n    }\n\n    if (!hasChanged) {\n      return position;\n    } else {\n      return {\n        lineNumber,\n        column\n      };\n    }\n  }\n\n}\n/**\r\n * @internal\r\n */\n\n\nexport class EditorSimpleWorker {\n  constructor(host, foreignModuleFactory) {\n    this._host = host;\n    this._models = Object.create(null);\n    this._foreignModuleFactory = foreignModuleFactory;\n    this._foreignModule = null;\n  }\n\n  dispose() {\n    this._models = Object.create(null);\n  }\n\n  _getModel(uri) {\n    return this._models[uri];\n  }\n\n  _getModels() {\n    let all = [];\n    Object.keys(this._models).forEach(key => all.push(this._models[key]));\n    return all;\n  }\n\n  acceptNewModel(data) {\n    this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n  }\n\n  acceptModelChanged(strURL, e) {\n    if (!this._models[strURL]) {\n      return;\n    }\n\n    let model = this._models[strURL];\n    model.onEvents(e);\n  }\n\n  acceptRemovedModel(strURL) {\n    if (!this._models[strURL]) {\n      return;\n    }\n\n    delete this._models[strURL];\n  } // ---- BEGIN diff --------------------------------------------------------------------------\n\n\n  computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const original = this._getModel(originalUrl);\n\n      const modified = this._getModel(modifiedUrl);\n\n      if (!original || !modified) {\n        return null;\n      }\n\n      const originalLines = original.getLinesContent();\n      const modifiedLines = modified.getLinesContent();\n      const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n        shouldComputeCharChanges: true,\n        shouldPostProcessCharChanges: true,\n        shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n        shouldMakePrettyDiff: true,\n        maxComputationTime: maxComputationTime\n      });\n      const diffResult = diffComputer.computeDiff();\n      const identical = diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified);\n      return {\n        quitEarly: diffResult.quitEarly,\n        identical: identical,\n        changes: diffResult.changes\n      };\n    });\n  }\n\n  _modelsAreIdentical(original, modified) {\n    const originalLineCount = original.getLineCount();\n    const modifiedLineCount = modified.getLineCount();\n\n    if (originalLineCount !== modifiedLineCount) {\n      return false;\n    }\n\n    for (let line = 1; line <= originalLineCount; line++) {\n      const originalLine = original.getLineContent(line);\n      const modifiedLine = modified.getLineContent(line);\n\n      if (originalLine !== modifiedLine) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  computeMoreMinimalEdits(modelUrl, edits) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const model = this._getModel(modelUrl);\n\n      if (!model) {\n        return edits;\n      }\n\n      const result = [];\n      let lastEol = undefined;\n      edits = edits.slice(0).sort((a, b) => {\n        if (a.range && b.range) {\n          return Range.compareRangesUsingStarts(a.range, b.range);\n        } // eol only changes should go to the end\n\n\n        let aRng = a.range ? 0 : 1;\n        let bRng = b.range ? 0 : 1;\n        return aRng - bRng;\n      });\n\n      for (let {\n        range,\n        text,\n        eol\n      } of edits) {\n        if (typeof eol === 'number') {\n          lastEol = eol;\n        }\n\n        if (Range.isEmpty(range) && !text) {\n          // empty change\n          continue;\n        }\n\n        const original = model.getValueInRange(range);\n        text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n        if (original === text) {\n          // noop\n          continue;\n        } // make sure diff won't take too long\n\n\n        if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n          result.push({\n            range,\n            text\n          });\n          continue;\n        } // compute diff between original and edit.text\n\n\n        const changes = stringDiff(original, text, false);\n        const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n        for (const change of changes) {\n          const start = model.positionAt(editOffset + change.originalStart);\n          const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n          const newEdit = {\n            text: text.substr(change.modifiedStart, change.modifiedLength),\n            range: {\n              startLineNumber: start.lineNumber,\n              startColumn: start.column,\n              endLineNumber: end.lineNumber,\n              endColumn: end.column\n            }\n          };\n\n          if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n            result.push(newEdit);\n          }\n        }\n      }\n\n      if (typeof lastEol === 'number') {\n        result.push({\n          eol: lastEol,\n          text: '',\n          range: {\n            startLineNumber: 0,\n            startColumn: 0,\n            endLineNumber: 0,\n            endColumn: 0\n          }\n        });\n      }\n\n      return result;\n    });\n  } // ---- END minimal edits ---------------------------------------------------------------\n\n\n  computeLinks(modelUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let model = this._getModel(modelUrl);\n\n      if (!model) {\n        return null;\n      }\n\n      return computeLinks(model);\n    });\n  }\n\n  textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const sw = new StopWatch(true);\n      const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n      const seen = new Set();\n\n      outer: for (let url of modelUrls) {\n        const model = this._getModel(url);\n\n        if (!model) {\n          continue;\n        }\n\n        for (let word of model.words(wordDefRegExp)) {\n          if (word === leadingWord || !isNaN(Number(word))) {\n            continue;\n          }\n\n          seen.add(word);\n\n          if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n            break outer;\n          }\n        }\n      }\n\n      return {\n        words: Array.from(seen),\n        duration: sw.elapsed()\n      };\n    });\n  } // ---- END suggest --------------------------------------------------------------------------\n  //#region -- word ranges --\n\n\n  computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let model = this._getModel(modelUrl);\n\n      if (!model) {\n        return Object.create(null);\n      }\n\n      const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n      const result = Object.create(null);\n\n      for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n        let words = model.getLineWords(line, wordDefRegExp);\n\n        for (const word of words) {\n          if (!isNaN(Number(word.word))) {\n            continue;\n          }\n\n          let array = result[word.word];\n\n          if (!array) {\n            array = [];\n            result[word.word] = array;\n          }\n\n          array.push({\n            startLineNumber: line,\n            startColumn: word.startColumn,\n            endLineNumber: line,\n            endColumn: word.endColumn\n          });\n        }\n      }\n\n      return result;\n    });\n  } //#endregion\n\n\n  navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let model = this._getModel(modelUrl);\n\n      if (!model) {\n        return null;\n      }\n\n      let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n      if (range.startColumn === range.endColumn) {\n        range = {\n          startLineNumber: range.startLineNumber,\n          startColumn: range.startColumn,\n          endLineNumber: range.endLineNumber,\n          endColumn: range.endColumn + 1\n        };\n      }\n\n      let selectionText = model.getValueInRange(range);\n      let wordRange = model.getWordAtPosition({\n        lineNumber: range.startLineNumber,\n        column: range.startColumn\n      }, wordDefRegExp);\n\n      if (!wordRange) {\n        return null;\n      }\n\n      let word = model.getValueInRange(wordRange);\n      let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n      return result;\n    });\n  } // ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\n  loadForeignModule(moduleId, createData, foreignHostMethods) {\n    const proxyMethodRequest = (method, args) => {\n      return this._host.fhr(method, args);\n    };\n\n    const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n    let ctx = {\n      host: foreignHost,\n      getMirrorModels: () => {\n        return this._getModels();\n      }\n    };\n\n    if (this._foreignModuleFactory) {\n      this._foreignModule = this._foreignModuleFactory(ctx, createData); // static foreing module\n\n      return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n    } // ESM-comment-begin\n    // \t\treturn new Promise<any>((resolve, reject) => {\n    // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n    // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n    // \n    // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n    // \n    // \t\t\t}, reject);\n    // \t\t});\n    // ESM-comment-end\n    // ESM-uncomment-begin\n\n\n    return Promise.reject(new Error(`Unexpected usage`)); // ESM-uncomment-end\n  } // foreign method request\n\n\n  fmr(method, args) {\n    if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n\n    try {\n      return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n} // ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\n\nEditorSimpleWorker._diffLimit = 100000; // ---- BEGIN suggest --------------------------------------------------------------------------\n\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\r\n * Called on the worker side\r\n * @internal\r\n */\n\nexport function create(host) {\n  return new EditorSimpleWorker(host, null);\n}\n\nif (typeof importScripts === 'function') {\n  // Running in a web worker\n  globals.monaco = createMonacoBaseAPI();\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nexport class MirrorTextModel {\n  constructor(uri, lines, eol, versionId) {\n    this._uri = uri;\n    this._lines = lines;\n    this._eol = eol;\n    this._versionId = versionId;\n    this._lineStarts = null;\n    this._cachedTextValue = null;\n  }\n\n  dispose() {\n    this._lines.length = 0;\n  }\n\n  get version() {\n    return this._versionId;\n  }\n\n  getText() {\n    if (this._cachedTextValue === null) {\n      this._cachedTextValue = this._lines.join(this._eol);\n    }\n\n    return this._cachedTextValue;\n  }\n\n  onEvents(e) {\n    if (e.eol && e.eol !== this._eol) {\n      this._eol = e.eol;\n      this._lineStarts = null;\n    } // Update my lines\n\n\n    const changes = e.changes;\n\n    for (const change of changes) {\n      this._acceptDeleteRange(change.range);\n\n      this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n    }\n\n    this._versionId = e.versionId;\n    this._cachedTextValue = null;\n  }\n\n  _ensureLineStarts() {\n    if (!this._lineStarts) {\n      const eolLength = this._eol.length;\n      const linesLength = this._lines.length;\n      const lineStartValues = new Uint32Array(linesLength);\n\n      for (let i = 0; i < linesLength; i++) {\n        lineStartValues[i] = this._lines[i].length + eolLength;\n      }\n\n      this._lineStarts = new PrefixSumComputer(lineStartValues);\n    }\n  }\n  /**\r\n   * All changes to a line's text go through this method\r\n   */\n\n\n  _setLineText(lineIndex, newValue) {\n    this._lines[lineIndex] = newValue;\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n    }\n  }\n\n  _acceptDeleteRange(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n      if (range.startColumn === range.endColumn) {\n        // Nothing to delete\n        return;\n      } // Delete text on the affected line\n\n\n      this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n\n      return;\n    } // Take remaining text on last line and append it to remaining text on first line\n\n\n    this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)); // Delete middle lines\n\n\n    this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n  }\n\n  _acceptInsertText(position, insertText) {\n    if (insertText.length === 0) {\n      // Nothing to insert\n      return;\n    }\n\n    let insertLines = splitLines(insertText);\n\n    if (insertLines.length === 1) {\n      // Inserting text on one line\n      this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0] + this._lines[position.lineNumber - 1].substring(position.column - 1));\n\n      return;\n    } // Append overflowing text from first line to the end of text to insert\n\n\n    insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1); // Delete overflowing text from first line and insert text on first line\n\n    this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0]); // Insert new lines & store lengths\n\n\n    let newLengths = new Uint32Array(insertLines.length - 1);\n\n    for (let i = 1; i < insertLines.length; i++) {\n      this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\n      newLengths[i - 1] = insertLines[i].length + this._eol.length;\n    }\n\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.insertValues(position.lineNumber, newLengths);\n    }\n  }\n\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n  if (initialized) {\n    return;\n  }\n\n  initialized = true;\n  const simpleWorker = new SimpleWorkerServer(msg => {\n    self.postMessage(msg);\n  }, host => new EditorSimpleWorker(host, foreignModule));\n\n  self.onmessage = e => {\n    simpleWorker.onmessage(e.data);\n  };\n}\n\nself.onmessage = e => {\n  // Ignore first message in this case and initialize if not yet initialized\n  if (!initialized) {\n    initialize(null);\n  }\n};","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\nimport { isWindows, isMacintosh, setImmediate, globals } from './platform.js';\nlet safeProcess; // Native sandbox environment\n\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n  const sandboxProcess = globals.vscode.process;\n  safeProcess = {\n    get platform() {\n      return sandboxProcess.platform;\n    },\n\n    get env() {\n      return sandboxProcess.env;\n    },\n\n    cwd() {\n      return sandboxProcess.cwd();\n    },\n\n    nextTick(callback) {\n      return setImmediate(callback);\n    }\n\n  };\n} // Native node.js environment\nelse if (typeof process !== 'undefined') {\n  safeProcess = {\n    get platform() {\n      return process.platform;\n    },\n\n    get env() {\n      return process.env;\n    },\n\n    cwd() {\n      return process.env['VSCODE_CWD'] || process.cwd();\n    },\n\n    nextTick(callback) {\n      return process.nextTick(callback);\n    }\n\n  };\n} // Web environment\nelse {\n  safeProcess = {\n    // Supported\n    get platform() {\n      return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux';\n    },\n\n    nextTick(callback) {\n      return setImmediate(callback);\n    },\n\n    // Unsupported\n    get env() {\n      return {};\n    },\n\n    cwd() {\n      return '/';\n    }\n\n  };\n}\n/**\r\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\r\n * environments.\r\n *\r\n * Note: in web, this property is hardcoded to be `/`.\r\n */\n\n\nexport const cwd = safeProcess.cwd;\n/**\r\n * Provides safe access to the `env` property in node.js, sandboxed or web\r\n * environments.\r\n *\r\n * Note: in web, this property is hardcoded to be `{}`.\r\n */\n\nexport const env = safeProcess.env;\n/**\r\n * Provides safe access to the `platform` property in node.js, sandboxed or web\r\n * environments.\r\n */\n\nexport const platform = safeProcess.platform;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}